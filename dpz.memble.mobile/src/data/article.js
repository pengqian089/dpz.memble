export default {
    "totals": 45,
    "list": [{
        "id": "625ae7976d2852abbe722b2b",
        "blogTitle": "CommonMark Test",
        "introduction": "Markdown -\u003E CommonMark",
        "blogContents": "\u003Ch1 id=\u0022h1-markdown-syntax\u0022\u003E\u003Ca name=\u0022Markdown: Syntax\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EMarkdown: Syntax\u003C/h1\u003E\u003Cul\u003E\r\n\u003Cli\u003E\u003Ca href=\u0022#overview\u0022\u003EOverview\u003C/a\u003E\u003Cul\u003E\r\n\u003Cli\u003E\u003Ca href=\u0022#philosophy\u0022\u003EPhilosophy\u003C/a\u003E\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#html\u0022\u003EInline HTML\u003C/a\u003E\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#autoescape\u0022\u003EAutomatic Escaping for Special Characters\u003C/a\u003E\u003C/li\u003E\u003C/ul\u003E\r\n\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#block\u0022\u003EBlock Elements\u003C/a\u003E\u003Cul\u003E\r\n\u003Cli\u003E\u003Ca href=\u0022#p\u0022\u003EParagraphs and Line Breaks\u003C/a\u003E\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#header\u0022\u003EHeaders\u003C/a\u003E\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#blockquote\u0022\u003EBlockquotes\u003C/a\u003E\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#list\u0022\u003ELists\u003C/a\u003E\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#precode\u0022\u003ECode Blocks\u003C/a\u003E\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#hr\u0022\u003EHorizontal Rules\u003C/a\u003E\u003C/li\u003E\u003C/ul\u003E\r\n\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#span\u0022\u003ESpan Elements\u003C/a\u003E\u003Cul\u003E\r\n\u003Cli\u003E\u003Ca href=\u0022#link\u0022\u003ELinks\u003C/a\u003E\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#em\u0022\u003EEmphasis\u003C/a\u003E\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#code\u0022\u003ECode\u003C/a\u003E\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#img\u0022\u003EImages\u003C/a\u003E\u003C/li\u003E\u003C/ul\u003E\r\n\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#misc\u0022\u003EMiscellaneous\u003C/a\u003E\u003Cul\u003E\r\n\u003Cli\u003E\u003Ca href=\u0022#backslash\u0022\u003EBackslash Escapes\u003C/a\u003E\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022#autolink\u0022\u003EAutomatic Links\u003C/a\u003E\u003C/li\u003E\u003C/ul\u003E\r\n\u003C/li\u003E\u003C/ul\u003E\r\n\u003Cp\u003E\u003Cstrong\u003ENote:\u003C/strong\u003E This document is itself written using Markdown; you\u003Cbr\u003Ecan \u003Ca href=\u0022/projects/markdown/syntax.text\u0022\u003Esee the source for it by adding \u2018.text\u2019 to the URL\u003C/a\u003E.\u003C/p\u003E\r\n\u003Chr\u003E\r\n\u003Cp\u003E\u0026lt;h2 id=\u0026quot;overview\u0026quot;\u0026gt;Overview\u0026lt;/h2\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003E\u0026lt;h3 id=\u0026quot;philosophy\u0026quot;\u0026gt;Philosophy\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EMarkdown is intended to be as easy-to-read and easy-to-write as is feasible.\u003C/p\u003E\r\n\u003Cp\u003EReadability, however, is emphasized above all else. A Markdown-formatted\u003Cbr\u003Edocument should be publishable as-is, as plain text, without looking\u003Cbr\u003Elike it\u2019s been marked up with tags or formatting instructions. While\u003Cbr\u003EMarkdown\u2019s syntax has been influenced by several existing text-to-HTML\u003Cbr\u003Efilters \u2014 including \u003Ca href=\u0022http://docutils.sourceforge.net/mirror/setext.html\u0022\u003ESetext\u003C/a\u003E, \u003Ca href=\u0022http://www.aaronsw.com/2002/atx/\u0022\u003Eatx\u003C/a\u003E, \u003Ca href=\u0022http://textism.com/tools/textile/\u0022\u003ETextile\u003C/a\u003E, \u003Ca href=\u0022http://docutils.sourceforge.net/rst.html\u0022\u003EreStructuredText\u003C/a\u003E,\u003Cbr\u003E\u003Ca href=\u0022http://www.triptico.com/software/grutatxt.html\u0022\u003EGrutatext\u003C/a\u003E, and \u003Ca href=\u0022http://ettext.taint.org/doc/\u0022\u003EEtText\u003C/a\u003E \u2014 the single biggest source of\u003Cbr\u003Einspiration for Markdown\u2019s syntax is the format of plain text email.\u003C/p\u003E\r\n\u003Cp\u003ETo this end, Markdown\u2019s syntax is comprised entirely of punctuation\u003Cbr\u003Echaracters, which punctuation characters have been carefully chosen so\u003Cbr\u003Eas to look like what they mean. E.g., asterisks around a word actually\u003Cbr\u003Elook like *emphasis*. Markdown lists look like, well, lists. Even\u003Cbr\u003Eblockquotes look like quoted passages of text, assuming you\u2019ve ever\u003Cbr\u003Eused email.\u003C/p\u003E\r\n\u003Cp\u003E\u0026lt;h3 id=\u0026quot;html\u0026quot;\u0026gt;Inline HTML\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EMarkdown\u2019s syntax is intended for one purpose: to be used as a\u003Cbr\u003Eformat for \u003Cem\u003Ewriting\u003C/em\u003E for the web.\u003C/p\u003E\r\n\u003Cp\u003EMarkdown is not a replacement for HTML, or even close to it. Its\u003Cbr\u003Esyntax is very small, corresponding only to a very small subset of\u003Cbr\u003EHTML tags. The idea is \u003Cem\u003Enot\u003C/em\u003E to create a syntax that makes it easier\u003Cbr\u003Eto insert HTML tags. In my opinion, HTML tags are already easy to\u003Cbr\u003Einsert. The idea for Markdown is to make it easy to read, write, and\u003Cbr\u003Eedit prose. HTML is a \u003Cem\u003Epublishing\u003C/em\u003E format; Markdown is a \u003Cem\u003Ewriting\u003C/em\u003E\u003Cbr\u003Eformat. Thus, Markdown\u2019s formatting syntax only addresses issues that\u003Cbr\u003Ecan be conveyed in plain text.\u003C/p\u003E\r\n\u003Cp\u003EFor any markup that is not covered by Markdown\u2019s syntax, you simply\u003Cbr\u003Euse HTML itself. There\u2019s no need to preface it or delimit it to\u003Cbr\u003Eindicate that you\u2019re switching from Markdown to HTML; you just use\u003Cbr\u003Ethe tags.\u003C/p\u003E\r\n\u003Cp\u003EThe only restrictions are that block-level HTML elements \u2014 e.g. \u003Ccode\u003E\u0026lt;div\u0026gt;\u003C/code\u003E,\u003Cbr\u003E\u003Ccode\u003E\u0026lt;table\u0026gt;\u003C/code\u003E, \u003Ccode\u003E\u0026lt;pre\u0026gt;\u003C/code\u003E, \u003Ccode\u003E\u0026lt;p\u0026gt;\u003C/code\u003E, etc. \u2014 must be separated from surrounding\u003Cbr\u003Econtent by blank lines, and the start and end tags of the block should\u003Cbr\u003Enot be indented with tabs or spaces. Markdown is smart enough not\u003Cbr\u003Eto add extra (unwanted) \u003Ccode\u003E\u0026lt;p\u0026gt;\u003C/code\u003E tags around HTML block-level tags.\u003C/p\u003E\r\n\u003Cp\u003EFor example, to add an HTML table to a Markdown article:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EThis is a regular paragraph.\r\n\r\n\u0026lt;table\u0026gt;\r\n    \u0026lt;tr\u0026gt;\r\n        \u0026lt;td\u0026gt;Foo\u0026lt;/td\u0026gt;\r\n    \u0026lt;/tr\u0026gt;\r\n\u0026lt;/table\u0026gt;\r\n\r\nThis is another regular paragraph.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ENote that Markdown formatting syntax is not processed within block-level\u003Cbr\u003EHTML tags. E.g., you can\u2019t use Markdown-style \u003Ccode\u003E*emphasis*\u003C/code\u003E inside an\u003Cbr\u003EHTML block.\u003C/p\u003E\r\n\u003Cp\u003ESpan-level HTML tags \u2014 e.g. \u003Ccode\u003E\u0026lt;span\u0026gt;\u003C/code\u003E, \u003Ccode\u003E\u0026lt;cite\u0026gt;\u003C/code\u003E, or \u003Ccode\u003E\u0026lt;del\u0026gt;\u003C/code\u003E \u2014 can be\u003Cbr\u003Eused anywhere in a Markdown paragraph, list item, or header. If you\u003Cbr\u003Ewant, you can even use HTML tags instead of Markdown formatting; e.g. if\u003Cbr\u003Eyou\u2019d prefer to use HTML \u003Ccode\u003E\u0026lt;a\u0026gt;\u003C/code\u003E or \u003Ccode\u003E\u0026lt;img\u0026gt;\u003C/code\u003E tags instead of Markdown\u2019s\u003Cbr\u003Elink or image syntax, go right ahead.\u003C/p\u003E\r\n\u003Cp\u003EUnlike block-level HTML tags, Markdown syntax \u003Cem\u003Eis\u003C/em\u003E processed within\u003Cbr\u003Espan-level tags.\u003C/p\u003E\r\n\u003Cp\u003E\u0026lt;h3 id=\u0026quot;autoescape\u0026quot;\u0026gt;Automatic Escaping for Special Characters\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EIn HTML, there are two characters that demand special treatment: \u003Ccode\u003E\u0026lt;\u003C/code\u003E\u003Cbr\u003Eand \u003Ccode\u003E\u0026amp;\u003C/code\u003E. Left angle brackets are used to start tags; ampersands are\u003Cbr\u003Eused to denote HTML entities. If you want to use them as literal\u003Cbr\u003Echaracters, you must escape them as entities, e.g. \u003Ccode\u003E\u0026amp;lt;\u003C/code\u003E, and\u003Cbr\u003E\u003Ccode\u003E\u0026amp;amp;\u003C/code\u003E.\u003C/p\u003E\r\n\u003Cp\u003EAmpersands in particular are bedeviling for web writers. If you want to\u003Cbr\u003Ewrite about \u2018AT\u0026amp;T\u2019, you need to write \u2018\u003Ccode\u003EAT\u0026amp;amp;T\u003C/code\u003E\u2018. You even need to\u003Cbr\u003Eescape ampersands within URLs. Thus, if you want to link to:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003Ehttp://images.google.com/images?num=30\u0026amp;q=larry\u002Bbird\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Eyou need to encode the URL as:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003Ehttp://images.google.com/images?num=30\u0026amp;amp;q=larry\u002Bbird\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Ein your anchor tag \u003Ccode\u003Ehref\u003C/code\u003E attribute. Needless to say, this is easy to\u003Cbr\u003Eforget, and is probably the single most common source of HTML validation\u003Cbr\u003Eerrors in otherwise well-marked-up web sites.\u003C/p\u003E\r\n\u003Cp\u003EMarkdown allows you to use these characters naturally, taking care of\u003Cbr\u003Eall the necessary escaping for you. If you use an ampersand as part of\u003Cbr\u003Ean HTML entity, it remains unchanged; otherwise it will be translated\u003Cbr\u003Einto \u003Ccode\u003E\u0026amp;amp;\u003C/code\u003E.\u003C/p\u003E\r\n\u003Cp\u003ESo, if you want to include a copyright symbol in your article, you can write:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026amp;copy;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Eand Markdown will leave it alone. But if you write:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EAT\u0026amp;T\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EMarkdown will translate it to:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EAT\u0026amp;amp;T\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ESimilarly, because Markdown supports \u003Ca href=\u0022#html\u0022\u003Einline HTML\u003C/a\u003E, if you use\u003Cbr\u003Eangle brackets as delimiters for HTML tags, Markdown will treat them as\u003Cbr\u003Esuch. But if you write:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E4 \u0026lt; 5\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EMarkdown will translate it to:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E4 \u0026amp;lt; 5\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EHowever, inside Markdown code spans and blocks, angle brackets and\u003Cbr\u003Eampersands are \u003Cem\u003Ealways\u003C/em\u003E encoded automatically. This makes it easy to use\u003Cbr\u003EMarkdown to write about HTML code. (As opposed to raw HTML, which is a\u003Cbr\u003Eterrible format for writing about HTML syntax, because every single \u003Ccode\u003E\u0026lt;\u003C/code\u003E\u003Cbr\u003Eand \u003Ccode\u003E\u0026amp;\u003C/code\u003E in your example code needs to be escaped.)\u003C/p\u003E\r\n\u003Chr\u003E\r\n\u003Cp\u003E\u0026lt;h2 id=\u0026quot;block\u0026quot;\u0026gt;Block Elements\u0026lt;/h2\u0026gt;\r\n\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003E\u0026lt;h3 id=\u0026quot;p\u0026quot;\u0026gt;Paragraphs and Line Breaks\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EA paragraph is simply one or more consecutive lines of text, separated\u003Cbr\u003Eby one or more blank lines. (A blank line is any line that looks like a\u003Cbr\u003Eblank line \u2014 a line containing nothing but spaces or tabs is considered\u003Cbr\u003Eblank.) Normal paragraphs should not be indented with spaces or tabs.\u003C/p\u003E\r\n\u003Cp\u003EThe implication of the \u201Cone or more consecutive lines of text\u201D rule is\u003Cbr\u003Ethat Markdown supports \u201Chard-wrapped\u201D text paragraphs. This differs\u003Cbr\u003Esignificantly from most other text-to-HTML formatters (including Movable\u003Cbr\u003EType\u2019s \u201CConvert Line Breaks\u201D option) which translate every line break\u003Cbr\u003Echaracter in a paragraph into a \u003Ccode\u003E\u0026lt;br /\u0026gt;\u003C/code\u003E tag.\u003C/p\u003E\r\n\u003Cp\u003EWhen you \u003Cem\u003Edo\u003C/em\u003E want to insert a \u003Ccode\u003E\u0026lt;br /\u0026gt;\u003C/code\u003E break tag using Markdown, you\u003Cbr\u003Eend a line with two or more spaces, then type return.\u003C/p\u003E\r\n\u003Cp\u003EYes, this takes a tad more effort to create a \u003Ccode\u003E\u0026lt;br /\u0026gt;\u003C/code\u003E, but a simplistic\u003Cbr\u003E\u201Cevery line break is a \u003Ccode\u003E\u0026lt;br /\u0026gt;\u003C/code\u003E\u201C rule wouldn\u2019t work for Markdown.\u003Cbr\u003EMarkdown\u2019s email-style \u003Ca href=\u0022#blockquote\u0022\u003Eblockquoting\u003C/a\u003E and multi-paragraph \u003Ca href=\u0022#list\u0022\u003Elist items\u003C/a\u003E\u003Cbr\u003Ework best \u2014 and look better \u2014 when you format them with hard breaks.\u003C/p\u003E\r\n\u003Cp\u003E\u0026lt;h3 id=\u0026quot;header\u0026quot;\u0026gt;Headers\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EMarkdown supports two styles of headers, \u003Ca href=\u0022http://docutils.sourceforge.net/mirror/setext.html\u0022\u003ESetext\u003C/a\u003E and \u003Ca href=\u0022http://www.aaronsw.com/2002/atx/\u0022\u003Eatx\u003C/a\u003E.\u003C/p\u003E\r\n\u003Cp\u003ESetext-style headers are \u201Cunderlined\u201D using equal signs (for first-level\u003Cbr\u003Eheaders) and dashes (for second-level headers). For example:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EThis is an H1\r\n=============\r\n\r\nThis is an H2\r\n-------------\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EAny number of underlining \u003Ccode\u003E=\u003C/code\u003E\u2018s or \u003Ccode\u003E-\u003C/code\u003E\u2018s will work.\u003C/p\u003E\r\n\u003Cp\u003EAtx-style headers use 1-6 hash characters at the start of the line,\u003Cbr\u003Ecorresponding to header levels 1-6. For example:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E# This is an H1\r\n\r\n## This is an H2\r\n\r\n###### This is an H6\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EOptionally, you may \u201Cclose\u201D atx-style headers. This is purely\u003Cbr\u003Ecosmetic \u2014 you can use this if you think it looks better. The\u003Cbr\u003Eclosing hashes don\u2019t even need to match the number of hashes\u003Cbr\u003Eused to open the header. (The number of opening hashes\u003Cbr\u003Edetermines the header level.) :\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E# This is an H1 #\r\n\r\n## This is an H2 ##\r\n\r\n### This is an H3 ######\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003E\u0026lt;h3 id=\u0026quot;blockquote\u0026quot;\u0026gt;Blockquotes\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EMarkdown uses email-style \u003Ccode\u003E\u0026gt;\u003C/code\u003E characters for blockquoting. If you\u2019re\u003Cbr\u003Efamiliar with quoting passages of text in an email message, then you\u003Cbr\u003Eknow how to create a blockquote in Markdown. It looks best if you hard\u003Cbr\u003Ewrap the text and put a \u003Ccode\u003E\u0026gt;\u003C/code\u003E before every line:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\r\n\u0026gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\r\n\u0026gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\r\n\u0026gt; \r\n\u0026gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\r\n\u0026gt; id sem consectetuer libero luctus adipiscing.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EMarkdown allows you to be lazy and only put the \u003Ccode\u003E\u0026gt;\u003C/code\u003E before the first\u003Cbr\u003Eline of a hard-wrapped paragraph:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\r\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\r\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\r\n\r\n\u0026gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\r\nid sem consectetuer libero luctus adipiscing.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EBlockquotes can be nested (i.e. a blockquote-in-a-blockquote) by\u003Cbr\u003Eadding additional levels of \u003Ccode\u003E\u0026gt;\u003C/code\u003E:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026gt; This is the first level of quoting.\r\n\u0026gt;\r\n\u0026gt; \u0026gt; This is nested blockquote.\r\n\u0026gt;\r\n\u0026gt; Back to the first level.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EBlockquotes can contain other Markdown elements, including headers, lists,\u003Cbr\u003Eand code blocks:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026gt; ## This is a header.\r\n\u0026gt; \r\n\u0026gt; 1.   This is the first list item.\r\n\u0026gt; 2.   This is the second list item.\r\n\u0026gt; \r\n\u0026gt; Here\u0026#39;s some example code:\r\n\u0026gt; \r\n\u0026gt;     return shell_exec(\u0026quot;echo $input | $markdown_script\u0026quot;);\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EAny decent text editor should make email-style quoting easy. For\u003Cbr\u003Eexample, with BBEdit, you can make a selection and choose Increase\u003Cbr\u003EQuote Level from the Text menu.\u003C/p\u003E\r\n\u003Cp\u003E\u0026lt;h3 id=\u0026quot;list\u0026quot;\u0026gt;Lists\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EMarkdown supports ordered (numbered) and unordered (bulleted) lists.\u003C/p\u003E\r\n\u003Cp\u003EUnordered lists use asterisks, pluses, and hyphens \u2014 interchangably\u003Cbr\u003E\u2014 as list markers:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E*   Red\r\n*   Green\r\n*   Blue\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Eis equivalent to:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u002B   Red\r\n\u002B   Green\r\n\u002B   Blue\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Eand:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E-   Red\r\n-   Green\r\n-   Blue\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EOrdered lists use numbers followed by periods:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E1.  Bird\r\n2.  McHale\r\n3.  Parish\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIt\u2019s important to note that the actual numbers you use to mark the\u003Cbr\u003Elist have no effect on the HTML output Markdown produces. The HTML\u003Cbr\u003EMarkdown produces from the above list is:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;ol\u0026gt;\r\n\u0026lt;li\u0026gt;Bird\u0026lt;/li\u0026gt;\r\n\u0026lt;li\u0026gt;McHale\u0026lt;/li\u0026gt;\r\n\u0026lt;li\u0026gt;Parish\u0026lt;/li\u0026gt;\r\n\u0026lt;/ol\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIf you instead wrote the list in Markdown like this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E1.  Bird\r\n1.  McHale\r\n1.  Parish\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Eor even:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E3. Bird\r\n1. McHale\r\n8. Parish\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Eyou\u2019d get the exact same HTML output. The point is, if you want to,\u003Cbr\u003Eyou can use ordinal numbers in your ordered Markdown lists, so that\u003Cbr\u003Ethe numbers in your source match the numbers in your published HTML.\u003Cbr\u003EBut if you want to be lazy, you don\u2019t have to.\u003C/p\u003E\r\n\u003Cp\u003EIf you do use lazy list numbering, however, you should still start the\u003Cbr\u003Elist with the number 1. At some point in the future, Markdown may support\u003Cbr\u003Estarting ordered lists at an arbitrary number.\u003C/p\u003E\r\n\u003Cp\u003EList markers typically start at the left margin, but may be indented by\u003Cbr\u003Eup to three spaces. List markers must be followed by one or more spaces\u003Cbr\u003Eor a tab.\u003C/p\u003E\r\n\u003Cp\u003ETo make lists look nice, you can wrap items with hanging indents:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\r\n    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\r\n    viverra nec, fringilla in, laoreet vitae, risus.\r\n*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\r\n    Suspendisse id sem consectetuer libero luctus adipiscing.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EBut if you want to be lazy, you don\u2019t have to:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\r\nAliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\r\nviverra nec, fringilla in, laoreet vitae, risus.\r\n*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\r\nSuspendisse id sem consectetuer libero luctus adipiscing.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIf list items are separated by blank lines, Markdown will wrap the\u003Cbr\u003Eitems in \u003Ccode\u003E\u0026lt;p\u0026gt;\u003C/code\u003E tags in the HTML output. For example, this input:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E*   Bird\r\n*   Magic\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Ewill turn into:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;ul\u0026gt;\r\n\u0026lt;li\u0026gt;Bird\u0026lt;/li\u0026gt;\r\n\u0026lt;li\u0026gt;Magic\u0026lt;/li\u0026gt;\r\n\u0026lt;/ul\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EBut this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E*   Bird\r\n\r\n*   Magic\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Ewill turn into:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;ul\u0026gt;\r\n\u0026lt;li\u0026gt;\u0026lt;p\u0026gt;Bird\u0026lt;/p\u0026gt;\u0026lt;/li\u0026gt;\r\n\u0026lt;li\u0026gt;\u0026lt;p\u0026gt;Magic\u0026lt;/p\u0026gt;\u0026lt;/li\u0026gt;\r\n\u0026lt;/ul\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EList items may consist of multiple paragraphs. Each subsequent\u003Cbr\u003Eparagraph in a list item must be indented by either 4 spaces\u003Cbr\u003Eor one tab:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E1.  This is a list item with two paragraphs. Lorem ipsum dolor\r\n    sit amet, consectetuer adipiscing elit. Aliquam hendrerit\r\n    mi posuere lectus.\r\n\r\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet\r\n    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\r\n    sit amet velit.\r\n\r\n2.  Suspendisse id sem consectetuer libero luctus adipiscing.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIt looks nice if you indent every line of the subsequent\u003Cbr\u003Eparagraphs, but here again, Markdown will allow you to be\u003Cbr\u003Elazy:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E*   This is a list item with two paragraphs.\r\n\r\n    This is the second paragraph in the list item. You\u0026#39;re\r\nonly required to indent the first line. Lorem ipsum dolor\r\nsit amet, consectetuer adipiscing elit.\r\n\r\n*   Another item in the same list.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ETo put a blockquote within a list item, the blockquote\u2019s \u003Ccode\u003E\u0026gt;\u003C/code\u003E\u003Cbr\u003Edelimiters need to be indented:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E*   A list item with a blockquote:\r\n\r\n    \u0026gt; This is a blockquote\r\n    \u0026gt; inside a list item.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ETo put a code block within a list item, the code block needs\u003Cbr\u003Eto be indented \u003Cem\u003Etwice\u003C/em\u003E \u2014 8 spaces or two tabs:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E*   A list item with a code block:\r\n\r\n        \u0026lt;code goes here\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIt\u2019s worth noting that it\u2019s possible to trigger an ordered list by\u003Cbr\u003Eaccident, by writing something like this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E1986. What a great season.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIn other words, a \u003Cem\u003Enumber-period-space\u003C/em\u003E sequence at the beginning of a\u003Cbr\u003Eline. To avoid this, you can backslash-escape the period:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E1986\\. What a great season.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003E\u0026lt;h3 id=\u0026quot;precode\u0026quot;\u0026gt;Code Blocks\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EPre-formatted code blocks are used for writing about programming or\u003Cbr\u003Emarkup source code. Rather than forming normal paragraphs, the lines\u003Cbr\u003Eof a code block are interpreted literally. Markdown wraps a code block\u003Cbr\u003Ein both \u003Ccode\u003E\u0026lt;pre\u0026gt;\u003C/code\u003E and \u003Ccode\u003E\u0026lt;code\u0026gt;\u003C/code\u003E tags.\u003C/p\u003E\r\n\u003Cp\u003ETo produce a code block in Markdown, simply indent every line of the\u003Cbr\u003Eblock by at least 4 spaces or 1 tab. For example, given this input:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EThis is a normal paragraph:\r\n\r\n    This is a code block.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EMarkdown will generate:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;p\u0026gt;This is a normal paragraph:\u0026lt;/p\u0026gt;\r\n\r\n\u0026lt;pre\u0026gt;\u0026lt;code\u0026gt;This is a code block.\r\n\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EOne level of indentation \u2014 4 spaces or 1 tab \u2014 is removed from each\u003Cbr\u003Eline of the code block. For example, this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EHere is an example of AppleScript:\r\n\r\n    tell application \u0026quot;Foo\u0026quot;\r\n        beep\r\n    end tell\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Ewill turn into:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;p\u0026gt;Here is an example of AppleScript:\u0026lt;/p\u0026gt;\r\n\r\n\u0026lt;pre\u0026gt;\u0026lt;code\u0026gt;tell application \u0026quot;Foo\u0026quot;\r\n    beep\r\nend tell\r\n\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EA code block continues until it reaches a line that is not indented\u003Cbr\u003E(or the end of the article).\u003C/p\u003E\r\n\u003Cp\u003EWithin a code block, ampersands (\u003Ccode\u003E\u0026amp;\u003C/code\u003E) and angle brackets (\u003Ccode\u003E\u0026lt;\u003C/code\u003E and \u003Ccode\u003E\u0026gt;\u003C/code\u003E)\u003Cbr\u003Eare automatically converted into HTML entities. This makes it very\u003Cbr\u003Eeasy to include example HTML source code using Markdown \u2014 just paste\u003Cbr\u003Eit and indent it, and Markdown will handle the hassle of encoding the\u003Cbr\u003Eampersands and angle brackets. For example, this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E    \u0026lt;div class=\u0026quot;footer\u0026quot;\u0026gt;\r\n        \u0026amp;copy; 2004 Foo Corporation\r\n    \u0026lt;/div\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Ewill turn into:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;pre\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;div class=\u0026quot;footer\u0026quot;\u0026amp;gt;\r\n    \u0026amp;amp;copy; 2004 Foo Corporation\r\n\u0026amp;lt;/div\u0026amp;gt;\r\n\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ERegular Markdown syntax is not processed within code blocks. E.g.,\u003Cbr\u003Easterisks are just literal asterisks within a code block. This means\u003Cbr\u003Eit\u2019s also easy to use Markdown to write about Markdown\u2019s own syntax.\u003C/p\u003E\r\n\u003Cp\u003E\u0026lt;h3 id=\u0026quot;hr\u0026quot;\u0026gt;Horizontal Rules\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EYou can produce a horizontal rule tag (\u003Ccode\u003E\u0026lt;hr /\u0026gt;\u003C/code\u003E) by placing three or\u003Cbr\u003Emore hyphens, asterisks, or underscores on a line by themselves. If you\u003Cbr\u003Ewish, you may use spaces between the hyphens or asterisks. Each of the\u003Cbr\u003Efollowing lines will produce a horizontal rule:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E* * *\r\n\r\n***\r\n\r\n*****\r\n\r\n- - -\r\n\r\n---------------------------------------\r\n\u003C/code\u003E\u003C/pre\u003E\u003Chr\u003E\r\n\u003Cp\u003E\u0026lt;h2 id=\u0026quot;span\u0026quot;\u0026gt;Span Elements\u0026lt;/h2\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003E\u0026lt;h3 id=\u0026quot;link\u0026quot;\u0026gt;Links\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EMarkdown supports two style of links: \u003Cem\u003Einline\u003C/em\u003E and \u003Cem\u003Ereference\u003C/em\u003E.\u003C/p\u003E\r\n\u003Cp\u003EIn both styles, the link text is delimited by [square brackets].\u003C/p\u003E\r\n\u003Cp\u003ETo create an inline link, use a set of regular parentheses immediately\u003Cbr\u003Eafter the link text\u2019s closing square bracket. Inside the parentheses,\u003Cbr\u003Eput the URL where you want the link to point, along with an \u003Cem\u003Eoptional\u003C/em\u003E\u003Cbr\u003Etitle for the link, surrounded in quotes. For example:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EThis is [an example](http://example.com/ \u0026quot;Title\u0026quot;) inline link.\r\n\r\n[This link](http://example.net/) has no title attribute.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EWill produce:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;p\u0026gt;This is \u0026lt;a href=\u0026quot;http://example.com/\u0026quot; title=\u0026quot;Title\u0026quot;\u0026gt;\r\nan example\u0026lt;/a\u0026gt; inline link.\u0026lt;/p\u0026gt;\r\n\r\n\u0026lt;p\u0026gt;\u0026lt;a href=\u0026quot;http://example.net/\u0026quot;\u0026gt;This link\u0026lt;/a\u0026gt; has no\r\ntitle attribute.\u0026lt;/p\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIf you\u2019re referring to a local resource on the same server, you can\u003Cbr\u003Euse relative paths:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003ESee my [About](/about/) page for details.   \r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EReference-style links use a second set of square brackets, inside\u003Cbr\u003Ewhich you place a label of your choosing to identify the link:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EThis is [an example][id] reference-style link.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EYou can optionally use a space to separate the sets of brackets:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EThis is [an example] [id] reference-style link.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EThen, anywhere in the document, you define your link label like this,\u003Cbr\u003Eon a line by itself:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E[id]: http://example.com/  \u0026quot;Optional Title Here\u0026quot;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EThat is:\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003ESquare brackets containing the link identifier (optionally\u003Cbr\u003Eindented from the left margin using up to three spaces);\u003C/li\u003E\u003Cli\u003Efollowed by a colon;\u003C/li\u003E\u003Cli\u003Efollowed by one or more spaces (or tabs);\u003C/li\u003E\u003Cli\u003Efollowed by the URL for the link;\u003C/li\u003E\u003Cli\u003Eoptionally followed by a title attribute for the link, enclosed\u003Cbr\u003Ein double or single quotes, or enclosed in parentheses.\u003C/li\u003E\u003C/ul\u003E\r\n\u003Cp\u003EThe following three link definitions are equivalent:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E[foo]: http://example.com/  \u0026quot;Optional Title Here\u0026quot;\r\n[foo]: http://example.com/  \u0026#39;Optional Title Here\u0026#39;\r\n[foo]: http://example.com/  (Optional Title Here)\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003E\u003Cstrong\u003ENote:\u003C/strong\u003E There is a known bug in Markdown.pl 1.0.1 which prevents\u003Cbr\u003Esingle quotes from being used to delimit link titles.\u003C/p\u003E\r\n\u003Cp\u003EThe link URL may, optionally, be surrounded by angle brackets:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E[id]: \u0026lt;http://example.com/\u0026gt;  \u0026quot;Optional Title Here\u0026quot;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EYou can put the title attribute on the next line and use extra spaces\u003Cbr\u003Eor tabs for padding, which tends to look better with longer URLs:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E[id]: http://example.com/longish/path/to/resource/here\r\n    \u0026quot;Optional Title Here\u0026quot;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ELink definitions are only used for creating links during Markdown\u003Cbr\u003Eprocessing, and are stripped from your document in the HTML output.\u003C/p\u003E\r\n\u003Cp\u003ELink definition names may consist of letters, numbers, spaces, and\u003Cbr\u003Epunctuation \u2014 but they are \u003Cem\u003Enot\u003C/em\u003E case sensitive. E.g. these two\u003Cbr\u003Elinks:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E[link text][a]\r\n[link text][A]\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Eare equivalent.\u003C/p\u003E\r\n\u003Cp\u003EThe \u003Cem\u003Eimplicit link name\u003C/em\u003E shortcut allows you to omit the name of the\u003Cbr\u003Elink, in which case the link text itself is used as the name.\u003Cbr\u003EJust use an empty set of square brackets \u2014 e.g., to link the word\u003Cbr\u003E\u201CGoogle\u201D to the google.com web site, you could simply write:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E[Google][]\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EAnd then define the link:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E[Google]: http://google.com/\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EBecause link names may contain spaces, this shortcut even works for\u003Cbr\u003Emultiple words in the link text:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EVisit [Daring Fireball][] for more information.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EAnd then define the link:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E[Daring Fireball]: http://daringfireball.net/\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ELink definitions can be placed anywhere in your Markdown document. I\u003Cbr\u003Etend to put them immediately after each paragraph in which they\u2019re\u003Cbr\u003Eused, but if you want, you can put them all at the end of your\u003Cbr\u003Edocument, sort of like footnotes.\u003C/p\u003E\r\n\u003Cp\u003EHere\u2019s an example of reference links in action:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EI get 10 times more traffic from [Google] [1] than from\r\n[Yahoo] [2] or [MSN] [3].\r\n\r\n  [1]: http://google.com/        \u0026quot;Google\u0026quot;\r\n  [2]: http://search.yahoo.com/  \u0026quot;Yahoo Search\u0026quot;\r\n  [3]: http://search.msn.com/    \u0026quot;MSN Search\u0026quot;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EUsing the implicit link name shortcut, you could instead write:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EI get 10 times more traffic from [Google][] than from\r\n[Yahoo][] or [MSN][].\r\n\r\n  [google]: http://google.com/        \u0026quot;Google\u0026quot;\r\n  [yahoo]:  http://search.yahoo.com/  \u0026quot;Yahoo Search\u0026quot;\r\n  [msn]:    http://search.msn.com/    \u0026quot;MSN Search\u0026quot;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EBoth of the above examples will produce the following HTML output:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;p\u0026gt;I get 10 times more traffic from \u0026lt;a href=\u0026quot;http://google.com/\u0026quot;\r\ntitle=\u0026quot;Google\u0026quot;\u0026gt;Google\u0026lt;/a\u0026gt; than from\r\n\u0026lt;a href=\u0026quot;http://search.yahoo.com/\u0026quot; title=\u0026quot;Yahoo Search\u0026quot;\u0026gt;Yahoo\u0026lt;/a\u0026gt;\r\nor \u0026lt;a href=\u0026quot;http://search.msn.com/\u0026quot; title=\u0026quot;MSN Search\u0026quot;\u0026gt;MSN\u0026lt;/a\u0026gt;.\u0026lt;/p\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EFor comparison, here is the same paragraph written using\u003Cbr\u003EMarkdown\u2019s inline link style:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EI get 10 times more traffic from [Google](http://google.com/ \u0026quot;Google\u0026quot;)\r\nthan from [Yahoo](http://search.yahoo.com/ \u0026quot;Yahoo Search\u0026quot;) or\r\n[MSN](http://search.msn.com/ \u0026quot;MSN Search\u0026quot;).\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EThe point of reference-style links is not that they\u2019re easier to\u003Cbr\u003Ewrite. The point is that with reference-style links, your document\u003Cbr\u003Esource is vastly more readable. Compare the above examples: using\u003Cbr\u003Ereference-style links, the paragraph itself is only 81 characters\u003Cbr\u003Elong; with inline-style links, it\u2019s 176 characters; and as raw HTML,\u003Cbr\u003Eit\u2019s 234 characters. In the raw HTML, there\u2019s more markup than there\u003Cbr\u003Eis text.\u003C/p\u003E\r\n\u003Cp\u003EWith Markdown\u2019s reference-style links, a source document much more\u003Cbr\u003Eclosely resembles the final output, as rendered in a browser. By\u003Cbr\u003Eallowing you to move the markup-related metadata out of the paragraph,\u003Cbr\u003Eyou can add links without interrupting the narrative flow of your\u003Cbr\u003Eprose.\u003C/p\u003E\r\n\u003Cp\u003E\u0026lt;h3 id=\u0026quot;em\u0026quot;\u0026gt;Emphasis\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EMarkdown treats asterisks (\u003Ccode\u003E*\u003C/code\u003E) and underscores (\u003Ccode\u003E_\u003C/code\u003E) as indicators of\u003Cbr\u003Eemphasis. Text wrapped with one \u003Ccode\u003E*\u003C/code\u003E or \u003Ccode\u003E_\u003C/code\u003E will be wrapped with an\u003Cbr\u003EHTML \u003Ccode\u003E\u0026lt;em\u0026gt;\u003C/code\u003E tag; double \u003Ccode\u003E*\u003C/code\u003E\u2018s or \u003Ccode\u003E_\u003C/code\u003E\u2018s will be wrapped with an HTML\u003Cbr\u003E\u003Ccode\u003E\u0026lt;strong\u0026gt;\u003C/code\u003E tag. E.g., this input:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E*single asterisks*\r\n\r\n_single underscores_\r\n\r\n**double asterisks**\r\n\r\n__double underscores__\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Ewill produce:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;em\u0026gt;single asterisks\u0026lt;/em\u0026gt;\r\n\r\n\u0026lt;em\u0026gt;single underscores\u0026lt;/em\u0026gt;\r\n\r\n\u0026lt;strong\u0026gt;double asterisks\u0026lt;/strong\u0026gt;\r\n\r\n\u0026lt;strong\u0026gt;double underscores\u0026lt;/strong\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EYou can use whichever style you prefer; the lone restriction is that\u003Cbr\u003Ethe same character must be used to open and close an emphasis span.\u003C/p\u003E\r\n\u003Cp\u003EEmphasis can be used in the middle of a word:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003Eun*frigging*believable\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EBut if you surround an \u003Ccode\u003E*\u003C/code\u003E or \u003Ccode\u003E_\u003C/code\u003E with spaces, it\u2019ll be treated as a\u003Cbr\u003Eliteral asterisk or underscore.\u003C/p\u003E\r\n\u003Cp\u003ETo produce a literal asterisk or underscore at a position where it\u003Cbr\u003Ewould otherwise be used as an emphasis delimiter, you can backslash\u003Cbr\u003Eescape it:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\\*this text is surrounded by literal asterisks\\*\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003E\u0026lt;h3 id=\u0026quot;code\u0026quot;\u0026gt;Code\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003ETo indicate a span of code, wrap it with backtick quotes (\u003Ccode\u003E\u0060 \u003C/code\u003E).\u003Cbr\u003EUnlike a pre-formatted code block, a code span indicates code within a\u003Cbr\u003Enormal paragraph. For example:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EUse the \u0060printf()\u0060 function.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Ewill produce:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;p\u0026gt;Use the \u0026lt;code\u0026gt;printf()\u0026lt;/code\u0026gt; function.\u0026lt;/p\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ETo include a literal backtick character within a code span, you can use\u003Cbr\u003Emultiple backticks as the opening and closing delimiters:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0060\u0060There is a literal backtick (\u0060) here.\u0060\u0060\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Ewhich will produce this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;p\u0026gt;\u0026lt;code\u0026gt;There is a literal backtick (\u0060) here.\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EThe backtick delimiters surrounding a code span may include spaces \u2014\u003Cbr\u003Eone after the opening, one before the closing. This allows you to place\u003Cbr\u003Eliteral backtick characters at the beginning or end of a code span:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EA single backtick in a code span: \u0060\u0060 \u0060 \u0060\u0060\r\n\r\nA backtick-delimited string in a code span: \u0060\u0060 \u0060foo\u0060 \u0060\u0060\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Ewill produce:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;p\u0026gt;A single backtick in a code span: \u0026lt;code\u0026gt;\u0060\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt;\r\n\r\n\u0026lt;p\u0026gt;A backtick-delimited string in a code span: \u0026lt;code\u0026gt;\u0060foo\u0060\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EWith a code span, ampersands and angle brackets are encoded as HTML\u003Cbr\u003Eentities automatically, which makes it easy to include example HTML\u003Cbr\u003Etags. Markdown will turn this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003EPlease don\u0026#39;t use any \u0060\u0026lt;blink\u0026gt;\u0060 tags.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Einto:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;p\u0026gt;Please don\u0026#39;t use any \u0026lt;code\u0026gt;\u0026amp;lt;blink\u0026amp;gt;\u0026lt;/code\u0026gt; tags.\u0026lt;/p\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EYou can write this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0060\u0026amp;#8212;\u0060 is the decimal-encoded equivalent of \u0060\u0026amp;mdash;\u0060.\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Eto produce:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;p\u0026gt;\u0026lt;code\u0026gt;\u0026amp;amp;#8212;\u0026lt;/code\u0026gt; is the decimal-encoded\r\nequivalent of \u0026lt;code\u0026gt;\u0026amp;amp;mdash;\u0026lt;/code\u0026gt;.\u0026lt;/p\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003E\u0026lt;h3 id=\u0026quot;img\u0026quot;\u0026gt;Images\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EAdmittedly, it\u2019s fairly difficult to devise a \u201Cnatural\u201D syntax for\u003Cbr\u003Eplacing images into a plain text document format.\u003C/p\u003E\r\n\u003Cp\u003EMarkdown uses an image syntax that is intended to resemble the syntax\u003Cbr\u003Efor links, allowing for two styles: \u003Cem\u003Einline\u003C/em\u003E and \u003Cem\u003Ereference\u003C/em\u003E.\u003C/p\u003E\r\n\u003Cp\u003EInline image syntax looks like this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E![Alt text](/path/to/img.jpg)\r\n\r\n![Alt text](/path/to/img.jpg \u0026quot;Optional title\u0026quot;)\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EThat is:\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003EAn exclamation mark: \u003Ccode\u003E!\u003C/code\u003E;\u003C/li\u003E\u003Cli\u003Efollowed by a set of square brackets, containing the \u003Ccode\u003Ealt\u003C/code\u003E\u003Cbr\u003Eattribute text for the image;\u003C/li\u003E\u003Cli\u003Efollowed by a set of parentheses, containing the URL or path to\u003Cbr\u003Ethe image, and an optional \u003Ccode\u003Etitle\u003C/code\u003E attribute enclosed in double\u003Cbr\u003Eor single quotes.\u003C/li\u003E\u003C/ul\u003E\r\n\u003Cp\u003EReference-style image syntax looks like this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E![Alt text][id]\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EWhere \u201Cid\u201D is the name of a defined image reference. Image references\u003Cbr\u003Eare defined using syntax identical to link references:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E[id]: url/to/image  \u0026quot;Optional title attribute\u0026quot;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EAs of this writing, Markdown has no syntax for specifying the\u003Cbr\u003Edimensions of an image; if this is important to you, you can simply\u003Cbr\u003Euse regular HTML \u003Ccode\u003E\u0026lt;img\u0026gt;\u003C/code\u003E tags.\u003C/p\u003E\r\n\u003Chr\u003E\r\n\u003Cp\u003E\u0026lt;h2 id=\u0026quot;misc\u0026quot;\u0026gt;Miscellaneous\u0026lt;/h2\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003E\u0026lt;h3 id=\u0026quot;autolink\u0026quot;\u0026gt;Automatic Links\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EMarkdown supports a shortcut style for creating \u201Cautomatic\u201D links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;http://example.com/\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EMarkdown will turn this into:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;a href=\u0026quot;http://example.com/\u0026quot;\u0026gt;http://example.com/\u0026lt;/a\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EAutomatic links for email addresses work similarly, except that\u003Cbr\u003EMarkdown will also perform a bit of randomized decimal and hex\u003Cbr\u003Eentity-encoding to help obscure your address from address-harvesting\u003Cbr\u003Espambots. For example, Markdown will turn this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;address@example.com\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Einto something like this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;a href=\u0026quot;\u0026amp;#x6D;\u0026amp;#x61;i\u0026amp;#x6C;\u0026amp;#x74;\u0026amp;#x6F;:\u0026amp;#x61;\u0026amp;#x64;\u0026amp;#x64;\u0026amp;#x72;\u0026amp;#x65;\r\n\u0026amp;#115;\u0026amp;#115;\u0026amp;#64;\u0026amp;#101;\u0026amp;#120;\u0026amp;#x61;\u0026amp;#109;\u0026amp;#x70;\u0026amp;#x6C;e\u0026amp;#x2E;\u0026amp;#99;\u0026amp;#111;\r\n\u0026amp;#109;\u0026quot;\u0026gt;\u0026amp;#x61;\u0026amp;#x64;\u0026amp;#x64;\u0026amp;#x72;\u0026amp;#x65;\u0026amp;#115;\u0026amp;#115;\u0026amp;#64;\u0026amp;#101;\u0026amp;#120;\u0026amp;#x61;\r\n\u0026amp;#109;\u0026amp;#x70;\u0026amp;#x6C;e\u0026amp;#x2E;\u0026amp;#99;\u0026amp;#111;\u0026amp;#109;\u0026lt;/a\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003Ewhich will render in a browser as a clickable link to \u201C\u003Ca href=\u0022mailto:address@example.com\u0022\u003Eaddress@example.com\u003C/a\u003E\u201D.\u003C/p\u003E\r\n\u003Cp\u003E(This sort of entity-encoding trick will indeed fool many, if not\u003Cbr\u003Emost, address-harvesting bots, but it definitely won\u2019t fool all of\u003Cbr\u003Ethem. It\u2019s better than nothing, but an address published in this way\u003Cbr\u003Ewill probably eventually start receiving spam.)\u003C/p\u003E\r\n\u003Cp\u003E\u0026lt;h3 id=\u0026quot;backslash\u0026quot;\u0026gt;Backslash Escapes\u0026lt;/h3\u0026gt;\r\n\r\n\u003C/p\u003E\r\n\u003Cp\u003EMarkdown allows you to use backslash escapes to generate literal\u003Cbr\u003Echaracters which would otherwise have special meaning in Markdown\u2019s\u003Cbr\u003Eformatting syntax. For example, if you wanted to surround a word\u003Cbr\u003Ewith literal asterisks (instead of an HTML \u003Ccode\u003E\u0026lt;em\u0026gt;\u003C/code\u003E tag), you can use\u003Cbr\u003Ebackslashes before the asterisks, like this:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\\*literal asterisks\\*\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EMarkdown provides backslash escapes for the following characters:\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\\   backslash\r\n\u0060   backtick\r\n*   asterisk\r\n_   underscore\r\n{}  curly braces\r\n[]  square brackets\r\n()  parentheses\r\n#   hash mark\r\n\u002B    plus sign\r\n-    minus sign (hyphen)\r\n.   dot\r\n!   exclamation mark\r\n\u003C/code\u003E\u003C/pre\u003E",
        "mainImage": null,
        "commentCount": 0,
        "viewCount": 2,
        "tag": "123",
        "images": [],
        "markdown": "Markdown: Syntax\r\n================\r\n\r\n\r\n\r\n*   [Overview](#overview)\r\n    *   [Philosophy](#philosophy)\r\n    *   [Inline HTML](#html)\r\n    *   [Automatic Escaping for Special Characters](#autoescape)\r\n*   [Block Elements](#block)\r\n    *   [Paragraphs and Line Breaks](#p)\r\n    *   [Headers](#header)\r\n    *   [Blockquotes](#blockquote)\r\n    *   [Lists](#list)\r\n    *   [Code Blocks](#precode)\r\n    *   [Horizontal Rules](#hr)\r\n*   [Span Elements](#span)\r\n    *   [Links](#link)\r\n    *   [Emphasis](#em)\r\n    *   [Code](#code)\r\n    *   [Images](#img)\r\n*   [Miscellaneous](#misc)\r\n    *   [Backslash Escapes](#backslash)\r\n    *   [Automatic Links](#autolink)\r\n\r\n\r\n**Note:** This document is itself written using Markdown; you\r\ncan [see the source for it by adding \u0027.text\u0027 to the URL][src].\r\n\r\n  [src]: /projects/markdown/syntax.text\r\n\r\n* * *\r\n\r\n\u003Ch2 id=\u0022overview\u0022\u003EOverview\u003C/h2\u003E\r\n\r\n\u003Ch3 id=\u0022philosophy\u0022\u003EPhilosophy\u003C/h3\u003E\r\n\r\nMarkdown is intended to be as easy-to-read and easy-to-write as is feasible.\r\n\r\nReadability, however, is emphasized above all else. A Markdown-formatted\r\ndocument should be publishable as-is, as plain text, without looking\r\nlike it\u0027s been marked up with tags or formatting instructions. While\r\nMarkdown\u0027s syntax has been influenced by several existing text-to-HTML\r\nfilters -- including [Setext] [1], [atx] [2], [Textile] [3], [reStructuredText] [4],\r\n[Grutatext] [5], and [EtText] [6] -- the single biggest source of\r\ninspiration for Markdown\u0027s syntax is the format of plain text email.\r\n\r\n  [1]: http://docutils.sourceforge.net/mirror/setext.html\r\n  [2]: http://www.aaronsw.com/2002/atx/\r\n  [3]: http://textism.com/tools/textile/\r\n  [4]: http://docutils.sourceforge.net/rst.html\r\n  [5]: http://www.triptico.com/software/grutatxt.html\r\n  [6]: http://ettext.taint.org/doc/\r\n\r\nTo this end, Markdown\u0027s syntax is comprised entirely of punctuation\r\ncharacters, which punctuation characters have been carefully chosen so\r\nas to look like what they mean. E.g., asterisks around a word actually\r\nlook like \\*emphasis\\*. Markdown lists look like, well, lists. Even\r\nblockquotes look like quoted passages of text, assuming you\u0027ve ever\r\nused email.\r\n\r\n\r\n\r\n\u003Ch3 id=\u0022html\u0022\u003EInline HTML\u003C/h3\u003E\r\n\r\nMarkdown\u0027s syntax is intended for one purpose: to be used as a\r\nformat for *writing* for the web.\r\n\r\nMarkdown is not a replacement for HTML, or even close to it. Its\r\nsyntax is very small, corresponding only to a very small subset of\r\nHTML tags. The idea is *not* to create a syntax that makes it easier\r\nto insert HTML tags. In my opinion, HTML tags are already easy to\r\ninsert. The idea for Markdown is to make it easy to read, write, and\r\nedit prose. HTML is a *publishing* format; Markdown is a *writing*\r\nformat. Thus, Markdown\u0027s formatting syntax only addresses issues that\r\ncan be conveyed in plain text.\r\n\r\nFor any markup that is not covered by Markdown\u0027s syntax, you simply\r\nuse HTML itself. There\u0027s no need to preface it or delimit it to\r\nindicate that you\u0027re switching from Markdown to HTML; you just use\r\nthe tags.\r\n\r\nThe only restrictions are that block-level HTML elements -- e.g. \u0060\u003Cdiv\u003E\u0060,\r\n\u0060\u003Ctable\u003E\u0060, \u0060\u003Cpre\u003E\u0060, \u0060\u003Cp\u003E\u0060, etc. -- must be separated from surrounding\r\ncontent by blank lines, and the start and end tags of the block should\r\nnot be indented with tabs or spaces. Markdown is smart enough not\r\nto add extra (unwanted) \u0060\u003Cp\u003E\u0060 tags around HTML block-level tags.\r\n\r\nFor example, to add an HTML table to a Markdown article:\r\n\r\n    This is a regular paragraph.\r\n\r\n    \u003Ctable\u003E\r\n        \u003Ctr\u003E\r\n            \u003Ctd\u003EFoo\u003C/td\u003E\r\n        \u003C/tr\u003E\r\n    \u003C/table\u003E\r\n\r\n    This is another regular paragraph.\r\n\r\nNote that Markdown formatting syntax is not processed within block-level\r\nHTML tags. E.g., you can\u0027t use Markdown-style \u0060*emphasis*\u0060 inside an\r\nHTML block.\r\n\r\nSpan-level HTML tags -- e.g. \u0060\u003Cspan\u003E\u0060, \u0060\u003Ccite\u003E\u0060, or \u0060\u003Cdel\u003E\u0060 -- can be\r\nused anywhere in a Markdown paragraph, list item, or header. If you\r\nwant, you can even use HTML tags instead of Markdown formatting; e.g. if\r\nyou\u0027d prefer to use HTML \u0060\u003Ca\u003E\u0060 or \u0060\u003Cimg\u003E\u0060 tags instead of Markdown\u0027s\r\nlink or image syntax, go right ahead.\r\n\r\nUnlike block-level HTML tags, Markdown syntax *is* processed within\r\nspan-level tags.\r\n\r\n\r\n\u003Ch3 id=\u0022autoescape\u0022\u003EAutomatic Escaping for Special Characters\u003C/h3\u003E\r\n\r\nIn HTML, there are two characters that demand special treatment: \u0060\u003C\u0060\r\nand \u0060\u0026\u0060. Left angle brackets are used to start tags; ampersands are\r\nused to denote HTML entities. If you want to use them as literal\r\ncharacters, you must escape them as entities, e.g. \u0060\u0026lt;\u0060, and\r\n\u0060\u0026amp;\u0060.\r\n\r\nAmpersands in particular are bedeviling for web writers. If you want to\r\nwrite about \u0027AT\u0026T\u0027, you need to write \u0027\u0060AT\u0026amp;T\u0060\u0027. You even need to\r\nescape ampersands within URLs. Thus, if you want to link to:\r\n\r\n    http://images.google.com/images?num=30\u0026q=larry\u002Bbird\r\n\r\nyou need to encode the URL as:\r\n\r\n    http://images.google.com/images?num=30\u0026amp;q=larry\u002Bbird\r\n\r\nin your anchor tag \u0060href\u0060 attribute. Needless to say, this is easy to\r\nforget, and is probably the single most common source of HTML validation\r\nerrors in otherwise well-marked-up web sites.\r\n\r\nMarkdown allows you to use these characters naturally, taking care of\r\nall the necessary escaping for you. If you use an ampersand as part of\r\nan HTML entity, it remains unchanged; otherwise it will be translated\r\ninto \u0060\u0026amp;\u0060.\r\n\r\nSo, if you want to include a copyright symbol in your article, you can write:\r\n\r\n    \u0026copy;\r\n\r\nand Markdown will leave it alone. But if you write:\r\n\r\n    AT\u0026T\r\n\r\nMarkdown will translate it to:\r\n\r\n    AT\u0026amp;T\r\n\r\nSimilarly, because Markdown supports [inline HTML](#html), if you use\r\nangle brackets as delimiters for HTML tags, Markdown will treat them as\r\nsuch. But if you write:\r\n\r\n    4 \u003C 5\r\n\r\nMarkdown will translate it to:\r\n\r\n    4 \u0026lt; 5\r\n\r\nHowever, inside Markdown code spans and blocks, angle brackets and\r\nampersands are *always* encoded automatically. This makes it easy to use\r\nMarkdown to write about HTML code. (As opposed to raw HTML, which is a\r\nterrible format for writing about HTML syntax, because every single \u0060\u003C\u0060\r\nand \u0060\u0026\u0060 in your example code needs to be escaped.)\r\n\r\n\r\n* * *\r\n\r\n\r\n\u003Ch2 id=\u0022block\u0022\u003EBlock Elements\u003C/h2\u003E\r\n\r\n\r\n\u003Ch3 id=\u0022p\u0022\u003EParagraphs and Line Breaks\u003C/h3\u003E\r\n\r\nA paragraph is simply one or more consecutive lines of text, separated\r\nby one or more blank lines. (A blank line is any line that looks like a\r\nblank line -- a line containing nothing but spaces or tabs is considered\r\nblank.) Normal paragraphs should not be indented with spaces or tabs.\r\n\r\nThe implication of the \u0022one or more consecutive lines of text\u0022 rule is\r\nthat Markdown supports \u0022hard-wrapped\u0022 text paragraphs. This differs\r\nsignificantly from most other text-to-HTML formatters (including Movable\r\nType\u0027s \u0022Convert Line Breaks\u0022 option) which translate every line break\r\ncharacter in a paragraph into a \u0060\u003Cbr /\u003E\u0060 tag.\r\n\r\nWhen you *do* want to insert a \u0060\u003Cbr /\u003E\u0060 break tag using Markdown, you\r\nend a line with two or more spaces, then type return.\r\n\r\nYes, this takes a tad more effort to create a \u0060\u003Cbr /\u003E\u0060, but a simplistic\r\n\u0022every line break is a \u0060\u003Cbr /\u003E\u0060\u0022 rule wouldn\u0027t work for Markdown.\r\nMarkdown\u0027s email-style [blockquoting][bq] and multi-paragraph [list items][l]\r\nwork best -- and look better -- when you format them with hard breaks.\r\n\r\n  [bq]: #blockquote\r\n  [l]:  #list\r\n\r\n\r\n\r\n\u003Ch3 id=\u0022header\u0022\u003EHeaders\u003C/h3\u003E\r\n\r\nMarkdown supports two styles of headers, [Setext] [1] and [atx] [2].\r\n\r\nSetext-style headers are \u0022underlined\u0022 using equal signs (for first-level\r\nheaders) and dashes (for second-level headers). For example:\r\n\r\n    This is an H1\r\n    =============\r\n\r\n    This is an H2\r\n    -------------\r\n\r\nAny number of underlining \u0060=\u0060\u0027s or \u0060-\u0060\u0027s will work.\r\n\r\nAtx-style headers use 1-6 hash characters at the start of the line,\r\ncorresponding to header levels 1-6. For example:\r\n\r\n    # This is an H1\r\n\r\n    ## This is an H2\r\n\r\n    ###### This is an H6\r\n\r\nOptionally, you may \u0022close\u0022 atx-style headers. This is purely\r\ncosmetic -- you can use this if you think it looks better. The\r\nclosing hashes don\u0027t even need to match the number of hashes\r\nused to open the header. (The number of opening hashes\r\ndetermines the header level.) :\r\n\r\n    # This is an H1 #\r\n\r\n    ## This is an H2 ##\r\n\r\n    ### This is an H3 ######\r\n\r\n\r\n\u003Ch3 id=\u0022blockquote\u0022\u003EBlockquotes\u003C/h3\u003E\r\n\r\nMarkdown uses email-style \u0060\u003E\u0060 characters for blockquoting. If you\u0027re\r\nfamiliar with quoting passages of text in an email message, then you\r\nknow how to create a blockquote in Markdown. It looks best if you hard\r\nwrap the text and put a \u0060\u003E\u0060 before every line:\r\n\r\n    \u003E This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\r\n    \u003E consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\r\n    \u003E Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\r\n    \u003E \r\n    \u003E Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\r\n    \u003E id sem consectetuer libero luctus adipiscing.\r\n\r\nMarkdown allows you to be lazy and only put the \u0060\u003E\u0060 before the first\r\nline of a hard-wrapped paragraph:\r\n\r\n    \u003E This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\r\n    consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\r\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\r\n\r\n    \u003E Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\r\n    id sem consectetuer libero luctus adipiscing.\r\n\r\nBlockquotes can be nested (i.e. a blockquote-in-a-blockquote) by\r\nadding additional levels of \u0060\u003E\u0060:\r\n\r\n    \u003E This is the first level of quoting.\r\n    \u003E\r\n    \u003E \u003E This is nested blockquote.\r\n    \u003E\r\n    \u003E Back to the first level.\r\n\r\nBlockquotes can contain other Markdown elements, including headers, lists,\r\nand code blocks:\r\n\r\n\t\u003E ## This is a header.\r\n\t\u003E \r\n\t\u003E 1.   This is the first list item.\r\n\t\u003E 2.   This is the second list item.\r\n\t\u003E \r\n\t\u003E Here\u0027s some example code:\r\n\t\u003E \r\n\t\u003E     return shell_exec(\u0022echo $input | $markdown_script\u0022);\r\n\r\nAny decent text editor should make email-style quoting easy. For\r\nexample, with BBEdit, you can make a selection and choose Increase\r\nQuote Level from the Text menu.\r\n\r\n\r\n\u003Ch3 id=\u0022list\u0022\u003ELists\u003C/h3\u003E\r\n\r\nMarkdown supports ordered (numbered) and unordered (bulleted) lists.\r\n\r\nUnordered lists use asterisks, pluses, and hyphens -- interchangably\r\n-- as list markers:\r\n\r\n    *   Red\r\n    *   Green\r\n    *   Blue\r\n\r\nis equivalent to:\r\n\r\n    \u002B   Red\r\n    \u002B   Green\r\n    \u002B   Blue\r\n\r\nand:\r\n\r\n    -   Red\r\n    -   Green\r\n    -   Blue\r\n\r\nOrdered lists use numbers followed by periods:\r\n\r\n    1.  Bird\r\n    2.  McHale\r\n    3.  Parish\r\n\r\nIt\u0027s important to note that the actual numbers you use to mark the\r\nlist have no effect on the HTML output Markdown produces. The HTML\r\nMarkdown produces from the above list is:\r\n\r\n    \u003Col\u003E\r\n    \u003Cli\u003EBird\u003C/li\u003E\r\n    \u003Cli\u003EMcHale\u003C/li\u003E\r\n    \u003Cli\u003EParish\u003C/li\u003E\r\n    \u003C/ol\u003E\r\n\r\nIf you instead wrote the list in Markdown like this:\r\n\r\n    1.  Bird\r\n    1.  McHale\r\n    1.  Parish\r\n\r\nor even:\r\n\r\n    3. Bird\r\n    1. McHale\r\n    8. Parish\r\n\r\nyou\u0027d get the exact same HTML output. The point is, if you want to,\r\nyou can use ordinal numbers in your ordered Markdown lists, so that\r\nthe numbers in your source match the numbers in your published HTML.\r\nBut if you want to be lazy, you don\u0027t have to.\r\n\r\nIf you do use lazy list numbering, however, you should still start the\r\nlist with the number 1. At some point in the future, Markdown may support\r\nstarting ordered lists at an arbitrary number.\r\n\r\nList markers typically start at the left margin, but may be indented by\r\nup to three spaces. List markers must be followed by one or more spaces\r\nor a tab.\r\n\r\nTo make lists look nice, you can wrap items with hanging indents:\r\n\r\n    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\r\n        Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\r\n        viverra nec, fringilla in, laoreet vitae, risus.\r\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\r\n        Suspendisse id sem consectetuer libero luctus adipiscing.\r\n\r\nBut if you want to be lazy, you don\u0027t have to:\r\n\r\n    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\r\n    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\r\n    viverra nec, fringilla in, laoreet vitae, risus.\r\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\r\n    Suspendisse id sem consectetuer libero luctus adipiscing.\r\n\r\nIf list items are separated by blank lines, Markdown will wrap the\r\nitems in \u0060\u003Cp\u003E\u0060 tags in the HTML output. For example, this input:\r\n\r\n    *   Bird\r\n    *   Magic\r\n\r\nwill turn into:\r\n\r\n    \u003Cul\u003E\r\n    \u003Cli\u003EBird\u003C/li\u003E\r\n    \u003Cli\u003EMagic\u003C/li\u003E\r\n    \u003C/ul\u003E\r\n\r\nBut this:\r\n\r\n    *   Bird\r\n\r\n    *   Magic\r\n\r\nwill turn into:\r\n\r\n    \u003Cul\u003E\r\n    \u003Cli\u003E\u003Cp\u003EBird\u003C/p\u003E\u003C/li\u003E\r\n    \u003Cli\u003E\u003Cp\u003EMagic\u003C/p\u003E\u003C/li\u003E\r\n    \u003C/ul\u003E\r\n\r\nList items may consist of multiple paragraphs. Each subsequent\r\nparagraph in a list item must be indented by either 4 spaces\r\nor one tab:\r\n\r\n    1.  This is a list item with two paragraphs. Lorem ipsum dolor\r\n        sit amet, consectetuer adipiscing elit. Aliquam hendrerit\r\n        mi posuere lectus.\r\n\r\n        Vestibulum enim wisi, viverra nec, fringilla in, laoreet\r\n        vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\r\n        sit amet velit.\r\n\r\n    2.  Suspendisse id sem consectetuer libero luctus adipiscing.\r\n\r\nIt looks nice if you indent every line of the subsequent\r\nparagraphs, but here again, Markdown will allow you to be\r\nlazy:\r\n\r\n    *   This is a list item with two paragraphs.\r\n\r\n        This is the second paragraph in the list item. You\u0027re\r\n    only required to indent the first line. Lorem ipsum dolor\r\n    sit amet, consectetuer adipiscing elit.\r\n\r\n    *   Another item in the same list.\r\n\r\nTo put a blockquote within a list item, the blockquote\u0027s \u0060\u003E\u0060\r\ndelimiters need to be indented:\r\n\r\n    *   A list item with a blockquote:\r\n\r\n        \u003E This is a blockquote\r\n        \u003E inside a list item.\r\n\r\nTo put a code block within a list item, the code block needs\r\nto be indented *twice* -- 8 spaces or two tabs:\r\n\r\n    *   A list item with a code block:\r\n\r\n            \u003Ccode goes here\u003E\r\n\r\n\r\nIt\u0027s worth noting that it\u0027s possible to trigger an ordered list by\r\naccident, by writing something like this:\r\n\r\n    1986. What a great season.\r\n\r\nIn other words, a *number-period-space* sequence at the beginning of a\r\nline. To avoid this, you can backslash-escape the period:\r\n\r\n    1986\\. What a great season.\r\n\r\n\r\n\r\n\u003Ch3 id=\u0022precode\u0022\u003ECode Blocks\u003C/h3\u003E\r\n\r\nPre-formatted code blocks are used for writing about programming or\r\nmarkup source code. Rather than forming normal paragraphs, the lines\r\nof a code block are interpreted literally. Markdown wraps a code block\r\nin both \u0060\u003Cpre\u003E\u0060 and \u0060\u003Ccode\u003E\u0060 tags.\r\n\r\nTo produce a code block in Markdown, simply indent every line of the\r\nblock by at least 4 spaces or 1 tab. For example, given this input:\r\n\r\n    This is a normal paragraph:\r\n\r\n        This is a code block.\r\n\r\nMarkdown will generate:\r\n\r\n    \u003Cp\u003EThis is a normal paragraph:\u003C/p\u003E\r\n\r\n    \u003Cpre\u003E\u003Ccode\u003EThis is a code block.\r\n    \u003C/code\u003E\u003C/pre\u003E\r\n\r\nOne level of indentation -- 4 spaces or 1 tab -- is removed from each\r\nline of the code block. For example, this:\r\n\r\n    Here is an example of AppleScript:\r\n\r\n        tell application \u0022Foo\u0022\r\n            beep\r\n        end tell\r\n\r\nwill turn into:\r\n\r\n    \u003Cp\u003EHere is an example of AppleScript:\u003C/p\u003E\r\n\r\n    \u003Cpre\u003E\u003Ccode\u003Etell application \u0022Foo\u0022\r\n        beep\r\n    end tell\r\n    \u003C/code\u003E\u003C/pre\u003E\r\n\r\nA code block continues until it reaches a line that is not indented\r\n(or the end of the article).\r\n\r\nWithin a code block, ampersands (\u0060\u0026\u0060) and angle brackets (\u0060\u003C\u0060 and \u0060\u003E\u0060)\r\nare automatically converted into HTML entities. This makes it very\r\neasy to include example HTML source code using Markdown -- just paste\r\nit and indent it, and Markdown will handle the hassle of encoding the\r\nampersands and angle brackets. For example, this:\r\n\r\n        \u003Cdiv class=\u0022footer\u0022\u003E\r\n            \u0026copy; 2004 Foo Corporation\r\n        \u003C/div\u003E\r\n\r\nwill turn into:\r\n\r\n    \u003Cpre\u003E\u003Ccode\u003E\u0026lt;div class=\u0022footer\u0022\u0026gt;\r\n        \u0026amp;copy; 2004 Foo Corporation\r\n    \u0026lt;/div\u0026gt;\r\n    \u003C/code\u003E\u003C/pre\u003E\r\n\r\nRegular Markdown syntax is not processed within code blocks. E.g.,\r\nasterisks are just literal asterisks within a code block. This means\r\nit\u0027s also easy to use Markdown to write about Markdown\u0027s own syntax.\r\n\r\n\r\n\r\n\u003Ch3 id=\u0022hr\u0022\u003EHorizontal Rules\u003C/h3\u003E\r\n\r\nYou can produce a horizontal rule tag (\u0060\u003Chr /\u003E\u0060) by placing three or\r\nmore hyphens, asterisks, or underscores on a line by themselves. If you\r\nwish, you may use spaces between the hyphens or asterisks. Each of the\r\nfollowing lines will produce a horizontal rule:\r\n\r\n    * * *\r\n\r\n    ***\r\n\r\n    *****\r\n\r\n    - - -\r\n\r\n    ---------------------------------------\r\n\r\n\r\n* * *\r\n\r\n\u003Ch2 id=\u0022span\u0022\u003ESpan Elements\u003C/h2\u003E\r\n\r\n\u003Ch3 id=\u0022link\u0022\u003ELinks\u003C/h3\u003E\r\n\r\nMarkdown supports two style of links: *inline* and *reference*.\r\n\r\nIn both styles, the link text is delimited by [square brackets].\r\n\r\nTo create an inline link, use a set of regular parentheses immediately\r\nafter the link text\u0027s closing square bracket. Inside the parentheses,\r\nput the URL where you want the link to point, along with an *optional*\r\ntitle for the link, surrounded in quotes. For example:\r\n\r\n    This is [an example](http://example.com/ \u0022Title\u0022) inline link.\r\n\r\n    [This link](http://example.net/) has no title attribute.\r\n\r\nWill produce:\r\n\r\n    \u003Cp\u003EThis is \u003Ca href=\u0022http://example.com/\u0022 title=\u0022Title\u0022\u003E\r\n    an example\u003C/a\u003E inline link.\u003C/p\u003E\r\n\r\n    \u003Cp\u003E\u003Ca href=\u0022http://example.net/\u0022\u003EThis link\u003C/a\u003E has no\r\n    title attribute.\u003C/p\u003E\r\n\r\nIf you\u0027re referring to a local resource on the same server, you can\r\nuse relative paths:\r\n\r\n    See my [About](/about/) page for details.   \r\n\r\nReference-style links use a second set of square brackets, inside\r\nwhich you place a label of your choosing to identify the link:\r\n\r\n    This is [an example][id] reference-style link.\r\n\r\nYou can optionally use a space to separate the sets of brackets:\r\n\r\n    This is [an example] [id] reference-style link.\r\n\r\nThen, anywhere in the document, you define your link label like this,\r\non a line by itself:\r\n\r\n    [id]: http://example.com/  \u0022Optional Title Here\u0022\r\n\r\nThat is:\r\n\r\n*   Square brackets containing the link identifier (optionally\r\n    indented from the left margin using up to three spaces);\r\n*   followed by a colon;\r\n*   followed by one or more spaces (or tabs);\r\n*   followed by the URL for the link;\r\n*   optionally followed by a title attribute for the link, enclosed\r\n    in double or single quotes, or enclosed in parentheses.\r\n\r\nThe following three link definitions are equivalent:\r\n\r\n\t[foo]: http://example.com/  \u0022Optional Title Here\u0022\r\n\t[foo]: http://example.com/  \u0027Optional Title Here\u0027\r\n\t[foo]: http://example.com/  (Optional Title Here)\r\n\r\n**Note:** There is a known bug in Markdown.pl 1.0.1 which prevents\r\nsingle quotes from being used to delimit link titles.\r\n\r\nThe link URL may, optionally, be surrounded by angle brackets:\r\n\r\n    [id]: \u003Chttp://example.com/\u003E  \u0022Optional Title Here\u0022\r\n\r\nYou can put the title attribute on the next line and use extra spaces\r\nor tabs for padding, which tends to look better with longer URLs:\r\n\r\n    [id]: http://example.com/longish/path/to/resource/here\r\n        \u0022Optional Title Here\u0022\r\n\r\nLink definitions are only used for creating links during Markdown\r\nprocessing, and are stripped from your document in the HTML output.\r\n\r\nLink definition names may consist of letters, numbers, spaces, and\r\npunctuation -- but they are *not* case sensitive. E.g. these two\r\nlinks:\r\n\r\n\t[link text][a]\r\n\t[link text][A]\r\n\r\nare equivalent.\r\n\r\nThe *implicit link name* shortcut allows you to omit the name of the\r\nlink, in which case the link text itself is used as the name.\r\nJust use an empty set of square brackets -- e.g., to link the word\r\n\u0022Google\u0022 to the google.com web site, you could simply write:\r\n\r\n\t[Google][]\r\n\r\nAnd then define the link:\r\n\r\n\t[Google]: http://google.com/\r\n\r\nBecause link names may contain spaces, this shortcut even works for\r\nmultiple words in the link text:\r\n\r\n\tVisit [Daring Fireball][] for more information.\r\n\r\nAnd then define the link:\r\n\t\r\n\t[Daring Fireball]: http://daringfireball.net/\r\n\r\nLink definitions can be placed anywhere in your Markdown document. I\r\ntend to put them immediately after each paragraph in which they\u0027re\r\nused, but if you want, you can put them all at the end of your\r\ndocument, sort of like footnotes.\r\n\r\nHere\u0027s an example of reference links in action:\r\n\r\n    I get 10 times more traffic from [Google] [1] than from\r\n    [Yahoo] [2] or [MSN] [3].\r\n\r\n      [1]: http://google.com/        \u0022Google\u0022\r\n      [2]: http://search.yahoo.com/  \u0022Yahoo Search\u0022\r\n      [3]: http://search.msn.com/    \u0022MSN Search\u0022\r\n\r\nUsing the implicit link name shortcut, you could instead write:\r\n\r\n    I get 10 times more traffic from [Google][] than from\r\n    [Yahoo][] or [MSN][].\r\n\r\n      [google]: http://google.com/        \u0022Google\u0022\r\n      [yahoo]:  http://search.yahoo.com/  \u0022Yahoo Search\u0022\r\n      [msn]:    http://search.msn.com/    \u0022MSN Search\u0022\r\n\r\nBoth of the above examples will produce the following HTML output:\r\n\r\n    \u003Cp\u003EI get 10 times more traffic from \u003Ca href=\u0022http://google.com/\u0022\r\n    title=\u0022Google\u0022\u003EGoogle\u003C/a\u003E than from\r\n    \u003Ca href=\u0022http://search.yahoo.com/\u0022 title=\u0022Yahoo Search\u0022\u003EYahoo\u003C/a\u003E\r\n    or \u003Ca href=\u0022http://search.msn.com/\u0022 title=\u0022MSN Search\u0022\u003EMSN\u003C/a\u003E.\u003C/p\u003E\r\n\r\nFor comparison, here is the same paragraph written using\r\nMarkdown\u0027s inline link style:\r\n\r\n    I get 10 times more traffic from [Google](http://google.com/ \u0022Google\u0022)\r\n    than from [Yahoo](http://search.yahoo.com/ \u0022Yahoo Search\u0022) or\r\n    [MSN](http://search.msn.com/ \u0022MSN Search\u0022).\r\n\r\nThe point of reference-style links is not that they\u0027re easier to\r\nwrite. The point is that with reference-style links, your document\r\nsource is vastly more readable. Compare the above examples: using\r\nreference-style links, the paragraph itself is only 81 characters\r\nlong; with inline-style links, it\u0027s 176 characters; and as raw HTML,\r\nit\u0027s 234 characters. In the raw HTML, there\u0027s more markup than there\r\nis text.\r\n\r\nWith Markdown\u0027s reference-style links, a source document much more\r\nclosely resembles the final output, as rendered in a browser. By\r\nallowing you to move the markup-related metadata out of the paragraph,\r\nyou can add links without interrupting the narrative flow of your\r\nprose.\r\n\r\n\r\n\u003Ch3 id=\u0022em\u0022\u003EEmphasis\u003C/h3\u003E\r\n\r\nMarkdown treats asterisks (\u0060*\u0060) and underscores (\u0060_\u0060) as indicators of\r\nemphasis. Text wrapped with one \u0060*\u0060 or \u0060_\u0060 will be wrapped with an\r\nHTML \u0060\u003Cem\u003E\u0060 tag; double \u0060*\u0060\u0027s or \u0060_\u0060\u0027s will be wrapped with an HTML\r\n\u0060\u003Cstrong\u003E\u0060 tag. E.g., this input:\r\n\r\n    *single asterisks*\r\n\r\n    _single underscores_\r\n\r\n    **double asterisks**\r\n\r\n    __double underscores__\r\n\r\nwill produce:\r\n\r\n    \u003Cem\u003Esingle asterisks\u003C/em\u003E\r\n\r\n    \u003Cem\u003Esingle underscores\u003C/em\u003E\r\n\r\n    \u003Cstrong\u003Edouble asterisks\u003C/strong\u003E\r\n\r\n    \u003Cstrong\u003Edouble underscores\u003C/strong\u003E\r\n\r\nYou can use whichever style you prefer; the lone restriction is that\r\nthe same character must be used to open and close an emphasis span.\r\n\r\nEmphasis can be used in the middle of a word:\r\n\r\n    un*frigging*believable\r\n\r\nBut if you surround an \u0060*\u0060 or \u0060_\u0060 with spaces, it\u0027ll be treated as a\r\nliteral asterisk or underscore.\r\n\r\nTo produce a literal asterisk or underscore at a position where it\r\nwould otherwise be used as an emphasis delimiter, you can backslash\r\nescape it:\r\n\r\n    \\*this text is surrounded by literal asterisks\\*\r\n\r\n\r\n\r\n\u003Ch3 id=\u0022code\u0022\u003ECode\u003C/h3\u003E\r\n\r\nTo indicate a span of code, wrap it with backtick quotes (\u0060\u0060 \u0060 \u0060\u0060).\r\nUnlike a pre-formatted code block, a code span indicates code within a\r\nnormal paragraph. For example:\r\n\r\n    Use the \u0060printf()\u0060 function.\r\n\r\nwill produce:\r\n\r\n    \u003Cp\u003EUse the \u003Ccode\u003Eprintf()\u003C/code\u003E function.\u003C/p\u003E\r\n\r\nTo include a literal backtick character within a code span, you can use\r\nmultiple backticks as the opening and closing delimiters:\r\n\r\n    \u0060\u0060There is a literal backtick (\u0060) here.\u0060\u0060\r\n\r\nwhich will produce this:\r\n\r\n    \u003Cp\u003E\u003Ccode\u003EThere is a literal backtick (\u0060) here.\u003C/code\u003E\u003C/p\u003E\r\n\r\nThe backtick delimiters surrounding a code span may include spaces --\r\none after the opening, one before the closing. This allows you to place\r\nliteral backtick characters at the beginning or end of a code span:\r\n\r\n\tA single backtick in a code span: \u0060\u0060 \u0060 \u0060\u0060\r\n\t\r\n\tA backtick-delimited string in a code span: \u0060\u0060 \u0060foo\u0060 \u0060\u0060\r\n\r\nwill produce:\r\n\r\n\t\u003Cp\u003EA single backtick in a code span: \u003Ccode\u003E\u0060\u003C/code\u003E\u003C/p\u003E\r\n\t\r\n\t\u003Cp\u003EA backtick-delimited string in a code span: \u003Ccode\u003E\u0060foo\u0060\u003C/code\u003E\u003C/p\u003E\r\n\r\nWith a code span, ampersands and angle brackets are encoded as HTML\r\nentities automatically, which makes it easy to include example HTML\r\ntags. Markdown will turn this:\r\n\r\n    Please don\u0027t use any \u0060\u003Cblink\u003E\u0060 tags.\r\n\r\ninto:\r\n\r\n    \u003Cp\u003EPlease don\u0027t use any \u003Ccode\u003E\u0026lt;blink\u0026gt;\u003C/code\u003E tags.\u003C/p\u003E\r\n\r\nYou can write this:\r\n\r\n    \u0060\u0026#8212;\u0060 is the decimal-encoded equivalent of \u0060\u0026mdash;\u0060.\r\n\r\nto produce:\r\n\r\n    \u003Cp\u003E\u003Ccode\u003E\u0026amp;#8212;\u003C/code\u003E is the decimal-encoded\r\n    equivalent of \u003Ccode\u003E\u0026amp;mdash;\u003C/code\u003E.\u003C/p\u003E\r\n\r\n\r\n\r\n\u003Ch3 id=\u0022img\u0022\u003EImages\u003C/h3\u003E\r\n\r\nAdmittedly, it\u0027s fairly difficult to devise a \u0022natural\u0022 syntax for\r\nplacing images into a plain text document format.\r\n\r\nMarkdown uses an image syntax that is intended to resemble the syntax\r\nfor links, allowing for two styles: *inline* and *reference*.\r\n\r\nInline image syntax looks like this:\r\n\r\n    ![Alt text](/path/to/img.jpg)\r\n\r\n    ![Alt text](/path/to/img.jpg \u0022Optional title\u0022)\r\n\r\nThat is:\r\n\r\n*   An exclamation mark: \u0060!\u0060;\r\n*   followed by a set of square brackets, containing the \u0060alt\u0060\r\n    attribute text for the image;\r\n*   followed by a set of parentheses, containing the URL or path to\r\n    the image, and an optional \u0060title\u0060 attribute enclosed in double\r\n    or single quotes.\r\n\r\nReference-style image syntax looks like this:\r\n\r\n    ![Alt text][id]\r\n\r\nWhere \u0022id\u0022 is the name of a defined image reference. Image references\r\nare defined using syntax identical to link references:\r\n\r\n    [id]: url/to/image  \u0022Optional title attribute\u0022\r\n\r\nAs of this writing, Markdown has no syntax for specifying the\r\ndimensions of an image; if this is important to you, you can simply\r\nuse regular HTML \u0060\u003Cimg\u003E\u0060 tags.\r\n\r\n\r\n* * *\r\n\r\n\r\n\u003Ch2 id=\u0022misc\u0022\u003EMiscellaneous\u003C/h2\u003E\r\n\r\n\u003Ch3 id=\u0022autolink\u0022\u003EAutomatic Links\u003C/h3\u003E\r\n\r\nMarkdown supports a shortcut style for creating \u0022automatic\u0022 links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:\r\n\r\n    \u003Chttp://example.com/\u003E\r\n    \r\nMarkdown will turn this into:\r\n\r\n    \u003Ca href=\u0022http://example.com/\u0022\u003Ehttp://example.com/\u003C/a\u003E\r\n\r\nAutomatic links for email addresses work similarly, except that\r\nMarkdown will also perform a bit of randomized decimal and hex\r\nentity-encoding to help obscure your address from address-harvesting\r\nspambots. For example, Markdown will turn this:\r\n\r\n    \u003Caddress@example.com\u003E\r\n\r\ninto something like this:\r\n\r\n    \u003Ca href=\u0022\u0026#x6D;\u0026#x61;i\u0026#x6C;\u0026#x74;\u0026#x6F;:\u0026#x61;\u0026#x64;\u0026#x64;\u0026#x72;\u0026#x65;\r\n    \u0026#115;\u0026#115;\u0026#64;\u0026#101;\u0026#120;\u0026#x61;\u0026#109;\u0026#x70;\u0026#x6C;e\u0026#x2E;\u0026#99;\u0026#111;\r\n    \u0026#109;\u0022\u003E\u0026#x61;\u0026#x64;\u0026#x64;\u0026#x72;\u0026#x65;\u0026#115;\u0026#115;\u0026#64;\u0026#101;\u0026#120;\u0026#x61;\r\n    \u0026#109;\u0026#x70;\u0026#x6C;e\u0026#x2E;\u0026#99;\u0026#111;\u0026#109;\u003C/a\u003E\r\n\r\nwhich will render in a browser as a clickable link to \u0022address@example.com\u0022.\r\n\r\n(This sort of entity-encoding trick will indeed fool many, if not\r\nmost, address-harvesting bots, but it definitely won\u0027t fool all of\r\nthem. It\u0027s better than nothing, but an address published in this way\r\nwill probably eventually start receiving spam.)\r\n\r\n\r\n\r\n\u003Ch3 id=\u0022backslash\u0022\u003EBackslash Escapes\u003C/h3\u003E\r\n\r\nMarkdown allows you to use backslash escapes to generate literal\r\ncharacters which would otherwise have special meaning in Markdown\u0027s\r\nformatting syntax. For example, if you wanted to surround a word\r\nwith literal asterisks (instead of an HTML \u0060\u003Cem\u003E\u0060 tag), you can use\r\nbackslashes before the asterisks, like this:\r\n\r\n    \\*literal asterisks\\*\r\n\r\nMarkdown provides backslash escapes for the following characters:\r\n\r\n    \\   backslash\r\n    \u0060   backtick\r\n    *   asterisk\r\n    _   underscore\r\n    {}  curly braces\r\n    []  square brackets\r\n    ()  parentheses\r\n    #   hash mark\r\n\t\u002B\tplus sign\r\n\t-\tminus sign (hyphen)\r\n    .   dot\r\n    !   exclamation mark\r\n\r\n",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2022-04-13T09:30:14Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/62569826b7349691b5e971d4",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "\u7528\u6237\u524D\u53F0",
        "createTime": "2022-04-16T23:58:15.108+08:00",
        "lastUpdateTime": "2022-04-16T23:58:47.581+08:00"
    }, {
        "id": "6255b03f704efc486f68ee3f",
        "blogTitle": "editor.md",
        "introduction": "11111",
        "blogContents": "\u003Ch1 id=\u0022h1-editor-md\u0022\u003E\u003Ca name=\u0022Editor.md\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EEditor.md\u003C/h1\u003E\u003Cp\u003E\u003Cimg src=\u0022https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cp\u003E\u003Cimg src=\u0022https://img.shields.io/github/stars/pandao/editor.md.svg\u0022 alt=\u0022\u0022\u003E \u003Cimg src=\u0022https://img.shields.io/github/forks/pandao/editor.md.svg\u0022 alt=\u0022\u0022\u003E \u003Cimg src=\u0022https://img.shields.io/github/tag/pandao/editor.md.svg\u0022 alt=\u0022\u0022\u003E \u003Cimg src=\u0022https://img.shields.io/github/release/pandao/editor.md.svg\u0022 alt=\u0022\u0022\u003E \u003Cimg src=\u0022https://img.shields.io/github/issues/pandao/editor.md.svg\u0022 alt=\u0022\u0022\u003E \u003Cimg src=\u0022https://img.shields.io/bower/v/editor.md.svg\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cp\u003E\u003Cstrong\u003E\u76EE\u5F55 (Table of Contents)\u003C/strong\u003E\u003C/p\u003E\r\n\u003Ch1 id=\u0022h1-heading-1\u0022\u003E\u003Ca name=\u0022Heading 1\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 1\u003C/h1\u003E\u003Ch2 id=\u0022h2-heading-2\u0022\u003E\u003Ca name=\u0022Heading 2\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 2\u003C/h2\u003E\u003Ch3 id=\u0022h3-heading-3\u0022\u003E\u003Ca name=\u0022Heading 3\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 3\u003C/h3\u003E\u003Ch4 id=\u0022h4-heading-4\u0022\u003E\u003Ca name=\u0022Heading 4\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 4\u003C/h4\u003E\u003Ch5 id=\u0022h5-heading-5\u0022\u003E\u003Ca name=\u0022Heading 5\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 5\u003C/h5\u003E\u003Ch6 id=\u0022h6-heading-6\u0022\u003E\u003Ca name=\u0022Heading 6\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 6\u003C/h6\u003E\u003Ch1 id=\u0022h1-heading-1-link-heading-link\u0022\u003E\u003Ca name=\u0022Heading 1 link   Heading link\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 1 link \u003Ca href=\u0022https://github.com/pandao/editor.md\u0022 title=\u0022Heading link\u0022\u003EHeading link\u003C/a\u003E\u003C/h1\u003E\u003Ch2 id=\u0022h2-heading-2-link-heading-link\u0022\u003E\u003Ca name=\u0022Heading 2 link   Heading link\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 2 link \u003Ca href=\u0022https://github.com/pandao/editor.md\u0022 title=\u0022Heading link\u0022\u003EHeading link\u003C/a\u003E\u003C/h2\u003E\u003Ch3 id=\u0022h3-heading-3-link-heading-link\u0022\u003E\u003Ca name=\u0022Heading 3 link   Heading link\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 3 link \u003Ca href=\u0022https://github.com/pandao/editor.md\u0022 title=\u0022Heading link\u0022\u003EHeading link\u003C/a\u003E\u003C/h3\u003E\u003Ch4 id=\u0022h4-heading-4-link-heading-link-heading-link-heading-link\u0022\u003E\u003Ca name=\u0022Heading 4 link   Heading link  Heading link   Heading link\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 4 link \u003Ca href=\u0022https://github.com/pandao/editor.md\u0022 title=\u0022Heading link\u0022\u003EHeading link\u003C/a\u003E Heading link \u003Ca href=\u0022https://github.com/pandao/editor.md\u0022 title=\u0022Heading link\u0022\u003EHeading link\u003C/a\u003E\u003C/h4\u003E\u003Ch5 id=\u0022h5-heading-5-link-heading-link\u0022\u003E\u003Ca name=\u0022Heading 5 link   Heading link\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 5 link \u003Ca href=\u0022https://github.com/pandao/editor.md\u0022 title=\u0022Heading link\u0022\u003EHeading link\u003C/a\u003E\u003C/h5\u003E\u003Ch6 id=\u0022h6-heading-6-link-heading-link\u0022\u003E\u003Ca name=\u0022Heading 6 link   Heading link\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHeading 6 link \u003Ca href=\u0022https://github.com/pandao/editor.md\u0022 title=\u0022Heading link\u0022\u003EHeading link\u003C/a\u003E\u003C/h6\u003E\u003Ch4 id=\u0022h4--heading-underline-\u0022\u003E\u003Ca name=\u0022\u6807\u9898\uFF08\u7528\u5E95\u7EBF\u7684\u5F62\u5F0F\uFF09Heading (underline)\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u6807\u9898\uFF08\u7528\u5E95\u7EBF\u7684\u5F62\u5F0F\uFF09Heading (underline)\u003C/h4\u003E\u003Ch1 id=\u0022h1-this-is-an-h1\u0022\u003E\u003Ca name=\u0022This is an H1\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EThis is an H1\u003C/h1\u003E\u003Ch2 id=\u0022h2-this-is-an-h2\u0022\u003E\u003Ca name=\u0022This is an H2\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EThis is an H2\u003C/h2\u003E\u003Ch3 id=\u0022h3-u5B57u7B26u6548u679Cu548Cu6A2Au7EBFu7B49\u0022\u003E\u003Ca name=\u0022\u5B57\u7B26\u6548\u679C\u548C\u6A2A\u7EBF\u7B49\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u5B57\u7B26\u6548\u679C\u548C\u6A2A\u7EBF\u7B49\u003C/h3\u003E\u003Chr\u003E\r\n\u003Cp\u003E\u003Cdel\u003E\u5220\u9664\u7EBF\u003C/del\u003E \u0026lt;s\u0026gt;\u5220\u9664\u7EBF\uFF08\u5F00\u542F\u8BC6\u522BHTML\u6807\u7B7E\u65F6\uFF09\u0026lt;/s\u0026gt;\u003Cbr\u003E\u003Cem\u003E\u659C\u4F53\u5B57\u003C/em\u003E      \u003Cem\u003E\u659C\u4F53\u5B57\u003C/em\u003E\u003Cbr\u003E\u003Cstrong\u003E\u7C97\u4F53\u003C/strong\u003E  \u003Cstrong\u003E\u7C97\u4F53\u003C/strong\u003E\u003Cbr\u003E\u003Cstrong\u003E\u003Cem\u003E\u7C97\u659C\u4F53\u003C/em\u003E\u003C/strong\u003E \u003Cstrong\u003E\u003Cem\u003E\u7C97\u659C\u4F53\u003C/em\u003E\u003C/strong\u003E\u003C/p\u003E\r\n\u003Cp\u003E\u4E0A\u6807\uFF1AX\u0026lt;sub\u0026gt;2\u0026lt;/sub\u0026gt;\uFF0C\u4E0B\u6807\uFF1AO\u0026lt;sup\u0026gt;2\u0026lt;/sup\u0026gt;\u003C/p\u003E\r\n\u003Cp\u003E\u003Cstrong\u003E\u7F29\u5199(\u540CHTML\u7684abbr\u6807\u7B7E)\u003C/strong\u003E\u003C/p\u003E\r\n\u003Cblockquote\u003E\r\n\u003Cp\u003E\u5373\u66F4\u957F\u7684\u5355\u8BCD\u6216\u77ED\u8BED\u7684\u7F29\u5199\u5F62\u5F0F\uFF0C\u524D\u63D0\u662F\u5F00\u542F\u8BC6\u522BHTML\u6807\u7B7E\u65F6\uFF0C\u5DF2\u9ED8\u8BA4\u5F00\u542F\u003C/p\u003E\r\n\u003C/blockquote\u003E\r\n\u003Cp\u003EThe \u0026lt;abbr title=\u0026quot;Hyper Text Markup Language\u0026quot;\u0026gt;HTML\u0026lt;/abbr\u0026gt; specification is maintained by the \u0026lt;abbr title=\u0026quot;World Wide Web Consortium\u0026quot;\u0026gt;W3C\u0026lt;/abbr\u0026gt;.\u003C/p\u003E\r\n\u003Ch3 id=\u0022h3--blockquotes\u0022\u003E\u003Ca name=\u0022\u5F15\u7528 Blockquotes\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u5F15\u7528 Blockquotes\u003C/h3\u003E\u003Cblockquote\u003E\r\n\u003Cp\u003E\u5F15\u7528\u6587\u672C Blockquotes\u003C/p\u003E\r\n\u003C/blockquote\u003E\r\n\u003Cp\u003E\u5F15\u7528\u7684\u884C\u5185\u6DF7\u5408 Blockquotes\u003C/p\u003E\r\n\u003Cblockquote\u003E\r\n\u003Cp\u003E\u5F15\u7528\uFF1A\u5982\u679C\u60F3\u8981\u63D2\u5165\u7A7A\u767D\u6362\u884C\u003Ccode\u003E\u5373\u0026lt;br /\u0026gt;\u6807\u7B7E\u003C/code\u003E\uFF0C\u5728\u63D2\u5165\u5904\u5148\u952E\u5165\u4E24\u4E2A\u4EE5\u4E0A\u7684\u7A7A\u683C\u7136\u540E\u56DE\u8F66\u5373\u53EF\uFF0C\u003Ca href=\u0022http://localhost/\u0022\u003E\u666E\u901A\u94FE\u63A5\u003C/a\u003E\u3002\u003C/p\u003E\r\n\u003C/blockquote\u003E\r\n\u003Ch3 id=\u0022h3--links\u0022\u003E\u003Ca name=\u0022\u951A\u70B9\u4E0E\u94FE\u63A5 Links\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u951A\u70B9\u4E0E\u94FE\u63A5 Links\u003C/h3\u003E\u003Cp\u003E\u003Ca href=\u0022http://localhost/\u0022\u003E\u666E\u901A\u94FE\u63A5\u003C/a\u003E\u003C/p\u003E\r\n\u003Cp\u003E\u003Ca href=\u0022http://localhost/\u0022 title=\u0022\u666E\u901A\u94FE\u63A5\u5E26\u6807\u9898\u0022\u003E\u666E\u901A\u94FE\u63A5\u5E26\u6807\u9898\u003C/a\u003E\u003C/p\u003E\r\n\u003Cp\u003E\u76F4\u63A5\u94FE\u63A5\uFF1A\u003Ca href=\u0022https://github.com\u0022\u003Ehttps://github.com\u003C/a\u003E\u003C/p\u003E\r\n\u003Cp\u003E\u003Ca href=\u0022http://www.this-anchor-link.com/\u0022\u003E\u951A\u70B9\u94FE\u63A5\u003C/a\u003E \u003C/p\u003E\r\n\u003Cp\u003E\u003Ca href=\u0022mailto:test.test@gmail.com\u0022\u0022\u003Emailto:test.test\u0026#64;gmail.com\u003C/a\u003E\u003C/p\u003E\r\n\u003Cp\u003EGFM a-tail link \u003Ca href=\u0022https://github.com/pandao\u0022 title=\u0022\u0026#64;pandao\u0022 class=\u0022at-link\u0022\u003E@pandao\u003C/a\u003E  \u90AE\u7BB1\u5730\u5740\u81EA\u52A8\u94FE\u63A5 \u003Ca href=\u0022mailto:test.test@gmail.com\u0022\u003Etest.test@gmail.com\u003C/a\u003E  \u003Ca href=\u0022mailto:www@vip.qq.com\u0022\u003Ewww@vip.qq.com\u003C/a\u003E\u003C/p\u003E\r\n\u003Cblockquote\u003E\r\n\u003Cp\u003E\u003Ca href=\u0022https://github.com/pandao\u0022 title=\u0022\u0026#64;pandao\u0022 class=\u0022at-link\u0022\u003E@pandao\u003C/a\u003E\u003C/p\u003E\r\n\u003C/blockquote\u003E\r\n\u003Ch3 id=\u0022h3--codes\u0022\u003E\u003Ca name=\u0022\u591A\u8BED\u8A00\u4EE3\u7801\u9AD8\u4EAE Codes\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u591A\u8BED\u8A00\u4EE3\u7801\u9AD8\u4EAE Codes\u003C/h3\u003E\u003Ch4 id=\u0022h4--inline-code\u0022\u003E\u003Ca name=\u0022\u884C\u5185\u4EE3\u7801 Inline code\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u884C\u5185\u4EE3\u7801 Inline code\u003C/h4\u003E\u003Cp\u003E\u6267\u884C\u547D\u4EE4\uFF1A\u003Ccode\u003Enpm install marked\u003C/code\u003E\u003C/p\u003E\r\n\u003Ch4 id=\u0022h4-u7F29u8FDBu98CEu683C\u0022\u003E\u003Ca name=\u0022\u7F29\u8FDB\u98CE\u683C\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u7F29\u8FDB\u98CE\u683C\u003C/h4\u003E\u003Cp\u003E\u5373\u7F29\u8FDB\u56DB\u4E2A\u7A7A\u683C\uFF0C\u4E5F\u505A\u4E3A\u5B9E\u73B0\u7C7B\u4F3C \u003Ccode\u003E\u0026lt;pre\u0026gt;\u003C/code\u003E \u9884\u683C\u5F0F\u5316\u6587\u672C ( Preformatted Text ) \u7684\u529F\u80FD\u3002\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E\u0026lt;?php\r\n    echo \u0026quot;Hello world!\u0026quot;;\r\n?\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003E\u9884\u683C\u5F0F\u5316\u6587\u672C\uFF1A\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode\u003E| First Header  | Second Header |\r\n| ------------- | ------------- |\r\n| Content Cell  | Content Cell  |\r\n| Content Cell  | Content Cell  |\r\n\u003C/code\u003E\u003C/pre\u003E\u003Ch4 id=\u0022h4-js-\u0022\u003E\u003Ca name=\u0022JS\u4EE3\u7801\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EJS\u4EE3\u7801\u3000\u003C/h4\u003E\u003Cpre\u003E\u003Ccode class=\u0022lang-javascript\u0022\u003Efunction test() {\r\n    console.log(\u0026quot;Hello world!\u0026quot;);\r\n}\r\n\r\n(function(){\r\n    var box = function() {\r\n        return box.fn.init();\r\n    };\r\n\r\n    box.prototype = box.fn = {\r\n        init : function(){\r\n            console.log(\u0026#39;box.init()\u0026#39;);\r\n\r\n            return this;\r\n        },\r\n\r\n        add : function(str) {\r\n            alert(\u0026quot;add\u0026quot;, str);\r\n\r\n            return this;\r\n        },\r\n\r\n        remove : function(str) {\r\n            alert(\u0026quot;remove\u0026quot;, str);\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    box.fn.init.prototype = box.fn;\r\n\r\n    window.box =box;\r\n})();\r\n\r\nvar testBox = box();\r\ntestBox.add(\u0026quot;jQuery\u0026quot;).remove(\u0026quot;jQuery\u0026quot;);\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Ch4 id=\u0022h4-html-html-codes\u0022\u003E\u003Ca name=\u0022HTML \u4EE3\u7801 HTML codes\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EHTML \u4EE3\u7801 HTML codes\u003C/h4\u003E\u003Cpre\u003E\u003Ccode class=\u0022lang-html\u0022\u003E\u0026lt;!DOCTYPE html\u0026gt;\r\n\u0026lt;html\u0026gt;\r\n    \u0026lt;head\u0026gt;\r\n        \u0026lt;mate charest=\u0026quot;utf-8\u0026quot; /\u0026gt;\r\n        \u0026lt;meta name=\u0026quot;keywords\u0026quot; content=\u0026quot;Editor.md, Markdown, Editor\u0026quot; /\u0026gt;\r\n        \u0026lt;title\u0026gt;Hello world!\u0026lt;/title\u0026gt;\r\n        \u0026lt;style type=\u0026quot;text/css\u0026quot;\u0026gt;\r\n            body{font-size:14px;color:#444;font-family: \u0026quot;Microsoft Yahei\u0026quot;, Tahoma, \u0026quot;Hiragino Sans GB\u0026quot;, Arial;background:#fff;}\r\n            ul{list-style: none;}\r\n            img{border:none;vertical-align: middle;}\r\n        \u0026lt;/style\u0026gt;\r\n    \u0026lt;/head\u0026gt;\r\n    \u0026lt;body\u0026gt;\r\n        \u0026lt;h1 class=\u0026quot;text-xxl\u0026quot;\u0026gt;Hello world!\u0026lt;/h1\u0026gt;\r\n        \u0026lt;p class=\u0026quot;text-green\u0026quot;\u0026gt;Plain text\u0026lt;/p\u0026gt;\r\n    \u0026lt;/body\u0026gt;\r\n\u0026lt;/html\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Ch3 id=\u0022h3--images\u0022\u003E\u003Ca name=\u0022\u56FE\u7247 Images\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u56FE\u7247 Images\u003C/h3\u003E\u003Cp\u003EImage:\u003C/p\u003E\r\n\u003Cp\u003E\u003Cimg src=\u0022https://pandao.github.io/editor.md/examples/images/4.jpg\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cblockquote\u003E\r\n\u003Cp\u003EFollow your heart.\u003C/p\u003E\r\n\u003C/blockquote\u003E\r\n\u003Cp\u003E\u003Cimg src=\u0022https://pandao.github.io/editor.md/examples/images/8.jpg\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cblockquote\u003E\r\n\u003Cp\u003E\u56FE\u4E3A\uFF1A\u53A6\u95E8\u767D\u57CE\u6C99\u6EE9\u003C/p\u003E\r\n\u003C/blockquote\u003E\r\n\u003Cp\u003E\u56FE\u7247\u52A0\u94FE\u63A5 (Image \u002B Link)\uFF1A\u003C/p\u003E\r\n\u003Cp\u003E\u003Ca href=\u0022https://pandao.github.io/editor.md/images/7.jpg\u0022 title=\u0022\u674E\u5065\u9996\u5F20\u4E13\u8F91\u300A\u4F3C\u6C34\u6D41\u5E74\u300B\u5C01\u9762\u0022\u003E\u003Cimg src=\u0022https://pandao.github.io/editor.md/examples/images/7.jpg\u0022 alt=\u0022\u0022\u003E\u003C/a\u003E\u003C/p\u003E\r\n\u003Cblockquote\u003E\r\n\u003Cp\u003E\u56FE\u4E3A\uFF1A\u674E\u5065\u9996\u5F20\u4E13\u8F91\u300A\u4F3C\u6C34\u6D41\u5E74\u300B\u5C01\u9762\u003C/p\u003E\r\n\u003C/blockquote\u003E\r\n\u003Chr\u003E\r\n\u003Ch3 id=\u0022h3--lists\u0022\u003E\u003Ca name=\u0022\u5217\u8868 Lists\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u5217\u8868 Lists\u003C/h3\u003E\u003Ch4 id=\u0022h4--unordered-lists-\u0022\u003E\u003Ca name=\u0022\u65E0\u5E8F\u5217\u8868\uFF08\u51CF\u53F7\uFF09Unordered Lists (-)\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u65E0\u5E8F\u5217\u8868\uFF08\u51CF\u53F7\uFF09Unordered Lists (-)\u003C/h4\u003E\u003Cul\u003E\r\n\u003Cli\u003E\u5217\u8868\u4E00\u003C/li\u003E\u003Cli\u003E\u5217\u8868\u4E8C\u003C/li\u003E\u003Cli\u003E\u5217\u8868\u4E09\u003C/li\u003E\u003C/ul\u003E\r\n\u003Ch4 id=\u0022h4--unordered-lists-\u0022\u003E\u003Ca name=\u0022\u65E0\u5E8F\u5217\u8868\uFF08\u661F\u53F7\uFF09Unordered Lists (*)\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u65E0\u5E8F\u5217\u8868\uFF08\u661F\u53F7\uFF09Unordered Lists (*)\u003C/h4\u003E\u003Cul\u003E\r\n\u003Cli\u003E\u5217\u8868\u4E00\u003C/li\u003E\u003Cli\u003E\u5217\u8868\u4E8C\u003C/li\u003E\u003Cli\u003E\u5217\u8868\u4E09\u003C/li\u003E\u003C/ul\u003E\r\n\u003Ch4 id=\u0022h4--unordered-lists-\u0022\u003E\u003Ca name=\u0022\u65E0\u5E8F\u5217\u8868\uFF08\u52A0\u53F7\u548C\u5D4C\u5957\uFF09Unordered Lists (\u002B)\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u65E0\u5E8F\u5217\u8868\uFF08\u52A0\u53F7\u548C\u5D4C\u5957\uFF09Unordered Lists (\u002B)\u003C/h4\u003E\u003Cul\u003E\r\n\u003Cli\u003E\u5217\u8868\u4E00\u003C/li\u003E\u003Cli\u003E\u5217\u8868\u4E8C\u003Cul\u003E\r\n\u003Cli\u003E\u5217\u8868\u4E8C-1\u003C/li\u003E\u003Cli\u003E\u5217\u8868\u4E8C-2\u003C/li\u003E\u003Cli\u003E\u5217\u8868\u4E8C-3\u003C/li\u003E\u003C/ul\u003E\r\n\u003C/li\u003E\u003Cli\u003E\u5217\u8868\u4E09\u003Cul\u003E\r\n\u003Cli\u003E\u5217\u8868\u4E00\u003C/li\u003E\u003Cli\u003E\u5217\u8868\u4E8C\u003C/li\u003E\u003Cli\u003E\u5217\u8868\u4E09\u003C/li\u003E\u003C/ul\u003E\r\n\u003C/li\u003E\u003C/ul\u003E\r\n\u003Ch4 id=\u0022h4--ordered-lists-\u0022\u003E\u003Ca name=\u0022\u6709\u5E8F\u5217\u8868 Ordered Lists (-)\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u6709\u5E8F\u5217\u8868 Ordered Lists (-)\u003C/h4\u003E\u003Col\u003E\r\n\u003Cli\u003E\u7B2C\u4E00\u884C\u003C/li\u003E\u003Cli\u003E\u7B2C\u4E8C\u884C\u003C/li\u003E\u003Cli\u003E\u7B2C\u4E09\u884C\u003C/li\u003E\u003C/ol\u003E\r\n\u003Ch4 id=\u0022h4-gfm-task-list\u0022\u003E\u003Ca name=\u0022GFM task list\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EGFM task list\u003C/h4\u003E\u003Cul\u003E\r\n\u003Cli\u003E[x] GFM task list 1\u003C/li\u003E\u003Cli\u003E[x] GFM task list 2\u003C/li\u003E\u003Cli\u003E[ ] GFM task list 3\u003Cul\u003E\r\n\u003Cli\u003E[ ] GFM task list 3-1\u003C/li\u003E\u003Cli\u003E[ ] GFM task list 3-2\u003C/li\u003E\u003Cli\u003E[ ] GFM task list 3-3\u003C/li\u003E\u003C/ul\u003E\r\n\u003C/li\u003E\u003Cli\u003E[ ] GFM task list 4\u003Cul\u003E\r\n\u003Cli\u003E[ ] GFM task list 4-1\u003C/li\u003E\u003Cli\u003E[ ] GFM task list 4-2\u003C/li\u003E\u003C/ul\u003E\r\n\u003C/li\u003E\u003C/ul\u003E\r\n\u003Chr\u003E\r\n\u003Ch3 id=\u0022h3--tables\u0022\u003E\u003Ca name=\u0022\u7ED8\u5236\u8868\u683C Tables\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u7ED8\u5236\u8868\u683C Tables\u003C/h3\u003E\u003Ctable\u003E\r\n\u003Cthead\u003E\r\n\u003Ctr\u003E\r\n\u003Cth\u003E\u9879\u76EE\u003C/th\u003E\r\n\u003Cth style=\u0022text-align:right\u0022\u003E\u4EF7\u683C\u003C/th\u003E\r\n\u003Cth style=\u0022text-align:center\u0022\u003E\u6570\u91CF\u003C/th\u003E\r\n\u003C/tr\u003E\r\n\u003C/thead\u003E\r\n\u003Ctbody\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003E\u8BA1\u7B97\u673A\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:right\u0022\u003E$1600\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:center\u0022\u003E5\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003E\u624B\u673A\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:right\u0022\u003E$12\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:center\u0022\u003E12\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003E\u7BA1\u7EBF\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:right\u0022\u003E$1\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:center\u0022\u003E234\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003C/tbody\u003E\r\n\u003C/table\u003E\r\n\u003Ctable\u003E\r\n\u003Cthead\u003E\r\n\u003Ctr\u003E\r\n\u003Cth\u003EFirst Header\u003C/th\u003E\r\n\u003Cth\u003ESecond Header\u003C/th\u003E\r\n\u003C/tr\u003E\r\n\u003C/thead\u003E\r\n\u003Ctbody\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003EContent Cell\u003C/td\u003E\r\n\u003Ctd\u003EContent Cell\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003EContent Cell\u003C/td\u003E\r\n\u003Ctd\u003EContent Cell \u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003C/tbody\u003E\r\n\u003C/table\u003E\r\n\u003Ctable\u003E\r\n\u003Cthead\u003E\r\n\u003Ctr\u003E\r\n\u003Cth\u003EFirst Header\u003C/th\u003E\r\n\u003Cth\u003ESecond Header\u003C/th\u003E\r\n\u003C/tr\u003E\r\n\u003C/thead\u003E\r\n\u003Ctbody\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003EContent Cell\u003C/td\u003E\r\n\u003Ctd\u003EContent Cell\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003EContent Cell\u003C/td\u003E\r\n\u003Ctd\u003EContent Cell\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003C/tbody\u003E\r\n\u003C/table\u003E\r\n\u003Ctable\u003E\r\n\u003Cthead\u003E\r\n\u003Ctr\u003E\r\n\u003Cth\u003EFunction name\u003C/th\u003E\r\n\u003Cth\u003EDescription\u003C/th\u003E\r\n\u003C/tr\u003E\r\n\u003C/thead\u003E\r\n\u003Ctbody\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003E\u003Ccode\u003Ehelp()\u003C/code\u003E\u003C/td\u003E\r\n\u003Ctd\u003EDisplay the help window.\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003E\u003Ccode\u003Edestroy()\u003C/code\u003E\u003C/td\u003E\r\n\u003Ctd\u003E\u003Cstrong\u003EDestroy your computer!\u003C/strong\u003E\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003C/tbody\u003E\r\n\u003C/table\u003E\r\n\u003Ctable\u003E\r\n\u003Cthead\u003E\r\n\u003Ctr\u003E\r\n\u003Cth style=\u0022text-align:left\u0022\u003ELeft-Aligned\u003C/th\u003E\r\n\u003Cth style=\u0022text-align:center\u0022\u003ECenter Aligned\u003C/th\u003E\r\n\u003Cth style=\u0022text-align:right\u0022\u003ERight Aligned\u003C/th\u003E\r\n\u003C/tr\u003E\r\n\u003C/thead\u003E\r\n\u003Ctbody\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd style=\u0022text-align:left\u0022\u003Ecol 3 is\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:center\u0022\u003Esome wordy text\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:right\u0022\u003E$1600\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd style=\u0022text-align:left\u0022\u003Ecol 2 is\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:center\u0022\u003Ecentered\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:right\u0022\u003E$12\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd style=\u0022text-align:left\u0022\u003Ezebra stripes\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:center\u0022\u003Eare neat\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:right\u0022\u003E$1\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003C/tbody\u003E\r\n\u003C/table\u003E\r\n\u003Ctable\u003E\r\n\u003Cthead\u003E\r\n\u003Ctr\u003E\r\n\u003Cth\u003EItem\u003C/th\u003E\r\n\u003Cth style=\u0022text-align:right\u0022\u003EValue\u003C/th\u003E\r\n\u003C/tr\u003E\r\n\u003C/thead\u003E\r\n\u003Ctbody\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003EComputer\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:right\u0022\u003E$1600\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003EPhone\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:right\u0022\u003E$12\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003EPipe\u003C/td\u003E\r\n\u003Ctd style=\u0022text-align:right\u0022\u003E$1\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003C/tbody\u003E\r\n\u003C/table\u003E\r\n\u003Chr\u003E\r\n\u003Ch4 id=\u0022h4--html-entities-codes\u0022\u003E\u003Ca name=\u0022\u7279\u6B8A\u7B26\u53F7 HTML Entities Codes\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u7279\u6B8A\u7B26\u53F7 HTML Entities Codes\u003C/h4\u003E\u003Cp\u003E\u0026copy; \u0026amp;  \u0026uml; \u0026trade; \u0026iexcl; \u0026pound;\u003Cbr\u003E\u0026amp; \u0026lt; \u0026gt; \u0026yen; \u0026euro; \u0026reg; \u0026plusmn; \u0026para; \u0026sect; \u0026brvbar; \u0026macr; \u0026laquo; \u0026middot; \u003C/p\u003E\r\n\u003Cp\u003EX\u0026sup2; Y\u0026sup3; \u0026frac34; \u0026frac14;  \u0026times;  \u0026divide;   \u0026raquo;\u003C/p\u003E\r\n\u003Cp\u003E18\u0026ordm;C  \u0026quot;  \u0026apos;\u003C/p\u003E\r\n\u003Chr style=\u0022page-break-after:always;\u0022 class=\u0022page-break editormd-page-break\u0022 /\u003E\u003Ch3 id=\u0022h3-emoji-smiley-\u0022\u003E\u003Ca name=\u0022Emoji\u8868\u60C5 :smiley:\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EEmoji\u8868\u60C5 :smiley:\u003C/h3\u003E\u003Cblockquote\u003E\r\n\u003Cp\u003EBlockquotes :star:\u003C/p\u003E\r\n\u003C/blockquote\u003E\r\n\u003Ch4 id=\u0022h4-gfm-task-lists-amp-emoji-amp-fontawesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x-\u0022\u003E\u003Ca name=\u0022GFM task lists \u0026amp; Emoji \u0026amp; fontAwesome icon emoji \u0026amp; editormd logo emoji :editormd-logo-5x:\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EGFM task lists \u0026amp; Emoji \u0026amp; fontAwesome icon emoji \u0026amp; editormd logo emoji :editormd-logo-5x:\u003C/h4\u003E\u003Cul\u003E\r\n\u003Cli\u003E[x] :smiley: \u003Ca href=\u0022https://github.com/mentions\u0022 title=\u0022\u0026#64;mentions\u0022 class=\u0022at-link\u0022\u003E@mentions\u003C/a\u003E, :smiley: #refs, \u003Ca href=\u0022\u0022\u003Elinks\u003C/a\u003E, \u003Cstrong\u003Eformatting\u003C/strong\u003E, and \u0026lt;del\u0026gt;tags\u0026lt;/del\u0026gt; supported :editormd-logo:;\u003C/li\u003E\u003Cli\u003E[x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\u003C/li\u003E\u003Cli\u003E[x] [ ] :smiley: this is a complete item :smiley:;\u003C/li\u003E\u003Cli\u003E[ ] []this is an incomplete item \u003Ca href=\u0022#\u0022\u003Etest link\u003C/a\u003E :fa-star: \u003Ca href=\u0022https://github.com/pandao\u0022 title=\u0022\u0026#64;pandao\u0022 class=\u0022at-link\u0022\u003E@pandao\u003C/a\u003E; \u003C/li\u003E\u003Cli\u003E[ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\u003Cul\u003E\r\n\u003Cli\u003E[ ] :smiley: this is an incomplete item \u003Ca href=\u0022#\u0022\u003Etest link\u003C/a\u003E :fa-star: :fa-gear:;\u003C/li\u003E\u003Cli\u003E[ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item \u003Ca href=\u0022#\u0022\u003Etest link\u003C/a\u003E;\u003C/li\u003E\u003C/ul\u003E\r\n\u003C/li\u003E\u003C/ul\u003E\r\n\u003Ch4 id=\u0022h4--escape\u0022\u003E\u003Ca name=\u0022\u53CD\u659C\u6760 Escape\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u53CD\u659C\u6760 Escape\u003C/h4\u003E\u003Cp\u003E*literal asterisks*\u003C/p\u003E\r\n\u003Chr style=\u0022page-break-after:always;\u0022 class=\u0022page-break editormd-page-break\u0022 /\u003E\u003Ch3 id=\u0022h3--tex-katex-\u0022\u003E\u003Ca name=\u0022\u79D1\u5B66\u516C\u5F0F TeX(KaTeX)\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u79D1\u5B66\u516C\u5F0F TeX(KaTeX)\u003C/h3\u003E\u003Cp class=\u0022editormd-tex\u0022\u003EE=mc^2\u003C/p\u003E\r\n\u003Cp\u003E\u884C\u5185\u7684\u516C\u5F0F\u003Cspan class=\u0022editormd-tex\u0022\u003EE=mc^2\u003C/span\u003E\u884C\u5185\u7684\u516C\u5F0F\uFF0C\u884C\u5185\u7684\u003Cspan class=\u0022editormd-tex\u0022\u003EE=mc^2\u003C/span\u003E\u516C\u5F0F\u3002\u003C/p\u003E\r\n\u003Cp class=\u0022editormd-tex\u0022\u003Ex \u0026gt; y\u003C/p\u003E\r\n\u003Cp class=\u0022editormd-tex\u0022\u003E(\\sqrt{3x-1}\u002B(1\u002Bx)^2)\u003C/p\u003E\r\n\u003Cp class=\u0022editormd-tex\u0022\u003E\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i \u002B \\cos(f))\u003C/p\u003E\r\n\u003Cp\u003E\u591A\u884C\u516C\u5F0F\uFF1A\u003C/p\u003E\r\n\u003Cp class=\u0022editormd-tex\u0022\u003E\\displaystyle\r\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\r\n\\leq\r\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\r\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\u003C/p\u003E\u003Cp class=\u0022editormd-tex\u0022\u003E\\displaystyle \r\n    \\frac{1}{\r\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\r\n        \\frac25 \\pi}} = 1\u002B\\frac{e^{-2\\pi}} {1\u002B\\frac{e^{-4\\pi}} {\r\n        1\u002B\\frac{e^{-6\\pi}}\r\n        {1\u002B\\frac{e^{-8\\pi}}\r\n         {1\u002B\\cdots} }\r\n        } \r\n    }\u003C/p\u003E\u003Cp class=\u0022editormd-tex\u0022\u003Ef(x) = \\int_{-\\infty}^\\infty\r\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\r\n    \\,d\\xi\u003C/p\u003E\u003Ch3 id=\u0022h3--page-break\u0022\u003E\u003Ca name=\u0022\u5206\u9875\u7B26 Page break\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u5206\u9875\u7B26 Page break\u003C/h3\u003E\u003Cblockquote\u003E\r\n\u003Cp\u003EPrint Test: Ctrl \u002B P\u003C/p\u003E\r\n\u003C/blockquote\u003E\r\n\u003Chr style=\u0022page-break-after:always;\u0022 class=\u0022page-break editormd-page-break\u0022 /\u003E\u003Ch3 id=\u0022h3--flowchart\u0022\u003E\u003Ca name=\u0022\u7ED8\u5236\u6D41\u7A0B\u56FE Flowchart\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u7ED8\u5236\u6D41\u7A0B\u56FE Flowchart\u003C/h3\u003E\u003Cdiv class=\u0022flowchart\u0022\u003Est=\u003Estart: \u7528\u6237\u767B\u9646\r\nop=\u003Eoperation: \u767B\u9646\u64CD\u4F5C\r\ncond=\u003Econdition: \u767B\u9646\u6210\u529F Yes or No?\r\ne=\u003Eend: \u8FDB\u5165\u540E\u53F0\r\n\r\nst-\u003Eop-\u003Econd\r\ncond(yes)-\u003Ee\r\ncond(no)-\u003Eop\u003C/div\u003E\u003Chr style=\u0022page-break-after:always;\u0022 class=\u0022page-break editormd-page-break\u0022 /\u003E\u003Ch3 id=\u0022h3--sequence-diagram\u0022\u003E\u003Ca name=\u0022\u7ED8\u5236\u5E8F\u5217\u56FE Sequence Diagram\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u7ED8\u5236\u5E8F\u5217\u56FE Sequence Diagram\u003C/h3\u003E\u003Cdiv class=\u0022sequence-diagram\u0022\u003EAndrew-\u003EChina: Says Hello \r\nNote right of China: China thinks\\nabout it \r\nChina--\u003EAndrew: How are you? \r\nAndrew-\u003E\u003EChina: I am good thanks!\u003C/div\u003E\u003Ch3 id=\u0022h3-end\u0022\u003E\u003Ca name=\u0022End\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003EEnd\u003C/h3\u003E",
        "mainImage": "https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png",
        "commentCount": 0,
        "viewCount": 13,
        "tag": "123",
        "images": [],
        "markdown": "# Editor.md\r\n\r\n![](https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png)\r\n\r\n![](https://img.shields.io/github/stars/pandao/editor.md.svg) ![](https://img.shields.io/github/forks/pandao/editor.md.svg) ![](https://img.shields.io/github/tag/pandao/editor.md.svg) ![](https://img.shields.io/github/release/pandao/editor.md.svg) ![](https://img.shields.io/github/issues/pandao/editor.md.svg) ![](https://img.shields.io/bower/v/editor.md.svg)\r\n\r\n**\u76EE\u5F55 (Table of Contents)**\r\n\r\n# Heading 1\r\n## Heading 2               \r\n### Heading 3\r\n#### Heading 4\r\n##### Heading 5\r\n###### Heading 6\r\n# Heading 1 link [Heading link](https://github.com/pandao/editor.md \u0022Heading link\u0022)\r\n## Heading 2 link [Heading link](https://github.com/pandao/editor.md \u0022Heading link\u0022)\r\n### Heading 3 link [Heading link](https://github.com/pandao/editor.md \u0022Heading link\u0022)\r\n#### Heading 4 link [Heading link](https://github.com/pandao/editor.md \u0022Heading link\u0022) Heading link [Heading link](https://github.com/pandao/editor.md \u0022Heading link\u0022)\r\n##### Heading 5 link [Heading link](https://github.com/pandao/editor.md \u0022Heading link\u0022)\r\n###### Heading 6 link [Heading link](https://github.com/pandao/editor.md \u0022Heading link\u0022)\r\n\r\n#### \u6807\u9898\uFF08\u7528\u5E95\u7EBF\u7684\u5F62\u5F0F\uFF09Heading (underline)\r\n\r\nThis is an H1\r\n=============\r\n\r\nThis is an H2\r\n-------------\r\n\r\n### \u5B57\u7B26\u6548\u679C\u548C\u6A2A\u7EBF\u7B49\r\n                \r\n----\r\n\r\n~~\u5220\u9664\u7EBF~~ \u003Cs\u003E\u5220\u9664\u7EBF\uFF08\u5F00\u542F\u8BC6\u522BHTML\u6807\u7B7E\u65F6\uFF09\u003C/s\u003E\r\n*\u659C\u4F53\u5B57*      _\u659C\u4F53\u5B57_\r\n**\u7C97\u4F53**  __\u7C97\u4F53__\r\n***\u7C97\u659C\u4F53*** ___\u7C97\u659C\u4F53___\r\n\r\n\u4E0A\u6807\uFF1AX\u003Csub\u003E2\u003C/sub\u003E\uFF0C\u4E0B\u6807\uFF1AO\u003Csup\u003E2\u003C/sup\u003E\r\n\r\n**\u7F29\u5199(\u540CHTML\u7684abbr\u6807\u7B7E)**\r\n\r\n\u003E \u5373\u66F4\u957F\u7684\u5355\u8BCD\u6216\u77ED\u8BED\u7684\u7F29\u5199\u5F62\u5F0F\uFF0C\u524D\u63D0\u662F\u5F00\u542F\u8BC6\u522BHTML\u6807\u7B7E\u65F6\uFF0C\u5DF2\u9ED8\u8BA4\u5F00\u542F\r\n\r\nThe \u003Cabbr title=\u0022Hyper Text Markup Language\u0022\u003EHTML\u003C/abbr\u003E specification is maintained by the \u003Cabbr title=\u0022World Wide Web Consortium\u0022\u003EW3C\u003C/abbr\u003E.\r\n\r\n### \u5F15\u7528 Blockquotes\r\n\r\n\u003E \u5F15\u7528\u6587\u672C Blockquotes\r\n\r\n\u5F15\u7528\u7684\u884C\u5185\u6DF7\u5408 Blockquotes\r\n                    \r\n\u003E \u5F15\u7528\uFF1A\u5982\u679C\u60F3\u8981\u63D2\u5165\u7A7A\u767D\u6362\u884C\u0060\u5373\u003Cbr /\u003E\u6807\u7B7E\u0060\uFF0C\u5728\u63D2\u5165\u5904\u5148\u952E\u5165\u4E24\u4E2A\u4EE5\u4E0A\u7684\u7A7A\u683C\u7136\u540E\u56DE\u8F66\u5373\u53EF\uFF0C[\u666E\u901A\u94FE\u63A5](http://localhost/)\u3002\r\n\r\n### \u951A\u70B9\u4E0E\u94FE\u63A5 Links\r\n\r\n[\u666E\u901A\u94FE\u63A5](http://localhost/)\r\n\r\n[\u666E\u901A\u94FE\u63A5\u5E26\u6807\u9898](http://localhost/ \u0022\u666E\u901A\u94FE\u63A5\u5E26\u6807\u9898\u0022)\r\n\r\n\u76F4\u63A5\u94FE\u63A5\uFF1A\u003Chttps://github.com\u003E\r\n\r\n[\u951A\u70B9\u94FE\u63A5][anchor-id] \r\n\r\n[anchor-id]: http://www.this-anchor-link.com/\r\n\r\n[mailto:test.test@gmail.com](mailto:test.test@gmail.com)\r\n\r\nGFM a-tail link @pandao  \u90AE\u7BB1\u5730\u5740\u81EA\u52A8\u94FE\u63A5 test.test@gmail.com  www@vip.qq.com\r\n\r\n\u003E @pandao\r\n\r\n### \u591A\u8BED\u8A00\u4EE3\u7801\u9AD8\u4EAE Codes\r\n\r\n#### \u884C\u5185\u4EE3\u7801 Inline code\r\n\r\n\u6267\u884C\u547D\u4EE4\uFF1A\u0060npm install marked\u0060\r\n\r\n#### \u7F29\u8FDB\u98CE\u683C\r\n\r\n\u5373\u7F29\u8FDB\u56DB\u4E2A\u7A7A\u683C\uFF0C\u4E5F\u505A\u4E3A\u5B9E\u73B0\u7C7B\u4F3C \u0060\u003Cpre\u003E\u0060 \u9884\u683C\u5F0F\u5316\u6587\u672C ( Preformatted Text ) \u7684\u529F\u80FD\u3002\r\n\r\n    \u003C?php\r\n        echo \u0022Hello world!\u0022;\r\n    ?\u003E\r\n    \r\n\u9884\u683C\u5F0F\u5316\u6587\u672C\uFF1A\r\n\r\n    | First Header  | Second Header |\r\n    | ------------- | ------------- |\r\n    | Content Cell  | Content Cell  |\r\n    | Content Cell  | Content Cell  |\r\n\r\n#### JS\u4EE3\u7801\u3000\r\n\r\n\u0060\u0060\u0060javascript\r\nfunction test() {\r\n\tconsole.log(\u0022Hello world!\u0022);\r\n}\r\n \r\n(function(){\r\n    var box = function() {\r\n        return box.fn.init();\r\n    };\r\n\r\n    box.prototype = box.fn = {\r\n        init : function(){\r\n            console.log(\u0027box.init()\u0027);\r\n\r\n\t\t\treturn this;\r\n        },\r\n\r\n\t\tadd : function(str) {\r\n\t\t\talert(\u0022add\u0022, str);\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tremove : function(str) {\r\n\t\t\talert(\u0022remove\u0022, str);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n    };\r\n    \r\n    box.fn.init.prototype = box.fn;\r\n    \r\n    window.box =box;\r\n})();\r\n\r\nvar testBox = box();\r\ntestBox.add(\u0022jQuery\u0022).remove(\u0022jQuery\u0022);\r\n\u0060\u0060\u0060\r\n\r\n#### HTML \u4EE3\u7801 HTML codes\r\n\r\n\u0060\u0060\u0060html\r\n\u003C!DOCTYPE html\u003E\r\n\u003Chtml\u003E\r\n    \u003Chead\u003E\r\n        \u003Cmate charest=\u0022utf-8\u0022 /\u003E\r\n        \u003Cmeta name=\u0022keywords\u0022 content=\u0022Editor.md, Markdown, Editor\u0022 /\u003E\r\n        \u003Ctitle\u003EHello world!\u003C/title\u003E\r\n        \u003Cstyle type=\u0022text/css\u0022\u003E\r\n            body{font-size:14px;color:#444;font-family: \u0022Microsoft Yahei\u0022, Tahoma, \u0022Hiragino Sans GB\u0022, Arial;background:#fff;}\r\n            ul{list-style: none;}\r\n            img{border:none;vertical-align: middle;}\r\n        \u003C/style\u003E\r\n    \u003C/head\u003E\r\n    \u003Cbody\u003E\r\n        \u003Ch1 class=\u0022text-xxl\u0022\u003EHello world!\u003C/h1\u003E\r\n        \u003Cp class=\u0022text-green\u0022\u003EPlain text\u003C/p\u003E\r\n    \u003C/body\u003E\r\n\u003C/html\u003E\r\n\u0060\u0060\u0060\r\n\r\n### \u56FE\u7247 Images\r\n\r\nImage:\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/4.jpg)\r\n\r\n\u003E Follow your heart.\r\n\r\n![](https://pandao.github.io/editor.md/examples/images/8.jpg)\r\n\r\n\u003E \u56FE\u4E3A\uFF1A\u53A6\u95E8\u767D\u57CE\u6C99\u6EE9\r\n\r\n\u56FE\u7247\u52A0\u94FE\u63A5 (Image \u002B Link)\uFF1A\r\n\r\n[![](https://pandao.github.io/editor.md/examples/images/7.jpg)](https://pandao.github.io/editor.md/images/7.jpg \u0022\u674E\u5065\u9996\u5F20\u4E13\u8F91\u300A\u4F3C\u6C34\u6D41\u5E74\u300B\u5C01\u9762\u0022)\r\n\r\n\u003E \u56FE\u4E3A\uFF1A\u674E\u5065\u9996\u5F20\u4E13\u8F91\u300A\u4F3C\u6C34\u6D41\u5E74\u300B\u5C01\u9762\r\n                \r\n----\r\n\r\n### \u5217\u8868 Lists\r\n\r\n#### \u65E0\u5E8F\u5217\u8868\uFF08\u51CF\u53F7\uFF09Unordered Lists (-)\r\n                \r\n- \u5217\u8868\u4E00\r\n- \u5217\u8868\u4E8C\r\n- \u5217\u8868\u4E09\r\n     \r\n#### \u65E0\u5E8F\u5217\u8868\uFF08\u661F\u53F7\uFF09Unordered Lists (*)\r\n\r\n* \u5217\u8868\u4E00\r\n* \u5217\u8868\u4E8C\r\n* \u5217\u8868\u4E09\r\n\r\n#### \u65E0\u5E8F\u5217\u8868\uFF08\u52A0\u53F7\u548C\u5D4C\u5957\uFF09Unordered Lists (\u002B)\r\n                \r\n\u002B \u5217\u8868\u4E00\r\n\u002B \u5217\u8868\u4E8C\r\n    \u002B \u5217\u8868\u4E8C-1\r\n    \u002B \u5217\u8868\u4E8C-2\r\n    \u002B \u5217\u8868\u4E8C-3\r\n\u002B \u5217\u8868\u4E09\r\n    * \u5217\u8868\u4E00\r\n    * \u5217\u8868\u4E8C\r\n    * \u5217\u8868\u4E09\r\n\r\n#### \u6709\u5E8F\u5217\u8868 Ordered Lists (-)\r\n                \r\n1. \u7B2C\u4E00\u884C\r\n2. \u7B2C\u4E8C\u884C\r\n3. \u7B2C\u4E09\u884C\r\n\r\n#### GFM task list\r\n\r\n- [x] GFM task list 1\r\n- [x] GFM task list 2\r\n- [ ] GFM task list 3\r\n    - [ ] GFM task list 3-1\r\n    - [ ] GFM task list 3-2\r\n    - [ ] GFM task list 3-3\r\n- [ ] GFM task list 4\r\n    - [ ] GFM task list 4-1\r\n    - [ ] GFM task list 4-2\r\n                \r\n----\r\n                    \r\n### \u7ED8\u5236\u8868\u683C Tables\r\n\r\n| \u9879\u76EE        | \u4EF7\u683C   |  \u6570\u91CF  |\r\n| --------   | -----:  | :----:  |\r\n| \u8BA1\u7B97\u673A      | $1600   |   5     |\r\n| \u624B\u673A        |   $12   |   12   |\r\n| \u7BA1\u7EBF        |    $1    |  234  |\r\n                    \r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell \r\n\r\n| First Header  | Second Header |\r\n| ------------- | ------------- |\r\n| Content Cell  | Content Cell  |\r\n| Content Cell  | Content Cell  |\r\n\r\n| Function name | Description                    |\r\n| ------------- | ------------------------------ |\r\n| \u0060help()\u0060      | Display the help window.       |\r\n| \u0060destroy()\u0060   | **Destroy your computer!**     |\r\n\r\n| Left-Aligned  | Center Aligned  | Right Aligned |\r\n| :------------ |:---------------:| -----:|\r\n| col 3 is      | some wordy text | $1600 |\r\n| col 2 is      | centered        |   $12 |\r\n| zebra stripes | are neat        |    $1 |\r\n\r\n| Item      | Value |\r\n| --------- | -----:|\r\n| Computer  | $1600 |\r\n| Phone     |   $12 |\r\n| Pipe      |    $1 |\r\n                \r\n----\r\n\r\n#### \u7279\u6B8A\u7B26\u53F7 HTML Entities Codes\r\n\r\n\u0026copy; \u0026  \u0026uml; \u0026trade; \u0026iexcl; \u0026pound;\r\n\u0026amp; \u0026lt; \u0026gt; \u0026yen; \u0026euro; \u0026reg; \u0026plusmn; \u0026para; \u0026sect; \u0026brvbar; \u0026macr; \u0026laquo; \u0026middot; \r\n\r\nX\u0026sup2; Y\u0026sup3; \u0026frac34; \u0026frac14;  \u0026times;  \u0026divide;   \u0026raquo;\r\n\r\n18\u0026ordm;C  \u0026quot;  \u0026apos;\r\n\r\n[========]\r\n\r\n### Emoji\u8868\u60C5 :smiley:\r\n\r\n\u003E Blockquotes :star:\r\n\r\n#### GFM task lists \u0026 Emoji \u0026 fontAwesome icon emoji \u0026 editormd logo emoji :editormd-logo-5x:\r\n\r\n- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and \u003Cdel\u003Etags\u003C/del\u003E supported :editormd-logo:;\r\n- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\r\n- [x] [ ] :smiley: this is a complete item :smiley:;\r\n- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao; \r\n- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;\r\n    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);\r\n \r\n#### \u53CD\u659C\u6760 Escape\r\n\r\n\\*literal asterisks\\*\r\n\r\n[========]\r\n            \r\n### \u79D1\u5B66\u516C\u5F0F TeX(KaTeX)\r\n\r\n$$E=mc^2$$\r\n\r\n\u884C\u5185\u7684\u516C\u5F0F$$E=mc^2$$\u884C\u5185\u7684\u516C\u5F0F\uFF0C\u884C\u5185\u7684$$E=mc^2$$\u516C\u5F0F\u3002\r\n\r\n$$x \u003E y$$\r\n\r\n$$\\(\\sqrt{3x-1}\u002B(1\u002Bx)^2\\)$$\r\n                    \r\n$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i \u002B \\cos(f))$$\r\n\r\n\u591A\u884C\u516C\u5F0F\uFF1A\r\n\r\n\u0060\u0060\u0060math\r\n\\displaystyle\r\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\r\n\\leq\r\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\r\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\r\n\u0060\u0060\u0060\r\n\r\n\u0060\u0060\u0060katex\r\n\\displaystyle \r\n    \\frac{1}{\r\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\r\n        \\frac25 \\pi}} = 1\u002B\\frac{e^{-2\\pi}} {1\u002B\\frac{e^{-4\\pi}} {\r\n        1\u002B\\frac{e^{-6\\pi}}\r\n        {1\u002B\\frac{e^{-8\\pi}}\r\n         {1\u002B\\cdots} }\r\n        } \r\n    }\r\n\u0060\u0060\u0060\r\n\r\n\u0060\u0060\u0060latex\r\nf(x) = \\int_{-\\infty}^\\infty\r\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\r\n    \\,d\\xi\r\n\u0060\u0060\u0060\r\n\r\n### \u5206\u9875\u7B26 Page break\r\n\r\n\u003E Print Test: Ctrl \u002B P\r\n\r\n[========]\r\n\r\n### \u7ED8\u5236\u6D41\u7A0B\u56FE Flowchart\r\n\r\n\u0060\u0060\u0060flow\r\nst=\u003Estart: \u7528\u6237\u767B\u9646\r\nop=\u003Eoperation: \u767B\u9646\u64CD\u4F5C\r\ncond=\u003Econdition: \u767B\u9646\u6210\u529F Yes or No?\r\ne=\u003Eend: \u8FDB\u5165\u540E\u53F0\r\n\r\nst-\u003Eop-\u003Econd\r\ncond(yes)-\u003Ee\r\ncond(no)-\u003Eop\r\n\u0060\u0060\u0060\r\n\r\n[========]\r\n                    \r\n### \u7ED8\u5236\u5E8F\u5217\u56FE Sequence Diagram\r\n                    \r\n\u0060\u0060\u0060seq\r\nAndrew-\u003EChina: Says Hello \r\nNote right of China: China thinks\\nabout it \r\nChina--\u003EAndrew: How are you? \r\nAndrew-\u003E\u003EChina: I am good thanks!\r\n\u0060\u0060\u0060\r\n\r\n### End",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-12-03T18:49:32Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "\u7528\u6237\u524D\u53F0",
        "createTime": "2022-04-13T01:00:47.23+08:00",
        "lastUpdateTime": "2022-04-13T01:00:47.23+08:00"
    }, {
        "id": "6255af29704efc486f68ee38",
        "blogTitle": "Cherry Editor",
        "introduction": "Cherry Markdown Editor \u662F\u4E00\u6B3E Javascript Markdown \u7F16\u8F91\u5668\uFF0C\u5177\u6709\u5F00\u7BB1\u5373\u7528\u3001\u8F7B\u91CF\u7B80\u6D01\u3001\u6613\u4E8E\u6269\u5C55\u7B49\u7279\u70B9. \u5B83\u53EF\u4EE5\u8FD0\u884C\u5728\u6D4F\u89C8\u5668\u6216\u670D\u52A1\u7AEF(NodeJs).",
        "blogContents": "\u003Ch1 id=\u0022h1-u4F8Bu5B50\u0022\u003E\u003Ca name=\u0022\u4F8B\u5B50\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u4F8B\u5B50\u003C/h1\u003E\u003Cblockquote\u003E\r\n\u003Cp\u003E\u003Ca href=\u0022https://github.com/Tencent/cherry-markdown\u0022\u003EGithub \u5730\u5740\u003C/a\u003E{target=_blank}\u003C/p\u003E\r\n\u003C/blockquote\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u003Ca href=\u0022index.html\u0022\u003Ebasic\u003C/a\u003E{target=_blank}\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022h5.html\u0022\u003EH5\u003C/a\u003E{target=_blank}\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022multiple.html\u0022\u003E\u591A\u5B9E\u4F8B\u003C/a\u003E{target=_blank}\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022notoolbar.html\u0022\u003E\u65E0 toolbar\u003C/a\u003E{target=_blank}\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022preview_only.html\u0022\u003E\u7EAF\u9884\u89C8\u6A21\u5F0F\u003C/a\u003E{target=_blank}\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022xss.html\u0022\u003E\u6CE8\u5165\u003C/a\u003E{target=_blank}\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022api.html\u0022\u003EAPI\u003C/a\u003E{target=_blank}\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022img.html\u0022\u003E\u56FE\u7247\u6240\u89C1\u5373\u6240\u5F97\u7F16\u8F91\u5C3A\u5BF8\u003C/a\u003E{target=_blank}\u003C/li\u003E\u003Cli\u003E\u003Ca href=\u0022head_num.html\u0022\u003E\u6807\u9898\u81EA\u52A8\u5E8F\u53F7\u003C/a\u003E{target=_blank}\u003C/li\u003E\u003C/ul\u003E\r\n\u003Ch1 id=\u0022h1-u5B9Eu73B0\u0022\u003E\u003Ca name=\u0022\u5B9E\u73B0\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u5B9E\u73B0\u003C/h1\u003E\u003Cpre\u003E\u003Ccode class=\u0022lang-javascript\u0022\u003E\u0026lt;script\u0026gt;\r\n  var cherry = new Cherry({\r\n    id: \u0026#39;markdown\u0026#39;,\r\n    previewer: {\r\n      // head-num \u8868\u793A\u542F\u7528\u6807\u9898\u81EA\u52A8\u5E8F\u53F7\r\n      className: \u0026#39;cherry-markdown head-num\u0026#39;\r\n    },\r\n    value: document.getElementById(\u0026quot;demo-val\u0026quot;).value,\r\n  });\r\n\u0026lt;/script\u0026gt;\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Ch1 id=\u0022h1-head1\u0022\u003E\u003Ca name=\u0022head1\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003Ehead1\u003C/h1\u003E\u003Ch2 id=\u0022h2-head2\u0022\u003E\u003Ca name=\u0022head2\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003Ehead2\u003C/h2\u003E\u003Ch2 id=\u0022h2-u5B57u4F53u6837u5F0F\u0022\u003E\u003Ca name=\u0022\u5B57\u4F53\u6837\u5F0F\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u5B57\u4F53\u6837\u5F0F\u003C/h2\u003E\u003Cp\u003E\u003Cstrong\u003E\u8BF4\u660E\u003C/strong\u003E\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u4F7F\u7528\u003Ccode\u003E*(\u6216_)\u003C/code\u003E \u548C \u003Ccode\u003E**(\u6216__)\u003C/code\u003E \u8868\u793A\u003Cem\u003E\u659C\u4F53\u003C/em\u003E\u548C \u003Cstrong\u003E\u7C97\u4F53\u003C/strong\u003E\u003C/li\u003E\u003Cli\u003E\u4F7F\u7528 \u003Ccode\u003E/\u003C/code\u003E \u8868\u793A /\u4E0B\u5212\u7EBF/ ,\u4F7F\u7528\u003Ccode\u003E~~\u003C/code\u003E \u8868\u793A\u003Cdel\u003E\u5220\u9664\u7EBF\u003C/del\u003E\u003C/li\u003E\u003Cli\u003E\u4F7F\u7528\u003Ccode\u003E^(\u6216^^)\u003C/code\u003E\u8868\u793A^\u4E0A\u6807^\u6216^^\u4E0B\u6807^^\u003C/li\u003E\u003Cli\u003E\u4F7F\u7528 ! \u53F7\u002B\u6570\u5B57 \u8868\u793A\u5B57\u4F53 !24 \u5927!  !12 \u5C0F! [^\u4E13\u6709\u8BED\u6CD5\u63D0\u9192]\u003C/li\u003E\u003Cli\u003E\u4F7F\u7528\u4E24\u4E2A(\u4E09\u4E2A)!\u53F7\u002BRGB\u989C\u8272 \u8868\u793A!!#ff0000 \u5B57\u4F53\u989C\u8272!!(!!!#f9cb9c \u80CC\u666F\u989C\u8272!!!)[^\u4E13\u6709\u8BED\u6CD5\u63D0\u9192]\u003C/li\u003E\u003C/ul\u003E\r\n\u003Ch2 id=\u0022h2-u8D85u94FEu63A5\u0022\u003E\u003Ca name=\u0022\u8D85\u94FE\u63A5\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u8D85\u94FE\u63A5\u003C/h2\u003E\u003Cp\u003E\u003Cstrong\u003E\u8BF4\u660E\u003C/strong\u003E\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u4F7F\u7528 \u003Ccode\u003E[\u63CF\u8FF0](URL)\u003C/code\u003E \u4E3A\u6587\u5B57\u589E\u52A0\u5916\u94FE\u63A5\u003C/li\u003E\u003Cli\u003E\u4F7F\u7528\u003Ccode\u003E\u0026lt;URL\u0026gt;\u003C/code\u003E\u63D2\u5165\u4E00\u4E2A\u94FE\u63A5\u003C/li\u003E\u003Cli\u003EURL\u4F1A\u81EA\u52A8\u8F6C\u6210\u94FE\u63A5\u003C/li\u003E\u003C/ul\u003E\r\n\u003Ch2 id=\u0022h2-u5217u8868\u0022\u003E\u003Ca name=\u0022\u5217\u8868\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u5217\u8868\u003C/h2\u003E\u003Ch3 id=\u0022h3-u65E0u5E8Fu5217u8868\u0022\u003E\u003Ca name=\u0022\u65E0\u5E8F\u5217\u8868\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u65E0\u5E8F\u5217\u8868\u003C/h3\u003E\u003Cp\u003E\u003Cstrong\u003E\u8BF4\u660E\u003C/strong\u003E\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u5728\u884C\u9996\u4F7F\u7528 *\uFF0C\u002B\uFF0C- \u8868\u793A\u65E0\u5E8F\u5217\u8868\u003C/li\u003E\u003C/ul\u003E\r\n\u003Ch3 id=\u0022h3-u6709u5E8Fu5217u8868\u0022\u003E\u003Ca name=\u0022\u6709\u5E8F\u5217\u8868\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u6709\u5E8F\u5217\u8868\u003C/h3\u003E\u003Cp\u003E\u003Cstrong\u003E\u8BF4\u660E\u003C/strong\u003E\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u5728\u884C\u9996\u4F7F\u7528\u6570\u5B57\u3001\u5B57\u6BCD\u3001\u6C49\u5B57\u548C\u70B9\u8868\u793A\u6709\u5E8F\u5217\u8868\u003C/li\u003E\u003C/ul\u003E\r\n\u003Ch3 id=\u0022h3-head3\u0022\u003E\u003Ca name=\u0022head3\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003Ehead3\u003C/h3\u003E\u003Ch3 id=\u0022h3-head3\u0022\u003E\u003Ca name=\u0022head3\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003Ehead3\u003C/h3\u003E\u003Ch1 id=\u0022h1-head1\u0022\u003E\u003Ca name=\u0022head1\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003Ehead1\u003C/h1\u003E\u003Ch2 id=\u0022h2-head2\u0022\u003E\u003Ca name=\u0022head2\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003Ehead2\u003C/h2\u003E\u003Ch3 id=\u0022h3-head3\u0022\u003E\u003Ca name=\u0022head3\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003Ehead3\u003C/h3\u003E\u003Ch4 id=\u0022h4-head4\u0022\u003E\u003Ca name=\u0022head4\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003Ehead4\u003C/h4\u003E\u003Ch5 id=\u0022h5-head5\u0022\u003E\u003Ca name=\u0022head5\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003Ehead5\u003C/h5\u003E",
        "mainImage": null,
        "commentCount": 0,
        "viewCount": 4,
        "tag": "123",
        "images": [],
        "markdown": "# \u4F8B\u5B50\r\n\u003E [Github \u5730\u5740](https://github.com/Tencent/cherry-markdown){target=_blank}\r\n\r\n- [basic](index.html){target=_blank}\r\n- [H5](h5.html){target=_blank}\r\n- [\u591A\u5B9E\u4F8B](multiple.html){target=_blank}\r\n- [\u65E0 toolbar](notoolbar.html){target=_blank}\r\n- [\u7EAF\u9884\u89C8\u6A21\u5F0F](preview_only.html){target=_blank}\r\n- [\u6CE8\u5165](xss.html){target=_blank}\r\n- [API](api.html){target=_blank}\r\n- [\u56FE\u7247\u6240\u89C1\u5373\u6240\u5F97\u7F16\u8F91\u5C3A\u5BF8](img.html){target=_blank}\r\n- [\u6807\u9898\u81EA\u52A8\u5E8F\u53F7](head_num.html){target=_blank}\r\n\r\n\r\n# \u5B9E\u73B0\r\n\u0060\u0060\u0060 javascript\r\n\u003Cscript\u003E\r\n  var cherry = new Cherry({\r\n    id: \u0027markdown\u0027,\r\n    previewer: {\r\n      // head-num \u8868\u793A\u542F\u7528\u6807\u9898\u81EA\u52A8\u5E8F\u53F7\r\n      className: \u0027cherry-markdown head-num\u0027\r\n    },\r\n    value: document.getElementById(\u0022demo-val\u0022).value,\r\n  });\r\n\u003C/script\u003E\r\n\u0060\u0060\u0060\r\n\r\n# head1\r\n## head2\r\n## \u5B57\u4F53\u6837\u5F0F\r\n**\u8BF4\u660E**\r\n- \u4F7F\u7528\u0060*(\u6216_)\u0060 \u548C \u0060**(\u6216__)\u0060 \u8868\u793A*\u659C\u4F53*\u548C __\u7C97\u4F53__\r\n- \u4F7F\u7528 \u0060/\u0060 \u8868\u793A /\u4E0B\u5212\u7EBF/ ,\u4F7F\u7528\u0060~~\u0060 \u8868\u793A~~\u5220\u9664\u7EBF~~\r\n- \u4F7F\u7528\u0060^(\u6216^^)\u0060\u8868\u793A^\u4E0A\u6807^\u6216^^\u4E0B\u6807^^\r\n- \u4F7F\u7528 ! \u53F7\u002B\u6570\u5B57 \u8868\u793A\u5B57\u4F53 !24 \u5927!  !12 \u5C0F! [^\u4E13\u6709\u8BED\u6CD5\u63D0\u9192]\r\n- \u4F7F\u7528\u4E24\u4E2A(\u4E09\u4E2A)!\u53F7\u002BRGB\u989C\u8272 \u8868\u793A!!#ff0000 \u5B57\u4F53\u989C\u8272!!(!!!#f9cb9c \u80CC\u666F\u989C\u8272!!!)[^\u4E13\u6709\u8BED\u6CD5\u63D0\u9192]\r\n\r\n## \u8D85\u94FE\u63A5\r\n**\u8BF4\u660E**\r\n- \u4F7F\u7528 \u0060[\u63CF\u8FF0](URL)\u0060 \u4E3A\u6587\u5B57\u589E\u52A0\u5916\u94FE\u63A5\r\n- \u4F7F\u7528\u0060\u003CURL\u003E\u0060\u63D2\u5165\u4E00\u4E2A\u94FE\u63A5\r\n- URL\u4F1A\u81EA\u52A8\u8F6C\u6210\u94FE\u63A5\r\n\r\n## \u5217\u8868\r\n### \u65E0\u5E8F\u5217\u8868\r\n**\u8BF4\u660E**\r\n- \u5728\u884C\u9996\u4F7F\u7528 *\uFF0C\u002B\uFF0C- \u8868\u793A\u65E0\u5E8F\u5217\u8868\r\n\r\n### \u6709\u5E8F\u5217\u8868\r\n**\u8BF4\u660E**\r\n- \u5728\u884C\u9996\u4F7F\u7528\u6570\u5B57\u3001\u5B57\u6BCD\u3001\u6C49\u5B57\u548C\u70B9\u8868\u793A\u6709\u5E8F\u5217\u8868\r\n\r\n### head3\r\n### head3\r\n# head1\r\n## head2\r\n### head3\r\n#### head4\r\n##### head5\r\n\r\n\r\n",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-12-03T18:49:32Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "\u7528\u6237\u524D\u53F0",
        "createTime": "2022-04-13T00:56:09.715+08:00",
        "lastUpdateTime": "2022-04-13T00:56:09.715+08:00"
    }, {
        "id": "62479c2f406e948105ff16c7",
        "blogTitle": "\u4FC4\u516C\u5E03\u53C2\u4E0E\u7F8E\u5728\u4E4C\u519B\u4E8B\u751F\u7269\u8BA1\u5212\u4EBA\u5458\u540D\u5355",
        "introduction": "0.0",
        "blogContents": "\u003Cp\u003E\u3000\u3000\u65B0\u534E\u793E\u83AB\u65AF\u79D14\u67081\u65E5\u7535\uFF08\u8BB0\u8005\u803F\u9E4F\u5B87\uFF09\u4FC4\u519B\u8F90\u5C04\u3001\u5316\u5B66\u548C\u751F\u7269\u9632\u62A4\u90E8\u961F\u53F8\u4EE4\u57FA\u91CC\u6D1B\u592B3\u670831\u65E5\u516C\u5E03\u4E86\u53C2\u4E0E\u7F8E\u56FD\u5728\u4E4C\u514B\u5170\u5883\u5185\u519B\u4E8B\u751F\u7269\u8BA1\u5212\u7684\u4EBA\u5458\u540D\u5355\u3002\u4FC4\u65B9\u8BA4\u4E3A\uFF0C\u8FD9\u4E9B\u4EBA\u5458\u53CA\u5176\u6D3B\u52A8\u4FE1\u606F\u8868\u660E\u7F8E\u519B\u4E8B\u90E8\u95E8\u53CA\u5176\u627F\u5305\u5546\u53C2\u4E0E\u4E86\u7F8E\u56FD\u9632\u90E8\u5728\u4E4C\u5883\u5185\u7684\u519B\u4E8B\u751F\u7269\u8BA1\u5212\u3002\u003C/p\u003E\r\n\u003Cp\u003E\u3000\u3000\u57FA\u91CC\u6D1B\u592B\u5F53\u5929\u5728\u4FC4\u56FD\u9632\u90E8\u7F51\u7AD9\u53D1\u5E03\u7684\u89C6\u9891\u4E0A\u8BF4\uFF0C\u8FD9\u4EFD\u540D\u5355\u4E0A\u7684\u5173\u952E\u4EBA\u7269\u4E4B\u4E00\u2014\u2014\u7F57\u4F2F\u7279\u00B7\u6CE2\u666E\u662F\u7F8E\u56FD\u56FD\u9632\u90E8\u51CF\u5C11\u5A01\u80C1\u5C40\u5DE5\u4F5C\u4EBA\u5458\u53CA\u7F8E\u56FD\u201C\u51CF\u5C11\u5A01\u80C1\u5408\u4F5C\u8BA1\u5212\u201D\u8D1F\u8D23\u4EBA\u3002\u6B63\u662F\u4ED6\u63D0\u51FA\u5728\u4E4C\u514B\u5170\u5EFA\u7ACB\u201C\u7279\u522B\u5371\u9669\u5FAE\u751F\u7269\u4E2D\u592E\u50A8\u85CF\u5E93\u201D\u3002\u5728\u53D1\u7ED9\u4E4C\u514B\u5170\u536B\u751F\u90E8\u8D1F\u8D23\u4EBA\u7684\u4E00\u5C01\u4FE1\u4E2D\uFF0C\u6CE2\u666E\u5F3A\u8C03\u8981\u4FDD\u8BC1\u7F8E\u56FD\u4E13\u5BB6\u8FDB\u5165\u4E4C\u514B\u5170\u7684\u751F\u7269\u5B9E\u9A8C\u5BA4\uFF0C\u5E76\u63D0\u51FA\u7EC4\u5EFA\u5FAE\u751F\u7269\u50A8\u85CF\u5E93\u3002\u003C/p\u003E\r\n\u003Cp\u003E\u3000\u3000\u636E\u57FA\u91CC\u6D1B\u592B\u4ECB\u7ECD\uFF0C\u5728\u7F8E\u56FD\u56FD\u9632\u90E8\u51CF\u5C11\u5A01\u80C1\u5C40\u9A7B\u4E4C\u514B\u5170\u529E\u516C\u5BA4\u8D1F\u8D23\u4EBA\u4E54\u5B89\u5A1C\u00B7\u6E29\u7279\u62C9\u5C14\u7684\u76F4\u63A5\u76D1\u7763\u4E0B\uFF0C\u7F8E\u56FD\u7684\u201CUP-4\u201D\u201CUP-6\u201D\u201CUP-8\u201D\u8BA1\u5212\u7814\u7A76\u81F4\u547D\u75C5\u539F\u4F53\uFF0C\u5305\u62EC\u70AD\u75BD\u6746\u83CC\u3001\u514B\u91CC\u7C73\u4E9A-\u521A\u679C\u51FA\u8840\u70ED\u75C5\u6BD2\u3001\u94A9\u7AEF\u87BA\u65CB\u4F53\u3002\u003C/p\u003E\r\n\u003Cp\u003E\u3000\u3000\u57FA\u91CC\u6D1B\u592B\u8FD8\u63D0\u5230\u7531\u5170\u65AF\u00B7\u5229\u5F6D\u79D1\u7279\u9886\u5BFC\u7684\u7F8E\u56FD\u535A\u83B1\u514B\u00B7\u5A01\u5947\u516C\u53F8\u4E4C\u514B\u5170\u5206\u90E8\uFF0C\u6307\u51FA\u8BE5\u516C\u53F8\u81EA2008\u5E74\u4EE5\u6765\u4E00\u76F4\u4E3A\u7F8E\u56FD\u56FD\u9632\u90E8\u5728\u201C\u7814\u7A76\u6F5C\u5728\u5371\u9669\u751F\u7269\u5236\u5242\u201D\u8BA1\u5212\u6846\u67B6\u4E0B\u5DE5\u4F5C\uFF0C\u8FD9\u4E2A\u6846\u67B6\u4E0B\u7684\u6570\u4E2A\u8BA1\u5212\u4E2D\u5305\u62EC\u7814\u7A76\u4E4C\u897F\u5317\u90E8\u8282\u80A2\u52A8\u7269\u7684\u7ACB\u514B\u6B21\u6C0F\u4F53\u548C\u8731\u4F20\u8111\u708E\u75C5\u6BD2\u7684\u201CUP-1\u201D\u8BA1\u5212\u3002\u4E3A\u5728\u5168\u7403\u76D1\u63A7\u751F\u7269\u73AF\u5883\uFF0C\u5728\u5B9E\u65BD\u201CUP-2\u201D\u8BA1\u5212\u671F\u95F4\uFF0C\u8BE5\u516C\u53F8\u5728\u4E4C\u514B\u5170\u7684\u751F\u7269\u8BBE\u65BD\u5185\u8BBE\u7ACB\u4E86\u8FDC\u7A0B\u76D1\u6D4B\u571F\u62C9\u6746\u83CC\u75C5\u548C\u70AD\u75BD\u75C5\u53D1\u75C5\u7387\u7684\u7CFB\u7EDF\u3002\u003C/p\u003E\r\n\u003Cp\u003E\u3000\u3000\u57FA\u91CC\u6D1B\u592B\u8868\u793A\uFF0C\u751F\u7269\u76D1\u6D4B\u548C\u4FE1\u606F\u4F20\u8F93\u95EE\u9898\u7531\u6234\u7EF4\u00B7\u7A46\u4EC0\u7279\u62C9\u76D1\u7763\u7BA1\u7406\uFF0C\u4ED6\u4E0E\u7F8E\u56FD\u56FD\u9632\u90E8\u627F\u5305\u5546\u6885\u5854\u6BD4\u5965\u5854\u516C\u53F8\u8054\u7CFB\u5BC6\u5207\u3002\u7A46\u4EC0\u7279\u62C9\u66FE\u5728\u7F8E\u56FD\u201C\u51CF\u5C11\u5A01\u80C1\u5408\u4F5C\u8BA1\u5212\u201D\u6846\u67B6\u4E0B\uFF0C\u9886\u5BFC\u5728\u4E4C\u514B\u5170\u548C\u4E1C\u6B27\u5730\u533A\u5F00\u5C55\u7684\u519B\u4E8B\u751F\u7269\u8BA1\u5212\u3002\u003C/p\u003E\r\n\u003Cp\u003E\u3000\u3000\u57FA\u91CC\u6D1B\u592B\u8BF4\uFF0C\u65AF\u79D1\u7279\u00B7\u6851\u987F\u8D1F\u8D23\u5B9E\u9A8C\u5BA4\u6539\u9020\u4E8B\u52A1\u3002\u5728\u7F8E\u56FD\u56FD\u9632\u90E8\u51CF\u5C11\u5A01\u80C1\u5C40\u7684\u4E4C\u514B\u5170\u8BA1\u5212\u6846\u67B6\u4E0B\uFF0C\u6851\u987F\u5C31\u5904\u7406\u7279\u522B\u5371\u9669\u7684\u75C5\u539F\u4F53\u5411\u4E4C\u65B9\u4EBA\u5458\u63D0\u4F9B\u54A8\u8BE2\u610F\u89C1\u3002\u003C/p\u003E\r\n\u003Cp\u003E\u3000\u3000\u57FA\u91CC\u6D1B\u592B\u5F3A\u8C03\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u8868\u660E\uFF0C\u7F8E\u56FD\u519B\u4E8B\u90E8\u95E8\u53CA\u5176\u627F\u5305\u5546\u76F4\u63A5\u53C2\u4E0E\u4E86\u7F8E\u56FD\u56FD\u9632\u90E8\u5728\u4E4C\u5883\u5185\u8BA1\u5212\u7684\u8BBE\u8BA1\u548C\u5B9E\u65BD\u3002\u4FC4\u65B9\u8BA4\u4E3A\uFF0C\u540D\u5355\u91CC\u7684\u4EBA\u5458\u5FC5\u987B\u56DE\u7B54\u4E0E\u8FD9\u4E9B\u5DE5\u4F5C\u771F\u5B9E\u76EE\u7684\u76F8\u5173\u7684\u95EE\u9898\u3002\u003C/p\u003E\r\n",
        "mainImage": null,
        "commentCount": 0,
        "viewCount": 4,
        "tag": "123",
        "images": [],
        "markdown": "\u3000\u3000\u65B0\u534E\u793E\u83AB\u65AF\u79D14\u67081\u65E5\u7535\uFF08\u8BB0\u8005\u803F\u9E4F\u5B87\uFF09\u4FC4\u519B\u8F90\u5C04\u3001\u5316\u5B66\u548C\u751F\u7269\u9632\u62A4\u90E8\u961F\u53F8\u4EE4\u57FA\u91CC\u6D1B\u592B3\u670831\u65E5\u516C\u5E03\u4E86\u53C2\u4E0E\u7F8E\u56FD\u5728\u4E4C\u514B\u5170\u5883\u5185\u519B\u4E8B\u751F\u7269\u8BA1\u5212\u7684\u4EBA\u5458\u540D\u5355\u3002\u4FC4\u65B9\u8BA4\u4E3A\uFF0C\u8FD9\u4E9B\u4EBA\u5458\u53CA\u5176\u6D3B\u52A8\u4FE1\u606F\u8868\u660E\u7F8E\u519B\u4E8B\u90E8\u95E8\u53CA\u5176\u627F\u5305\u5546\u53C2\u4E0E\u4E86\u7F8E\u56FD\u9632\u90E8\u5728\u4E4C\u5883\u5185\u7684\u519B\u4E8B\u751F\u7269\u8BA1\u5212\u3002\r\n\r\n\u3000\u3000\u57FA\u91CC\u6D1B\u592B\u5F53\u5929\u5728\u4FC4\u56FD\u9632\u90E8\u7F51\u7AD9\u53D1\u5E03\u7684\u89C6\u9891\u4E0A\u8BF4\uFF0C\u8FD9\u4EFD\u540D\u5355\u4E0A\u7684\u5173\u952E\u4EBA\u7269\u4E4B\u4E00\u2014\u2014\u7F57\u4F2F\u7279\u00B7\u6CE2\u666E\u662F\u7F8E\u56FD\u56FD\u9632\u90E8\u51CF\u5C11\u5A01\u80C1\u5C40\u5DE5\u4F5C\u4EBA\u5458\u53CA\u7F8E\u56FD\u201C\u51CF\u5C11\u5A01\u80C1\u5408\u4F5C\u8BA1\u5212\u201D\u8D1F\u8D23\u4EBA\u3002\u6B63\u662F\u4ED6\u63D0\u51FA\u5728\u4E4C\u514B\u5170\u5EFA\u7ACB\u201C\u7279\u522B\u5371\u9669\u5FAE\u751F\u7269\u4E2D\u592E\u50A8\u85CF\u5E93\u201D\u3002\u5728\u53D1\u7ED9\u4E4C\u514B\u5170\u536B\u751F\u90E8\u8D1F\u8D23\u4EBA\u7684\u4E00\u5C01\u4FE1\u4E2D\uFF0C\u6CE2\u666E\u5F3A\u8C03\u8981\u4FDD\u8BC1\u7F8E\u56FD\u4E13\u5BB6\u8FDB\u5165\u4E4C\u514B\u5170\u7684\u751F\u7269\u5B9E\u9A8C\u5BA4\uFF0C\u5E76\u63D0\u51FA\u7EC4\u5EFA\u5FAE\u751F\u7269\u50A8\u85CF\u5E93\u3002\r\n\r\n\u3000\u3000\u636E\u57FA\u91CC\u6D1B\u592B\u4ECB\u7ECD\uFF0C\u5728\u7F8E\u56FD\u56FD\u9632\u90E8\u51CF\u5C11\u5A01\u80C1\u5C40\u9A7B\u4E4C\u514B\u5170\u529E\u516C\u5BA4\u8D1F\u8D23\u4EBA\u4E54\u5B89\u5A1C\u00B7\u6E29\u7279\u62C9\u5C14\u7684\u76F4\u63A5\u76D1\u7763\u4E0B\uFF0C\u7F8E\u56FD\u7684\u201CUP-4\u201D\u201CUP-6\u201D\u201CUP-8\u201D\u8BA1\u5212\u7814\u7A76\u81F4\u547D\u75C5\u539F\u4F53\uFF0C\u5305\u62EC\u70AD\u75BD\u6746\u83CC\u3001\u514B\u91CC\u7C73\u4E9A-\u521A\u679C\u51FA\u8840\u70ED\u75C5\u6BD2\u3001\u94A9\u7AEF\u87BA\u65CB\u4F53\u3002\r\n\r\n\u3000\u3000\u57FA\u91CC\u6D1B\u592B\u8FD8\u63D0\u5230\u7531\u5170\u65AF\u00B7\u5229\u5F6D\u79D1\u7279\u9886\u5BFC\u7684\u7F8E\u56FD\u535A\u83B1\u514B\u00B7\u5A01\u5947\u516C\u53F8\u4E4C\u514B\u5170\u5206\u90E8\uFF0C\u6307\u51FA\u8BE5\u516C\u53F8\u81EA2008\u5E74\u4EE5\u6765\u4E00\u76F4\u4E3A\u7F8E\u56FD\u56FD\u9632\u90E8\u5728\u201C\u7814\u7A76\u6F5C\u5728\u5371\u9669\u751F\u7269\u5236\u5242\u201D\u8BA1\u5212\u6846\u67B6\u4E0B\u5DE5\u4F5C\uFF0C\u8FD9\u4E2A\u6846\u67B6\u4E0B\u7684\u6570\u4E2A\u8BA1\u5212\u4E2D\u5305\u62EC\u7814\u7A76\u4E4C\u897F\u5317\u90E8\u8282\u80A2\u52A8\u7269\u7684\u7ACB\u514B\u6B21\u6C0F\u4F53\u548C\u8731\u4F20\u8111\u708E\u75C5\u6BD2\u7684\u201CUP-1\u201D\u8BA1\u5212\u3002\u4E3A\u5728\u5168\u7403\u76D1\u63A7\u751F\u7269\u73AF\u5883\uFF0C\u5728\u5B9E\u65BD\u201CUP-2\u201D\u8BA1\u5212\u671F\u95F4\uFF0C\u8BE5\u516C\u53F8\u5728\u4E4C\u514B\u5170\u7684\u751F\u7269\u8BBE\u65BD\u5185\u8BBE\u7ACB\u4E86\u8FDC\u7A0B\u76D1\u6D4B\u571F\u62C9\u6746\u83CC\u75C5\u548C\u70AD\u75BD\u75C5\u53D1\u75C5\u7387\u7684\u7CFB\u7EDF\u3002\r\n\r\n\u3000\u3000\u57FA\u91CC\u6D1B\u592B\u8868\u793A\uFF0C\u751F\u7269\u76D1\u6D4B\u548C\u4FE1\u606F\u4F20\u8F93\u95EE\u9898\u7531\u6234\u7EF4\u00B7\u7A46\u4EC0\u7279\u62C9\u76D1\u7763\u7BA1\u7406\uFF0C\u4ED6\u4E0E\u7F8E\u56FD\u56FD\u9632\u90E8\u627F\u5305\u5546\u6885\u5854\u6BD4\u5965\u5854\u516C\u53F8\u8054\u7CFB\u5BC6\u5207\u3002\u7A46\u4EC0\u7279\u62C9\u66FE\u5728\u7F8E\u56FD\u201C\u51CF\u5C11\u5A01\u80C1\u5408\u4F5C\u8BA1\u5212\u201D\u6846\u67B6\u4E0B\uFF0C\u9886\u5BFC\u5728\u4E4C\u514B\u5170\u548C\u4E1C\u6B27\u5730\u533A\u5F00\u5C55\u7684\u519B\u4E8B\u751F\u7269\u8BA1\u5212\u3002\r\n\r\n\u3000\u3000\u57FA\u91CC\u6D1B\u592B\u8BF4\uFF0C\u65AF\u79D1\u7279\u00B7\u6851\u987F\u8D1F\u8D23\u5B9E\u9A8C\u5BA4\u6539\u9020\u4E8B\u52A1\u3002\u5728\u7F8E\u56FD\u56FD\u9632\u90E8\u51CF\u5C11\u5A01\u80C1\u5C40\u7684\u4E4C\u514B\u5170\u8BA1\u5212\u6846\u67B6\u4E0B\uFF0C\u6851\u987F\u5C31\u5904\u7406\u7279\u522B\u5371\u9669\u7684\u75C5\u539F\u4F53\u5411\u4E4C\u65B9\u4EBA\u5458\u63D0\u4F9B\u54A8\u8BE2\u610F\u89C1\u3002\r\n\r\n\u3000\u3000\u57FA\u91CC\u6D1B\u592B\u5F3A\u8C03\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u8868\u660E\uFF0C\u7F8E\u56FD\u519B\u4E8B\u90E8\u95E8\u53CA\u5176\u627F\u5305\u5546\u76F4\u63A5\u53C2\u4E0E\u4E86\u7F8E\u56FD\u56FD\u9632\u90E8\u5728\u4E4C\u5883\u5185\u8BA1\u5212\u7684\u8BBE\u8BA1\u548C\u5B9E\u65BD\u3002\u4FC4\u65B9\u8BA4\u4E3A\uFF0C\u540D\u5355\u91CC\u7684\u4EBA\u5458\u5FC5\u987B\u56DE\u7B54\u4E0E\u8FD9\u4E9B\u5DE5\u4F5C\u771F\u5B9E\u76EE\u7684\u76F8\u5173\u7684\u95EE\u9898\u3002",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-12-03T18:49:32Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "\u7528\u6237\u524D\u53F0",
        "createTime": "2022-04-02T08:43:27.378+08:00",
        "lastUpdateTime": "2022-04-02T08:43:27.378+08:00"
    }, {
        "id": "620f1e3c7e4ac033ae6c2e93",
        "blogTitle": "\u9B54\u9053\u62A4\u77F3CP2.0\u8BC4\u6D4B",
        "introduction": "\u8F6C\u81EA https://bbs.colg.cn/thread-8068978-1-1.html\uFF0C\u9B54\u9053CP2.0",
        "blogContents": "\u003Cp\u003E\u003Cimg src=\u0022https://core.dpangzi.com/Home/Image/6107d971273e7959cff6afc1\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\u77E5\u6E90\u00B7\u9B54\u9053\u5B66\u8005\u003C/p\u003E\r\n\u003Ch3 id=\u0022h3-u96EAu4EBAu5228u51B0\u0022\u003E\u003Ca name=\u0022\u96EA\u4EBA\u5228\u51B0\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u96EA\u4EBA\u5228\u51B0\u003C/h3\u003E\u003Cp\u003E[\u6280\u80FD\u6F14\u793A]\u003Cbr\u003E\u003Cimg src=\u0022https://core.dpangzi.com/Home/Image/6107d987273e7959cff6afc7\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cp\u003E[\u63D0\u5347\u603B\u7ED3]\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u4F24\u5BB3\u63D0\u5347\u738730%\u003C/li\u003E\u003Cli\u003E\u6F14\u51FA\u65F6\u95F4\u5927\u5E45\u7F29\u77ED\u003C/li\u003E\u003Cli\u003E\u805A\u602A\u8303\u56F4\u589E\u5927\u003C/li\u003E\u003C/ul\u003E\r\n\u003Cp\u003E[\u70B9\u8BC4]\u003Cbr\u003ECP\u5228\u51B0\u673A\u6781\u5927\u7684\u7F29\u51CF\u4E86\u6F14\u51FA\u65F6\u95F4\uFF0C\u4F46\u662F\u4ECD\u9700\u89D2\u8272\u6500\u4E0A\u5228\u51B0\u673A\u518D\u843D\u5730\uFF0C\u5927\u6982\u6574\u4F53\u6F14\u51FA\u65F6\u95F4\u4E3A2\u79D2\uFF0C\u4E14\u5228\u51B0\u673A\u805A\u602A\u8303\u56F4\u589E\u5927\uFF0C\u53EF\u4EE5\u4E3A\u961F\u53CB\u4EE5\u53CA\u81EA\u8EAB\u7684\u6280\u80FD\u521B\u9020\u66F4\u591A\u7684\u8F93\u51FA\u73AF\u5883\u3002\u5228\u51B0\u672C\u8EAB\u4F24\u5BB3\u53EF\u89C2\uFF0C\u52A0\u4E0A\u79C0\u52A0\u6301\uFF0C\u79D2\u4F24\u8F83\u4E3A\u51FA\u4F17\u3002\u003C/p\u003E\r\n\u003Ch3 id=\u0022h3-u8D85u7EA7u68D2u68D2u7CD6\u0022\u003E\u003Ca name=\u0022\u8D85\u7EA7\u68D2\u68D2\u7CD6\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u8D85\u7EA7\u68D2\u68D2\u7CD6\u003C/h3\u003E\u003Cp\u003E[\u6280\u80FD\u6F14\u793A]\u003Cbr\u003E\u003Cimg src=\u0022https://core.dpangzi.com/Home/Image/6107d9d0273e7959cff6afdd\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cp\u003E[\u63D0\u5347\u603B\u7ED3]\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u4F24\u5BB3\u63D0\u5347\u738732%\u003C/li\u003E\u003Cli\u003E\u51B7\u5374\u65F6\u95F4\u7F29\u51CF10%\u003C/li\u003E\u003Cli\u003E\u5730\u9762\u65BD\u653E\u53D6\u6D88\u6D6E\u7A7A\u4E14\u53EF\u4EE5\u67D4\u5316\u6280\u80FD\u003C/li\u003E\u003C/ul\u003E\r\n\u003Cp\u003E[\u70B9\u8BC4]\u003Cbr\u003E\u5730\u9762\u91CA\u653E\u65F6\u53D6\u6D88\u4E86\u6D6E\u7A7A\u52A8\u4F5C\uFF0C\u4E14\u51FB\u4E2D\u76EE\u6807\u65F6\u53EF\u4EE5\u67D4\u5316\u4F7F\u7528\u5176\u4ED6\u7684\u6280\u80FD\u3002\u9664\u6B64\u4E4B\u5916\u83B7\u5F97\u4E86\u4E00\u5B9A\u7684CD\u4F18\u5316\u4E0E\u4F24\u5BB3\u52A0\u6210\u3002\u4F46\u662F\u7531\u4E8E\u67D4\u5316\u7684\u529F\u80FD\u4E0E\u65CB\u8F6C\u626B\u628A\u91CD\u590D\uFF08\u65CB\u8F6C\u626B\u628A\u9700\u8981\u4E00\u5B9A\u7684\u6F14\u51FA\uFF09\uFF0C\u4E14\u7CD6\u62CD\u672C\u8EAB\u4E0D\u5403\u79C0\uFF0C\u5B9E\u9645\u79D2\u4F24\u8F83\u4F4E\u3002\u003C/p\u003E\r\n\u003Ch3 id=\u0022h3-u7206u708Eu52A0u70EDu7089\u0022\u003E\u003Ca name=\u0022\u7206\u708E\u52A0\u70ED\u7089\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u7206\u708E\u52A0\u70ED\u7089\u003C/h3\u003E\u003Cp\u003E[\u6280\u80FD\u6F14\u793A]\u003Cbr\u003E\u003Cimg src=\u0022https://core.dpangzi.com/Home/Image/6107d9f7273e7959cff6afee\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\u003Cimg src=\u0022https://core.dpangzi.com/Home/Image/6107da1c273e7959cff6b011\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cp\u003E[\u63D0\u5347\u603B\u7ED3]\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u5931\u8D25\u9505\u7089\u4F24\u5BB3\u63D0\u5347\u738736%\uFF08\u65E7\u724827%\uFF09\u003C/li\u003E\u003Cli\u003E\u7EC8\u7ED3\u9644\u52A0\u70ED\u6C14\u98CE\u66B4\uFF0C\u653B\u51FB\u8303\u56F4\u6269\u5F20\u003C/li\u003E\u003C/ul\u003E\r\n\u003Cp\u003E[\u70B9\u8BC4]\u003Cbr\u003E\u8FDB\u4E00\u6B65\u6539\u5584\u4E86\u9505\u7089\u5F62\u6001\u7684\u62A4\u77F3\uFF0C\u5BF9\u70B9\u7206\u53D1\u6216\u8005\u662F\u6E05\u602A\u90FD\u5F88\u7F8E\uFF0C\u7206\u53D1\u8303\u56F4\u975E\u5E38\u5927\u4E14\u5177\u6709\u5EF6\u8FDF\u4F24\u5BB3\uFF0C\u6570\u636E\u4F18\u79C0\uFF0C\u79D2\u4F24\u53EF\u89C2\uFF0C\u5B9E\u6218\u8868\u73B0\u826F\u597D\uFF0C\u5347\u7EA7\u524D\u540E\u5C5E\u4E8E\u5FC5\u9009\u6280\u80FD\u3002\u003C/p\u003E\r\n\u003Ch3 id=\u0022h3-u8D85u7EA7u82CDu8747u62CD\u0022\u003E\u003Ca name=\u0022\u8D85\u7EA7\u82CD\u8747\u62CD\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u8D85\u7EA7\u82CD\u8747\u62CD\u003C/h3\u003E\u003Cp\u003E[\u6280\u80FD\u6F14\u793A]\u003Cbr\u003E\u003Cimg src=\u0022https://core.dpangzi.com/Home/Image/6107da63273e7959cff6b029\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cp\u003E[\u63D0\u5347\u603B\u7ED3]\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u4F24\u5BB3\u63D0\u5347\u738724%\uFF08\u65E7\u724815%\uFF09\u003C/li\u003E\u003Cli\u003E\u51B7\u5374\u65F6\u95F4\u7387-10%\u003C/li\u003E\u003Cli\u003E\u4EA7\u751F\u7B49\u6548\u4F24\u5BB3\u7684\u51B2\u51FB\u6CE2\u003C/li\u003E\u003C/ul\u003E\r\n\u003Cp\u003E[\u70B9\u8BC4]\u003Cbr\u003E\u5927\u62CD\u672C\u8EAB\u6570\u636E\u786C\u4F24\uFF0CCD\u8F83\u957F\uFF0C\u62A4\u77F3\u63D0\u5347\u7387\u4E5F\u975E\u5E38\u611F\u4EBA\uFF0C\u5347\u7EA7\u524D\u540E\u90FD\u662F\u672B\u987A\u4F4D\u3002\u003C/p\u003E\r\n\u003Ch3 id=\u0022h3-u5149u7535u5154\u0022\u003E\u003Ca name=\u0022\u5149\u7535\u5154\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u5149\u7535\u5154\u003C/h3\u003E\u003Cp\u003E[\u6280\u80FD\u6F14\u793A]\u003Cbr\u003E\u003Cimg src=\u0022https://core.dpangzi.com/Home/Image/6107dab8273e7959cff6b03d\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cp\u003E[\u63D0\u5347\u603B\u7ED3]\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u4F24\u5BB3\u63D0\u5347\u738723%\uFF08\u65E7\u724815%\uFF09\u003C/li\u003E\u003Cli\u003E\u5149\u7535\u5154\u53D8\u4E3A\u8131\u624B\u6280\u80FD\u003C/li\u003E\u003C/ul\u003E\r\n\u003Cp\u003E[\u70B9\u8BC4]\u003Cbr\u003E\u4E89\u8BAE\u6280\u80FD\uFF0C\u62A4\u77F3\u52A0\u6301\u4E0B\u89E3\u653E\u4E3A\u8131\u624B\u6280\u80FD\uFF0C\u8003\u8651\u5230\u5B9E\u6218\u7834\u62DB\u4E0E\u7206\u53D1\u6253\u6CD5\u5149\u7535\u5154\u8F83\u597D\uFF0C\u4F46\u662F\u8003\u8651\u5230\u4F24\u5BB3\u4E0ECD\u5149\u7535\u5154\u8F83\u6B21\uFF0C\u5C5E\u4E8E\u53EF\u9009CP\u6280\u80FD\u3002\u003C/p\u003E\r\n\u003Ch3 id=\u0022h3-u51B0u971Cu94BBu5B54u8F66\u0022\u003E\u003Ca name=\u0022\u51B0\u971C\u94BB\u5B54\u8F66\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u51B0\u971C\u94BB\u5B54\u8F66\u003C/h3\u003E\u003Cp\u003E[\u6280\u80FD\u6F14\u793A]\u003Cbr\u003E\u003Cimg src=\u0022https://core.dpangzi.com/Home/Image/6107daf0273e7959cff6b051\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\u003Cimg src=\u0022https://core.dpangzi.com/Home/Image/6107db29273e7959cff6b076\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cp\u003E[\u63D0\u5347\u603B\u7ED3]\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u5931\u8D25\u51B0\u8F66\u4F24\u5BB3\u63D0\u5347\u738732%\uFF08\u65E7\u724824%\uFF09\u003C/li\u003E\u003Cli\u003E\u9A91\u4E58\u4E0B\u5438\u9644\u8303\u56F4\u53D8\u5927\uFF0C\u4E14\u53EF\u4EE5\u901A\u8FC7\u8DF3\u8DC3\u952E\u5F00\u8E66\u8E66\u8F66\u003C/li\u003E\u003Cli\u003E\u5931\u8D25\u60C5\u51B5\u4E0B\u52A0\u5165\u5438\u9644\u529F\u80FD\uFF0C\u5438\u9644\u8303\u56F4\u8F83\u5927\u003C/li\u003E\u003C/ul\u003E\r\n\u003Cp\u003E[\u70B9\u8BC4]\u003Cbr\u003E\u4F24\u5BB3\u63D0\u5347\u8F83\u4E3A\u53EF\u89C2\uFF0C\u4F5C\u4E3A\u4E2D\u4F4D\u5927\u56DB\u559C\u5730\u4F4D\u8F83\u9AD8\uFF0C\u4E0E\u5149\u7535\u5154\u5171\u540C\u5C5E\u4E8ECP\u7ADE\u4F4D\u6280\u80FD\uFF0C\u5B9E\u6218\u4E2D\u7531\u4E8ECP\u5438\u9644\u4F5C\u7528\u4E22\u5931\u4F24\u5BB3\u73B0\u8C61\u8F83\u5C11\u3002\u6DF1\u6E0A\u5E26\u8BE5\u62A4\u77F3\u53EF\u4EE5\u4FDD\u8BC1\u4E00\u8F66\u901A\u8FC7\u4E09\u9636\u6BB5\u67F1\u5B50\u3002\u003C/p\u003E\r\n\u003Ch3 id=\u0022h3-u7535u9CD7u78B0u649Eu673A\u0022\u003E\u003Ca name=\u0022\u7535\u9CD7\u78B0\u649E\u673A\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u7535\u9CD7\u78B0\u649E\u673A\u003C/h3\u003E\u003Cp\u003E[\u6280\u80FD\u6F14\u793A]\u003Cbr\u003E\u003Cimg src=\u0022https://core.dpangzi.com/Home/Image/6107db5f273e7959cff6b08e\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cp\u003E[\u63D0\u5347\u603B\u7ED3]\u003C/p\u003E\r\n\u003Cul\u003E\r\n\u003Cli\u003E\u4F24\u5BB3\u63D0\u5347\u738736%\uFF08\u65E7\u724827%\uFF09\u003C/li\u003E\u003Cli\u003E\u602A\u7269\u4F1A\u4ECE\u56DB\u5468\u5411\u7535\u5854\u4E2D\u5FC3\u5438\u9644\u003C/li\u003E\u003C/ul\u003E\r\n\u003Cp\u003E[\u70B9\u8BC4]\u003Cbr\u003E\u5F62\u6001\u4E00\u822C\uFF0C\u79D2\u4F24\u975E\u5E38\u53EF\u89C2\uFF0C\u5B9E\u6218\u5B58\u5728\u4E22\u5931\u7834\u62DB\u8F93\u51FA\u4E0E\u4E22\u5931\u4F24\u5BB3\u73B0\u8C61\uFF0C\u6B63\u5E38\u6253\u6869\uFF08\u975E\u53CC\u51B0\u8F66\u53CC\u5149\u7535\u5154\uFF09\u60C5\u51B5\u4E0B\u8868\u73B0\u826F\u597D\uFF0C\u7279\u6B8A\u56FE\uFF08\u7EA2\u7389\uFF09\u6709\u5947\u6548\u3002\u003C/p\u003E\r\n\u003Chr\u003E\r\n\u003Ch3 id=\u0022h3-u603Bu7ED3\u0022\u003E\u003Ca name=\u0022\u603B\u7ED3\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u603B\u7ED3\u003C/h3\u003E\u003Cp\u003E\u65B0CP\u5230\u6765\u540E\uFF0C\u9505\u7089\u4ECD\u7136\u4EE5\u4F18\u79C0\u7684\u5F62\u6001\u3001\u4F18\u79C0\u7684\u4F24\u5BB3\u3001\u4F18\u79C0\u7684\u8868\u73B0\u5750\u5B9E\u7B2C\u4E00\u62A4\u77F3\u7684\u4F4D\u7F6E\uFF0C\u7B2C\u4E8C\u5FC5\u9009\u62A4\u77F3\u63A8\u8350\u4E0D\u5360TP\u4F4D\u3001\u79D2\u4F24\u4F18\u79C0\u3001\u805A\u602A\u8303\u56F4\u5E7F\u3001\u6F14\u51FA\u8F83\u77ED\u4E14\u5177\u6709\u63A7\u5236\u529F\u80FD\u7684\u5228\u51B0\u673A\u3002\u003Cbr\u003E\u6700\u540E\u7684\u7ADE\u4F4D\u6280\u80FD\u5728\u5149\u7535\u5154\u3001\u7535\u5854\u4E0E\u51B0\u8F66\u4E4B\u4E2D\u9009\u62E9\uFF0C\u503E\u5411\u4E8E\u7834\u62DB\u4E0E\u7206\u53D1\u7684\u53EF\u4EE5\u9009\u62E9\u5149\u7535\u5154\u4E0E\u51B0\u8F66\uFF0C\u503E\u5411\u4E8E\u7EED\u822A\u4E0E\u529F\u80FD\u6027\u53EF\u4EE5\u9009\u62E9\u7535\u5854\u3002\u7CD6\u62CD\u4E0E\u5927\u62CD\u56E0\u4E3A\u6570\u503C\u8F83\u4F4E\u4E14\u529F\u80FD\u6027\u8F83\u4E3A\u8584\u5F31\u4E0D\u505A\u592A\u591A\u8003\u91CF\uFF0C\u61D2\u4EBA\u6253\u6869\u53EF\u4EE5\u9009\u7528\u7CD6\u62CD\u62A4\u77F3\u3002\u003C/p\u003E\r\n\u003Ch3 id=\u0022h3-u5E38u89C4\u0022\u003E\u003Ca name=\u0022\u5E38\u89C4\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u5E38\u89C4\u003C/h3\u003E\u003Cp\u003E\u62A4\u77F3\uFF1A\u7206\u708E\u52A0\u70ED\u7089\uFF0C\u96EA\u4EBA\u5228\u51B0\uFF0C\u51B0\u971C\u94BB\u5B54\u8F66/\u7535\u9CD7\u78B0\u649E\u673A/\u5149\u7535\u5154\u4EFB\u9009\u5176\u4E00\u003Cbr\u003E\u7B26\u6587\uFF1A\u7206\u708E\u52A0\u70ED\u7089/\u9B54\u9053\u9178\u96E8\u4E91\u003Cbr\u003E\u7279\u70B9\uFF1A\u9002\u5E94\u4EFB\u4F55\u8F93\u51FA\u73AF\u5883\uFF0C\u7B2C\u4E09\u4E2A\u62A4\u77F3\u53EF\u4EE5\u7528\u4E8E\u8865\u5F3A\u7206\u53D1/\u7EED\u822A\u003C/p\u003E\r\n\u003Ch3 id=\u0022h3-u7206u53D1\u0022\u003E\u003Ca name=\u0022\u7206\u53D1\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u7206\u53D1\u003C/h3\u003E\u003Cp\u003E\u62A4\u77F3\uFF1A\u7206\u708E\u52A0\u70ED\u7089\uFF0C\u8D85\u7EA7\u68D2\u68D2\u7CD6\uFF0C\u5149\u7535\u5154/\u51B0\u971C\u94BB\u5B54\u8F66\u4EFB\u9009\u5176\u4E00\u003Cbr\u003E\u7B26\u6587\uFF1A\u7206\u708E\u52A0\u70ED\u7089/\u7194\u5CA9\u5730\u5E26\u003Cbr\u003E\u7279\u70B9\uFF1A\uFF08\u61D2\u4EBA\uFF09\u9009\u62E9\u53EF\u67D4\u5316\u7684\u7CD6\u62CD\u7F29\u77ED\u6F14\u51FA\uFF0C\u52A0\u901F\u4F24\u5BB3\u7ED3\u7B97\u003C/p\u003E\r\n\u003Cp\u003E\u003Cimg src=\u0022https://core.dpangzi.com/Home/Image/6107dbb6273e7959cff6b0a5\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n",
        "mainImage": "https://core.dpangzi.com/Home/Image/6107d971273e7959cff6afc1",
        "commentCount": 2,
        "viewCount": 8,
        "tag": "\u6E38\u620F",
        "images": ["6107d971273e7959cff6afc1", "6107d987273e7959cff6afc7", "6107d9d0273e7959cff6afdd", "6107d9f7273e7959cff6afee", "6107da1c273e7959cff6b011", "6107da63273e7959cff6b029", "6107dab8273e7959cff6b03d", "6107daf0273e7959cff6b051", "6107db29273e7959cff6b076", "6107db5f273e7959cff6b08e", "6107dbb6273e7959cff6b0a5"],
        "markdown": "\r\n![](https://core.dpangzi.com/Home/Image/6107d971273e7959cff6afc1)\r\n\u77E5\u6E90\u00B7\u9B54\u9053\u5B66\u8005\r\n\r\n### \u96EA\u4EBA\u5228\u51B0\r\n\r\n[\u6280\u80FD\u6F14\u793A]\r\n![](https://core.dpangzi.com/Home/Image/6107d987273e7959cff6afc7)\r\n\r\n[\u63D0\u5347\u603B\u7ED3]\r\n\r\n- \u4F24\u5BB3\u63D0\u5347\u738730%\r\n- \u6F14\u51FA\u65F6\u95F4\u5927\u5E45\u7F29\u77ED\r\n- \u805A\u602A\u8303\u56F4\u589E\u5927\r\n\r\n\r\n[\u70B9\u8BC4]\r\nCP\u5228\u51B0\u673A\u6781\u5927\u7684\u7F29\u51CF\u4E86\u6F14\u51FA\u65F6\u95F4\uFF0C\u4F46\u662F\u4ECD\u9700\u89D2\u8272\u6500\u4E0A\u5228\u51B0\u673A\u518D\u843D\u5730\uFF0C\u5927\u6982\u6574\u4F53\u6F14\u51FA\u65F6\u95F4\u4E3A2\u79D2\uFF0C\u4E14\u5228\u51B0\u673A\u805A\u602A\u8303\u56F4\u589E\u5927\uFF0C\u53EF\u4EE5\u4E3A\u961F\u53CB\u4EE5\u53CA\u81EA\u8EAB\u7684\u6280\u80FD\u521B\u9020\u66F4\u591A\u7684\u8F93\u51FA\u73AF\u5883\u3002\u5228\u51B0\u672C\u8EAB\u4F24\u5BB3\u53EF\u89C2\uFF0C\u52A0\u4E0A\u79C0\u52A0\u6301\uFF0C\u79D2\u4F24\u8F83\u4E3A\u51FA\u4F17\u3002\r\n\r\n### \u8D85\u7EA7\u68D2\u68D2\u7CD6\r\n\r\n[\u6280\u80FD\u6F14\u793A]\r\n![](https://core.dpangzi.com/Home/Image/6107d9d0273e7959cff6afdd)\r\n\r\n[\u63D0\u5347\u603B\u7ED3]\r\n\r\n- \u4F24\u5BB3\u63D0\u5347\u738732%\r\n- \u51B7\u5374\u65F6\u95F4\u7F29\u51CF10%\r\n- \u5730\u9762\u65BD\u653E\u53D6\u6D88\u6D6E\u7A7A\u4E14\u53EF\u4EE5\u67D4\u5316\u6280\u80FD\r\n\r\n\r\n[\u70B9\u8BC4]\r\n\u5730\u9762\u91CA\u653E\u65F6\u53D6\u6D88\u4E86\u6D6E\u7A7A\u52A8\u4F5C\uFF0C\u4E14\u51FB\u4E2D\u76EE\u6807\u65F6\u53EF\u4EE5\u67D4\u5316\u4F7F\u7528\u5176\u4ED6\u7684\u6280\u80FD\u3002\u9664\u6B64\u4E4B\u5916\u83B7\u5F97\u4E86\u4E00\u5B9A\u7684CD\u4F18\u5316\u4E0E\u4F24\u5BB3\u52A0\u6210\u3002\u4F46\u662F\u7531\u4E8E\u67D4\u5316\u7684\u529F\u80FD\u4E0E\u65CB\u8F6C\u626B\u628A\u91CD\u590D\uFF08\u65CB\u8F6C\u626B\u628A\u9700\u8981\u4E00\u5B9A\u7684\u6F14\u51FA\uFF09\uFF0C\u4E14\u7CD6\u62CD\u672C\u8EAB\u4E0D\u5403\u79C0\uFF0C\u5B9E\u9645\u79D2\u4F24\u8F83\u4F4E\u3002\r\n\r\n### \u7206\u708E\u52A0\u70ED\u7089\r\n\r\n[\u6280\u80FD\u6F14\u793A]\r\n![](https://core.dpangzi.com/Home/Image/6107d9f7273e7959cff6afee)\r\n![](https://core.dpangzi.com/Home/Image/6107da1c273e7959cff6b011)\r\n\r\n[\u63D0\u5347\u603B\u7ED3]\r\n\r\n- \u5931\u8D25\u9505\u7089\u4F24\u5BB3\u63D0\u5347\u738736%\uFF08\u65E7\u724827%\uFF09\r\n- \u7EC8\u7ED3\u9644\u52A0\u70ED\u6C14\u98CE\u66B4\uFF0C\u653B\u51FB\u8303\u56F4\u6269\u5F20\r\n\r\n\r\n[\u70B9\u8BC4]\r\n\u8FDB\u4E00\u6B65\u6539\u5584\u4E86\u9505\u7089\u5F62\u6001\u7684\u62A4\u77F3\uFF0C\u5BF9\u70B9\u7206\u53D1\u6216\u8005\u662F\u6E05\u602A\u90FD\u5F88\u7F8E\uFF0C\u7206\u53D1\u8303\u56F4\u975E\u5E38\u5927\u4E14\u5177\u6709\u5EF6\u8FDF\u4F24\u5BB3\uFF0C\u6570\u636E\u4F18\u79C0\uFF0C\u79D2\u4F24\u53EF\u89C2\uFF0C\u5B9E\u6218\u8868\u73B0\u826F\u597D\uFF0C\u5347\u7EA7\u524D\u540E\u5C5E\u4E8E\u5FC5\u9009\u6280\u80FD\u3002\r\n\r\n### \u8D85\u7EA7\u82CD\u8747\u62CD\r\n\r\n[\u6280\u80FD\u6F14\u793A]\r\n![](https://core.dpangzi.com/Home/Image/6107da63273e7959cff6b029)\r\n\r\n[\u63D0\u5347\u603B\u7ED3]\r\n\r\n- \u4F24\u5BB3\u63D0\u5347\u738724%\uFF08\u65E7\u724815%\uFF09\r\n- \u51B7\u5374\u65F6\u95F4\u7387-10%\r\n- \u4EA7\u751F\u7B49\u6548\u4F24\u5BB3\u7684\u51B2\u51FB\u6CE2\r\n\r\n\r\n[\u70B9\u8BC4]\r\n\u5927\u62CD\u672C\u8EAB\u6570\u636E\u786C\u4F24\uFF0CCD\u8F83\u957F\uFF0C\u62A4\u77F3\u63D0\u5347\u7387\u4E5F\u975E\u5E38\u611F\u4EBA\uFF0C\u5347\u7EA7\u524D\u540E\u90FD\u662F\u672B\u987A\u4F4D\u3002\r\n\r\n### \u5149\u7535\u5154\r\n\r\n[\u6280\u80FD\u6F14\u793A]\r\n![](https://core.dpangzi.com/Home/Image/6107dab8273e7959cff6b03d)\r\n\r\n[\u63D0\u5347\u603B\u7ED3]\r\n\r\n- \u4F24\u5BB3\u63D0\u5347\u738723%\uFF08\u65E7\u724815%\uFF09\r\n- \u5149\u7535\u5154\u53D8\u4E3A\u8131\u624B\u6280\u80FD\r\n\r\n\r\n[\u70B9\u8BC4]\r\n\u4E89\u8BAE\u6280\u80FD\uFF0C\u62A4\u77F3\u52A0\u6301\u4E0B\u89E3\u653E\u4E3A\u8131\u624B\u6280\u80FD\uFF0C\u8003\u8651\u5230\u5B9E\u6218\u7834\u62DB\u4E0E\u7206\u53D1\u6253\u6CD5\u5149\u7535\u5154\u8F83\u597D\uFF0C\u4F46\u662F\u8003\u8651\u5230\u4F24\u5BB3\u4E0ECD\u5149\u7535\u5154\u8F83\u6B21\uFF0C\u5C5E\u4E8E\u53EF\u9009CP\u6280\u80FD\u3002\r\n\r\n### \u51B0\u971C\u94BB\u5B54\u8F66\r\n\r\n[\u6280\u80FD\u6F14\u793A]\r\n![](https://core.dpangzi.com/Home/Image/6107daf0273e7959cff6b051)\r\n![](https://core.dpangzi.com/Home/Image/6107db29273e7959cff6b076)\r\n\r\n[\u63D0\u5347\u603B\u7ED3]\r\n\r\n- \u5931\u8D25\u51B0\u8F66\u4F24\u5BB3\u63D0\u5347\u738732%\uFF08\u65E7\u724824%\uFF09\r\n- \u9A91\u4E58\u4E0B\u5438\u9644\u8303\u56F4\u53D8\u5927\uFF0C\u4E14\u53EF\u4EE5\u901A\u8FC7\u8DF3\u8DC3\u952E\u5F00\u8E66\u8E66\u8F66\r\n- \u5931\u8D25\u60C5\u51B5\u4E0B\u52A0\u5165\u5438\u9644\u529F\u80FD\uFF0C\u5438\u9644\u8303\u56F4\u8F83\u5927\r\n\r\n\r\n[\u70B9\u8BC4]\r\n\u4F24\u5BB3\u63D0\u5347\u8F83\u4E3A\u53EF\u89C2\uFF0C\u4F5C\u4E3A\u4E2D\u4F4D\u5927\u56DB\u559C\u5730\u4F4D\u8F83\u9AD8\uFF0C\u4E0E\u5149\u7535\u5154\u5171\u540C\u5C5E\u4E8ECP\u7ADE\u4F4D\u6280\u80FD\uFF0C\u5B9E\u6218\u4E2D\u7531\u4E8ECP\u5438\u9644\u4F5C\u7528\u4E22\u5931\u4F24\u5BB3\u73B0\u8C61\u8F83\u5C11\u3002\u6DF1\u6E0A\u5E26\u8BE5\u62A4\u77F3\u53EF\u4EE5\u4FDD\u8BC1\u4E00\u8F66\u901A\u8FC7\u4E09\u9636\u6BB5\u67F1\u5B50\u3002\r\n\r\n### \u7535\u9CD7\u78B0\u649E\u673A\r\n\r\n[\u6280\u80FD\u6F14\u793A]\r\n![](https://core.dpangzi.com/Home/Image/6107db5f273e7959cff6b08e)\r\n\r\n[\u63D0\u5347\u603B\u7ED3]\r\n\r\n- \u4F24\u5BB3\u63D0\u5347\u738736%\uFF08\u65E7\u724827%\uFF09\r\n- \u602A\u7269\u4F1A\u4ECE\u56DB\u5468\u5411\u7535\u5854\u4E2D\u5FC3\u5438\u9644\r\n\r\n\r\n[\u70B9\u8BC4]\r\n\u5F62\u6001\u4E00\u822C\uFF0C\u79D2\u4F24\u975E\u5E38\u53EF\u89C2\uFF0C\u5B9E\u6218\u5B58\u5728\u4E22\u5931\u7834\u62DB\u8F93\u51FA\u4E0E\u4E22\u5931\u4F24\u5BB3\u73B0\u8C61\uFF0C\u6B63\u5E38\u6253\u6869\uFF08\u975E\u53CC\u51B0\u8F66\u53CC\u5149\u7535\u5154\uFF09\u60C5\u51B5\u4E0B\u8868\u73B0\u826F\u597D\uFF0C\u7279\u6B8A\u56FE\uFF08\u7EA2\u7389\uFF09\u6709\u5947\u6548\u3002\r\n\r\n* * *\r\n\r\n### \u603B\u7ED3\r\n\r\n\u65B0CP\u5230\u6765\u540E\uFF0C\u9505\u7089\u4ECD\u7136\u4EE5\u4F18\u79C0\u7684\u5F62\u6001\u3001\u4F18\u79C0\u7684\u4F24\u5BB3\u3001\u4F18\u79C0\u7684\u8868\u73B0\u5750\u5B9E\u7B2C\u4E00\u62A4\u77F3\u7684\u4F4D\u7F6E\uFF0C\u7B2C\u4E8C\u5FC5\u9009\u62A4\u77F3\u63A8\u8350\u4E0D\u5360TP\u4F4D\u3001\u79D2\u4F24\u4F18\u79C0\u3001\u805A\u602A\u8303\u56F4\u5E7F\u3001\u6F14\u51FA\u8F83\u77ED\u4E14\u5177\u6709\u63A7\u5236\u529F\u80FD\u7684\u5228\u51B0\u673A\u3002\r\n\u6700\u540E\u7684\u7ADE\u4F4D\u6280\u80FD\u5728\u5149\u7535\u5154\u3001\u7535\u5854\u4E0E\u51B0\u8F66\u4E4B\u4E2D\u9009\u62E9\uFF0C\u503E\u5411\u4E8E\u7834\u62DB\u4E0E\u7206\u53D1\u7684\u53EF\u4EE5\u9009\u62E9\u5149\u7535\u5154\u4E0E\u51B0\u8F66\uFF0C\u503E\u5411\u4E8E\u7EED\u822A\u4E0E\u529F\u80FD\u6027\u53EF\u4EE5\u9009\u62E9\u7535\u5854\u3002\u7CD6\u62CD\u4E0E\u5927\u62CD\u56E0\u4E3A\u6570\u503C\u8F83\u4F4E\u4E14\u529F\u80FD\u6027\u8F83\u4E3A\u8584\u5F31\u4E0D\u505A\u592A\u591A\u8003\u91CF\uFF0C\u61D2\u4EBA\u6253\u6869\u53EF\u4EE5\u9009\u7528\u7CD6\u62CD\u62A4\u77F3\u3002\r\n\r\n### \u5E38\u89C4\r\n\r\n\u62A4\u77F3\uFF1A\u7206\u708E\u52A0\u70ED\u7089\uFF0C\u96EA\u4EBA\u5228\u51B0\uFF0C\u51B0\u971C\u94BB\u5B54\u8F66/\u7535\u9CD7\u78B0\u649E\u673A/\u5149\u7535\u5154\u4EFB\u9009\u5176\u4E00\r\n\u7B26\u6587\uFF1A\u7206\u708E\u52A0\u70ED\u7089/\u9B54\u9053\u9178\u96E8\u4E91\r\n\u7279\u70B9\uFF1A\u9002\u5E94\u4EFB\u4F55\u8F93\u51FA\u73AF\u5883\uFF0C\u7B2C\u4E09\u4E2A\u62A4\u77F3\u53EF\u4EE5\u7528\u4E8E\u8865\u5F3A\u7206\u53D1/\u7EED\u822A\r\n\r\n### \u7206\u53D1\r\n\r\n\u62A4\u77F3\uFF1A\u7206\u708E\u52A0\u70ED\u7089\uFF0C\u8D85\u7EA7\u68D2\u68D2\u7CD6\uFF0C\u5149\u7535\u5154/\u51B0\u971C\u94BB\u5B54\u8F66\u4EFB\u9009\u5176\u4E00\r\n\u7B26\u6587\uFF1A\u7206\u708E\u52A0\u70ED\u7089/\u7194\u5CA9\u5730\u5E26\r\n\u7279\u70B9\uFF1A\uFF08\u61D2\u4EBA\uFF09\u9009\u62E9\u53EF\u67D4\u5316\u7684\u7CD6\u62CD\u7F29\u77ED\u6F14\u51FA\uFF0C\u52A0\u901F\u4F24\u5BB3\u7ED3\u7B97\r\n\r\n![](https://core.dpangzi.com/Home/Image/6107dbb6273e7959cff6b0a5)\r\n",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-12-03T18:49:32Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "\u7528\u6237\u524D\u53F0",
        "createTime": "2022-02-18T12:19:08.405+08:00",
        "lastUpdateTime": "2022-02-18T12:19:08.405+08:00"
    }, {
        "id": "61e2194416427409a2cf452d",
        "blogTitle": "\u89C6\u9891\u5206\u7247powershell\u811A\u672C",
        "introduction": "\u5206\u7247PS\u811A\u672C",
        "blogContents": "\u003Cpre\u003E\u003Ccode class=\u0022lang-powershell\u0022\u003E[System.Console]::WriteLine(\u0026#39;\u8BF7\u8F93\u5165\u89C6\u9891\u5206\u7247\u5B58\u653E\u7684\u76EE\u5F55\uFF1A\u0026#39;)\n$videoOutput = [System.Console]::ReadLine()\nif(![System.IO.Directory]::Exists($videoOutput))\n{\n    [System.Console]::WriteLine(\u0026#39;\u89C6\u9891\u5206\u7247\u5B58\u653E\u7684\u76EE\u5F55\u4E0D\u5B58\u5728\uFF0C\u662F\u5426\u521B\u5EFA\u8BE5\u76EE\u5F55\uFF1Fy(es)/n(o or press any)\u0026#39;)\n    $isCreate = [System.Console]::ReadLine();\n    if([System.String]::Equals(\u0026quot;y\u0026quot;,$isCreate, [System.StringComparison]::CurrentCultureIgnoreCase))\n    {\n        try\n        {\n            [System.IO.Directory]::CreateDirectory($videoOutput);\n            [System.Console]::WriteLine(\u0026quot;$videoOutput created\u0026quot;)\n        }\n        catch [System.Exception]\n        {\n            [System.Console]::WriteLine($_);\n        }\n    }\n    else\n    {    \n        return;\n    }\n}\n\n[System.Console]::WriteLine(\u0026#39;\u8BF7\u8F93\u5165\u5C06\u8981\u5206\u7247\u89C6\u9891\u6587\u4EF6\u5730\u5740\uFF1A\u0026#39;)\n$videoFilePath = [System.Console]::ReadLine();\nif(![System.IO.File]::Exists($videoFilePath))\n{\n    [System.Console]::WriteLine(\u0026quot;$videoFilePath not exists\u0026quot;);\n    return;\n}\n\n$videoFragments = [System.IO.Path]::Combine($videoOutput , \u0026quot;1080p_%d.ts\u0026quot;);\n$videoIndexM3U8 = [System.IO.Path]::Combine($videoOutput , \u0026quot;1080p.m3u8\u0026quot;);\n\nffmpeg.exe -i $videoFilePath -vf scale=w=1920:h=1080:force_original_aspect_ratio=decrease -c:a aac -ar 48000 -c:v h264 -profile:v main -crf 20 -sc_threshold 0 -g 48 -keyint_min 48 -hls_time 4 -hls_playlist_type vod -b:v 5000k -maxrate 5350k -bufsize 7500k -b:a 192k -hls_segment_filename $videoFragments $videoIndexM3U8\n\u003C/code\u003E\u003C/pre\u003E\n",
        "mainImage": null,
        "commentCount": 0,
        "viewCount": 16,
        "tag": "\u811A\u672C",
        "images": [],
        "markdown": "\n\u0060\u0060\u0060 powershell\n[System.Console]::WriteLine(\u0027\u8BF7\u8F93\u5165\u89C6\u9891\u5206\u7247\u5B58\u653E\u7684\u76EE\u5F55\uFF1A\u0027)\n$videoOutput = [System.Console]::ReadLine()\nif(![System.IO.Directory]::Exists($videoOutput))\n{\n    [System.Console]::WriteLine(\u0027\u89C6\u9891\u5206\u7247\u5B58\u653E\u7684\u76EE\u5F55\u4E0D\u5B58\u5728\uFF0C\u662F\u5426\u521B\u5EFA\u8BE5\u76EE\u5F55\uFF1Fy(es)/n(o or press any)\u0027)\n    $isCreate = [System.Console]::ReadLine();\n    if([System.String]::Equals(\u0022y\u0022,$isCreate, [System.StringComparison]::CurrentCultureIgnoreCase))\n    {\n        try\n        {\n            [System.IO.Directory]::CreateDirectory($videoOutput);\n            [System.Console]::WriteLine(\u0022$videoOutput created\u0022)\n        }\n        catch [System.Exception]\n        {\n            [System.Console]::WriteLine($_);\n        }\n    }\n    else\n    {    \n        return;\n    }\n}\n\n[System.Console]::WriteLine(\u0027\u8BF7\u8F93\u5165\u5C06\u8981\u5206\u7247\u89C6\u9891\u6587\u4EF6\u5730\u5740\uFF1A\u0027)\n$videoFilePath = [System.Console]::ReadLine();\nif(![System.IO.File]::Exists($videoFilePath))\n{\n    [System.Console]::WriteLine(\u0022$videoFilePath not exists\u0022);\n    return;\n}\n\n$videoFragments = [System.IO.Path]::Combine($videoOutput , \u00221080p_%d.ts\u0022);\n$videoIndexM3U8 = [System.IO.Path]::Combine($videoOutput , \u00221080p.m3u8\u0022);\n\nffmpeg.exe -i $videoFilePath -vf scale=w=1920:h=1080:force_original_aspect_ratio=decrease -c:a aac -ar 48000 -c:v h264 -profile:v main -crf 20 -sc_threshold 0 -g 48 -keyint_min 48 -hls_time 4 -hls_playlist_type vod -b:v 5000k -maxrate 5350k -bufsize 7500k -b:a 192k -hls_segment_filename $videoFragments $videoIndexM3U8\n\n\u0060\u0060\u0060\n",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2022-01-15T02:53:31Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "Dpz.Core.WebApi",
        "createTime": "2022-01-15T08:45:56.723+08:00",
        "lastUpdateTime": "2022-01-15T10:53:49.077+08:00"
    }, {
        "id": "61c857e7e415fdb92627b261",
        "blogTitle": "131212121212121212121212121212",
        "introduction": "p;lkjhgfd",
        "blogContents": "\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61c857e1e415fdb92627b25e\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\r\n\u003Cp\u003Een!\u003C/p\u003E\r\n\u003Ctable\u003E\r\n\u003Cthead\u003E\r\n\u003Ctr\u003E\r\n\u003Cth\u003E\u5730\u5740\u003C/th\u003E\r\n\u003Cth\u003E\u63CF\u8FF0\u003C/th\u003E\r\n\u003Cth\u003E\u6E90\u7801\u5730\u5740\u003C/th\u003E\r\n\u003C/tr\u003E\r\n\u003C/thead\u003E\r\n\u003Ctbody\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003E\u003Ca href=\u0022https://core.dpangzi.com\u0022\u003Ehttps://core.dpangzi.com\u003C/a\u003E\u003C/td\u003E\r\n\u003Ctd\u003E\u4E3B\u7AD9\u003C/td\u003E\r\n\u003Ctd\u003E\u003Ca href=\u0022https://github.com/pengqian089/dpz.core/tree/master/src/Dpz.Core.Web\u0022\u003EDpz.Core.Web\u003C/a\u003E\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003E\u003Ca href=\u0022https://www.dpangzi.com\u0022\u003Ehttps://www.dpangzi.com\u003C/a\u003E\u003C/td\u003E\r\n\u003Ctd\u003Eblazor web assembly \u5F00\u53D1\u7684\u7AD9\u70B9\u003C/td\u003E\r\n\u003Ctd\u003E\u003Ca href=\u0022https://github.com/pengqian089/dpz.core/tree/master/src/Dpz.Core.WebMore\u0022\u003EDpz.Core.WebMore\u003C/a\u003E\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003E\u003Ca href=\u0022https://manage.dpangzi.com\u0022\u003Ehttps://manage.dpangzi.com\u003C/a\u003E\u003C/td\u003E\r\n\u003Ctd\u003E\u540E\u53F0\u7BA1\u7406\u7CFB\u7EDF\u003C/td\u003E\r\n\u003Ctd\u003E\u003Ca href=\u0022https://github.com/pengqian089/dpz.core/tree/master/src/Dpz.Core.Web.Dashboard\u0022\u003EDpz.Core.Web.Dashboard\u003C/a\u003E\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003E\u003Ca href=\u0022https://api.dpangzi.com/swagger/index.html\u0022\u003Ehttps://api.dpangzi.com/swagger/index.html\u003C/a\u003E\u003C/td\u003E\r\n\u003Ctd\u003ERestFul Web api\u003C/td\u003E\r\n\u003Ctd\u003E\u003Ca href=\u0022https://github.com/pengqian089/dpz.core/tree/master/src/Dpz.Core.WebApi\u0022\u003EDpz.Core.WebApi\u003C/a\u003E\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003Ctr\u003E\r\n\u003Ctd\u003E\u003Ca href=\u0022https://blog.dpangzi.com\u0022\u003Ehttps://blog.dpangzi.com\u003C/a\u003E\u003C/td\u003E\r\n\u003Ctd\u003E\u535A\u5BA2\u003C/td\u003E\r\n\u003Ctd\u003E\u003Ca href=\u0022https://github.com/pengqian089/hexo\u0022\u003Ehexo\u003C/a\u003E\u003C/td\u003E\r\n\u003C/tr\u003E\r\n\u003C/tbody\u003E\r\n\u003C/table\u003E\r\n\u003Ch3 id=\u0022h3--\u0022\u003E\u003Ca name=\u0022\u6B63\u5728\u505A\u548C\u5C06\u8981\u505A\u7684\u4E8B\uFF1A\u0022 class=\u0022reference-link\u0022\u003E\u003C/a\u003E\u003Cspan class=\u0022header-link octicon octicon-link\u0022\u003E\u003C/span\u003E\u6B63\u5728\u505A\u548C\u5C06\u8981\u505A\u7684\u4E8B\uFF1A\u003C/h3\u003E\u003Cul\u003E\r\n\u003Cli\u003E[x] \u91CD\u5199Steam\u9875\u9762UI\u003C/li\u003E\u003Cli\u003E[ ] \u53D1\u8868\u7684\u6587\u7AE0\u81EA\u52A8\u540C\u6B65\u81F3hexo\u535A\u5BA2\u003C/li\u003E\u003Cli\u003E[x] \u5B9A\u65F6\u4EFB\u52A1\uFF0C\u81EA\u52A8\u66F4\u65B0\u6E90\u4EE3\u7801 \u003Cstrong\u003Elinux \u670D\u52A1\u5668\u4E0A\u540C\u6B65\u6E90\u7801\u6709bug\uFF0C\u5F85\u4FEE\u590D\u003C/strong\u003E\u003C/li\u003E\u003Cli\u003E[ ] \u4E3B\u6570\u636E\u5E93\u5B9A\u65F6\u628A\u91CD\u8981\u6570\u636E\u5907\u4EFD\u5230\u672C\u5730\u003C/li\u003E\u003Cli\u003E[ ] \u8BBF\u95EE\u7EDF\u8BA1\u56FE\u003C/li\u003E\u003Cli\u003E[x] \u6E90\u7801\u76F8\u5173\u8BF4\u660E\u6570\u636E\u8FC1\u79FB\u5230\u4E3B\u6570\u636E\u5E93\u003C/li\u003E\u003Cli\u003E[x] \u79FB\u9664\u7F51\u7AD9\u76F8\u5173\u7684\u9759\u6001\u8D44\u6E90\uFF0C\u5168\u90E8\u8F6C\u79FB\u5230\u003Ca href=\u0022https://github.com/pengqian089/SiteSource\u0022\u003E\u9759\u6001\u4ED3\u5E93\u003C/a\u003E\u4E2D\u53BB\uFF0C\u4F7F\u7528CDN\u52A0\u901F\u003C/li\u003E\u003Cli\u003E[x] WebApi\u5B8C\u6210\u6E90\u7801\u7BA1\u7406\uFF0C\u003Ca href=\u0022https://core.dpangzi.com/code\u0022\u003E\u4E3B\u7AD9\u003C/a\u003E\u76F8\u5173\u529F\u80FD\u7531REST API \u5B8C\u6210\u003C/li\u003E\u003Cli\u003E[x] webapi\u548C\u4E3B\u7AD9\u4F7F\u7528\u540C\u4E00\u5957\u65E5\u5FD7\u7BA1\u7406\uFF0C\u5E76\u5728\u540E\u53F0\u53EF\u4EE5\u67E5\u770B\u003C/li\u003E\u003Cli\u003E[x] \u89C6\u9891\u7BA1\u7406\u548CDB\u5173\u8054\u003C/li\u003E\u003Cli\u003E[x] \u89C6\u9891\u76F8\u5173\u7684\u5F39\u5E55\u4E0D\u518D\u4F7F\u7528ID\u5206\u7EC4\uFF0C\u4F7F\u7528\u81EA\u5B9A\u4E49\u540D\u79F0\u4EE5\u4FBF\u65B9\u4FBF\u7BA1\u7406\u003C/li\u003E\u003C/ul\u003E\r\n",
        "mainImage": "https://localhost:37701/Home/Image/61c857e1e415fdb92627b25e",
        "commentCount": 1,
        "viewCount": 13,
        "tag": "123",
        "images": ["61c857e1e415fdb92627b25e"],
        "markdown": "![](https://localhost:37701/Home/Image/61c857e1e415fdb92627b25e)\r\n\r\nen!\r\n\r\n| \u5730\u5740 | \u63CF\u8FF0 |\u6E90\u7801\u5730\u5740|\r\n| ---- | ---- |----|\r\n| https://core.dpangzi.com |\u4E3B\u7AD9|[Dpz.Core.Web](https://github.com/pengqian089/dpz.core/tree/master/src/Dpz.Core.Web)|\r\n| https://www.dpangzi.com |blazor web assembly \u5F00\u53D1\u7684\u7AD9\u70B9|[Dpz.Core.WebMore](https://github.com/pengqian089/dpz.core/tree/master/src/Dpz.Core.WebMore)|\r\n| https://manage.dpangzi.com |\u540E\u53F0\u7BA1\u7406\u7CFB\u7EDF|[Dpz.Core.Web.Dashboard](https://github.com/pengqian089/dpz.core/tree/master/src/Dpz.Core.Web.Dashboard)|\r\n| https://api.dpangzi.com/swagger/index.html |RestFul Web api|[Dpz.Core.WebApi](https://github.com/pengqian089/dpz.core/tree/master/src/Dpz.Core.WebApi)|\r\n| https://blog.dpangzi.com |\u535A\u5BA2|[hexo](https://github.com/pengqian089/hexo)|\r\n\r\n### \u6B63\u5728\u505A\u548C\u5C06\u8981\u505A\u7684\u4E8B\uFF1A\r\n- [x] \u91CD\u5199Steam\u9875\u9762UI\r\n- [ ] \u53D1\u8868\u7684\u6587\u7AE0\u81EA\u52A8\u540C\u6B65\u81F3hexo\u535A\u5BA2\r\n- [x] \u5B9A\u65F6\u4EFB\u52A1\uFF0C\u81EA\u52A8\u66F4\u65B0\u6E90\u4EE3\u7801 **linux \u670D\u52A1\u5668\u4E0A\u540C\u6B65\u6E90\u7801\u6709bug\uFF0C\u5F85\u4FEE\u590D**\r\n- [ ] \u4E3B\u6570\u636E\u5E93\u5B9A\u65F6\u628A\u91CD\u8981\u6570\u636E\u5907\u4EFD\u5230\u672C\u5730\r\n- [ ] \u8BBF\u95EE\u7EDF\u8BA1\u56FE\r\n- [x] \u6E90\u7801\u76F8\u5173\u8BF4\u660E\u6570\u636E\u8FC1\u79FB\u5230\u4E3B\u6570\u636E\u5E93\r\n- [x] \u79FB\u9664\u7F51\u7AD9\u76F8\u5173\u7684\u9759\u6001\u8D44\u6E90\uFF0C\u5168\u90E8\u8F6C\u79FB\u5230[\u9759\u6001\u4ED3\u5E93](https://github.com/pengqian089/SiteSource)\u4E2D\u53BB\uFF0C\u4F7F\u7528CDN\u52A0\u901F\r\n- [x] WebApi\u5B8C\u6210\u6E90\u7801\u7BA1\u7406\uFF0C[\u4E3B\u7AD9](https://core.dpangzi.com/code)\u76F8\u5173\u529F\u80FD\u7531REST API \u5B8C\u6210\r\n- [x] webapi\u548C\u4E3B\u7AD9\u4F7F\u7528\u540C\u4E00\u5957\u65E5\u5FD7\u7BA1\u7406\uFF0C\u5E76\u5728\u540E\u53F0\u53EF\u4EE5\u67E5\u770B\r\n- [x] \u89C6\u9891\u7BA1\u7406\u548CDB\u5173\u8054\r\n- [x] \u89C6\u9891\u76F8\u5173\u7684\u5F39\u5E55\u4E0D\u518D\u4F7F\u7528ID\u5206\u7EC4\uFF0C\u4F7F\u7528\u81EA\u5B9A\u4E49\u540D\u79F0\u4EE5\u4FBF\u65B9\u4FBF\u7BA1\u7406",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-12-03T18:49:32Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "\u7528\u6237\u524D\u53F0",
        "createTime": "2021-12-26T19:54:15.489+08:00",
        "lastUpdateTime": "2022-04-02T08:22:20.486+08:00"
    }, {
        "id": "61c85110ef4ea71b705f2ae8",
        "blogTitle": "\u795E\u821F\u5341\u4E09\u53F7\u822A\u5929\u5458\u4E58\u7EC4 \u4ECA\u65E5\u5C06\u5F00\u5C55\u7B2C\u4E8C\u6B21\u51FA\u8231\u6D3B\u52A8",
        "introduction": "\u003Cp\u003E\u636E\u4E2D\u56FD\u8F7D\u4EBA\u822A\u5929\u5DE5\u7A0B\u529E\u516C\u5BA4\u6D88\u606F\uFF0C\u795E\u821F\u5341\u4E09\u53F7\u822A\u5929\u5458\u4E58\u7EC4\u5C06\u4E8E12\u670826\u65E5\u5728\u8F68\u5F00\u5C55\u7B2C\u4E8C\u6B21\u51FA\u8231\u6D3B\u52A8\u3002\u822A\u5929\u5458\u7FDF\u5FD7\u521A\u3001\u53F6\u5149\u5BCC\u5C06\u8FDB\u884C\u8231\u5916\u4F5C\u4E1A\uFF0C\u822A\u5929\u5458\u738B\u4E9A\u5E73\u5C06\u5728\u8231\u5185\u914D\u5408\u652F\u6301\u3002\u003C/p\u003E ",
        "blogContents": "\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61c85110ef4ea71b705f2ae2\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\u622A\u81F3\u76EE\u524D\uFF0C\u795E\u821F\u5341\u4E09\u53F7\u822A\u5929\u5458\u4E58\u7EC4\u5728\u8F68\u5DE5\u4F5C\u751F\u6D3B\u5DF2\u8FBE71\u5929\u3002\u81EA11\u67087\u65E5\u7B2C\u4E00\u6B21\u51FA\u8231\u6D3B\u52A8\u4EE5\u6765\uFF0C\u822A\u5929\u5458\u4E58\u7EC4\u5148\u540E\u5F00\u5C55\u4E86\u5728\u8F68\u533B\u5B66\u68C0\u67E5\u3001\u7A7A\u95F4\u5B9E\uFF08\u8BD5\uFF09\u9A8C\u3001\u7A7A\u95F4\u7AD9\u5E73\u53F0\u5DE1\u68C0\u4E0E\u65E5\u5E38\u7167\u6599\u7B49\u5404\u9879\u5DE5\u4F5C\uFF0C\u8FDB\u884C\u4E86\u7D27\u6025\u64A4\u79BB\u3001\u533B\u7597\u6551\u62A4\u7B49\u79D1\u76EE\u7684\u5728\u8F68\u8BAD\u7EC3\uFF0C\u5706\u6EE1\u5B8C\u6210\u4E86\u201C\u5929\u5BAB\u8BFE\u5802\u201D\u9996\u6B21\u592A\u7A7A\u6388\u8BFE\u3002\u003C/p\u003E\n\u003Cp\u003E\u76EE\u524D\uFF0C\u795E\u821F\u5341\u4E09\u53F7\u822A\u5929\u5458\u4E58\u7EC4\u72B6\u6001\u826F\u597D\uFF0C\u7A7A\u95F4\u7AD9\u7EC4\u5408\u4F53\u8FD0\u884C\u7A33\u5B9A\uFF0C\u5177\u5907\u5F00\u5C55\u51FA\u8231\u6D3B\u52A8\u6761\u4EF6\u3002\u003C/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61c85110ef4ea71b705f2ae6\u0022 alt=\u0022https://n.sinaimg.cn/tech/transform/167/w630h337/20211226/cb4e-23fea67523b994012de462dec2fc7010.png\u0022\u003E\u003Cbr\u003E0.0.0.0\u003C/p\u003E\n",
        "mainImage": "https://localhost:37701/Home/Image/61c85110ef4ea71b705f2ae2",
        "commentCount": 0,
        "viewCount": 2,
        "tag": "cnBeta",
        "images": ["61c85110ef4ea71b705f2ae2", "61c85110ef4ea71b705f2ae6"],
        "markdown": "\n![](https://localhost:37701/Home/Image/61c85110ef4ea71b705f2ae2)\n\n\u622A\u81F3\u76EE\u524D\uFF0C\u795E\u821F\u5341\u4E09\u53F7\u822A\u5929\u5458\u4E58\u7EC4\u5728\u8F68\u5DE5\u4F5C\u751F\u6D3B\u5DF2\u8FBE71\u5929\u3002\u81EA11\u67087\u65E5\u7B2C\u4E00\u6B21\u51FA\u8231\u6D3B\u52A8\u4EE5\u6765\uFF0C\u822A\u5929\u5458\u4E58\u7EC4\u5148\u540E\u5F00\u5C55\u4E86\u5728\u8F68\u533B\u5B66\u68C0\u67E5\u3001\u7A7A\u95F4\u5B9E\uFF08\u8BD5\uFF09\u9A8C\u3001\u7A7A\u95F4\u7AD9\u5E73\u53F0\u5DE1\u68C0\u4E0E\u65E5\u5E38\u7167\u6599\u7B49\u5404\u9879\u5DE5\u4F5C\uFF0C\u8FDB\u884C\u4E86\u7D27\u6025\u64A4\u79BB\u3001\u533B\u7597\u6551\u62A4\u7B49\u79D1\u76EE\u7684\u5728\u8F68\u8BAD\u7EC3\uFF0C\u5706\u6EE1\u5B8C\u6210\u4E86\u201C\u5929\u5BAB\u8BFE\u5802\u201D\u9996\u6B21\u592A\u7A7A\u6388\u8BFE\u3002\n\n\u76EE\u524D\uFF0C\u795E\u821F\u5341\u4E09\u53F7\u822A\u5929\u5458\u4E58\u7EC4\u72B6\u6001\u826F\u597D\uFF0C\u7A7A\u95F4\u7AD9\u7EC4\u5408\u4F53\u8FD0\u884C\u7A33\u5B9A\uFF0C\u5177\u5907\u5F00\u5C55\u51FA\u8231\u6D3B\u52A8\u6761\u4EF6\u3002\n\n![https://n.sinaimg.cn/tech/transform/167/w630h337/20211226/cb4e-23fea67523b994012de462dec2fc7010.png](https://localhost:37701/Home/Image/61c85110ef4ea71b705f2ae6)\n0.0.0.0",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-12-26T11:46:43Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "https://www.cnbeta.com/articles/science/1218979.htm",
        "createTime": "2021-12-26T19:21:55+08:00",
        "lastUpdateTime": "2021-12-26T19:53:39.052+08:00"
    }, {
        "id": "61c5b9bd854d363d16620614",
        "blogTitle": "12323123123",
        "introduction": "123",
        "blogContents": "\u003Cp\u003E123123123\u003C/p\u003E\r\n",
        "mainImage": null,
        "commentCount": 2,
        "viewCount": 7,
        "tag": "123",
        "images": [],
        "markdown": "123123123",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-12-03T18:49:32Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "\u7528\u6237\u524D\u53F0",
        "createTime": "2021-12-24T20:14:53.343+08:00",
        "lastUpdateTime": "2021-12-24T20:15:02.529+08:00"
    }, {
        "id": "61be591da417ba2111512e0b",
        "blogTitle": "123",
        "introduction": "123",
        "blogContents": "\u003Cp\u003E123123123123123\u003C/p\u003E\r\n",
        "mainImage": null,
        "commentCount": 44,
        "viewCount": 14,
        "tag": "123",
        "images": [],
        "markdown": "123123123123123",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-12-03T18:49:32Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "\u7528\u6237\u524D\u53F0",
        "createTime": "2021-12-19T05:56:45.718+08:00",
        "lastUpdateTime": "2021-12-19T05:56:45.718+08:00"
    }, {
        "id": "61ab848f6407f0b853a74e7e",
        "blogTitle": "oiuytrerty",
        "introduction": "safdadsf",
        "blogContents": "\u003Cp\u003Eadsfsdf\u003Cbr\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61efffcd672917c89b09c027\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\n",
        "mainImage": "https://localhost:37701/Home/Image/61efffcd672917c89b09c027",
        "commentCount": 0,
        "viewCount": 16,
        "tag": "123123",
        "images": ["61efffcd672917c89b09c027"],
        "markdown": "\nadsfsdf\n![](https://localhost:37701/Home/Image/61efffcd672917c89b09c027)",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2022-01-25T13:39:51Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "Dpz.Core.WebApi",
        "createTime": "2021-12-04T23:09:03.893+08:00",
        "lastUpdateTime": "2022-01-25T21:49:16.643+08:00"
    }, {
        "id": "61a8dca7a86a176250eafd5a",
        "blogTitle": "123",
        "introduction": "222",
        "blogContents": "\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a8dc98a86a176250eafd57\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a8dd5ba86a176250eafd5b\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\n",
        "mainImage": "https://localhost:37701/Home/Image/61a8dc98a86a176250eafd57",
        "commentCount": 1,
        "viewCount": 18,
        "tag": "123123",
        "images": ["61a8dc98a86a176250eafd57", "61a8dd5ba86a176250eafd5b"],
        "markdown": "\n![](https://localhost:37701/Home/Image/61a8dc98a86a176250eafd57)\n![](https://localhost:37701/Home/Image/61a8dd5ba86a176250eafd5b)",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-12-02T14:46:44Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "Dpz.Core.WebApi",
        "createTime": "2021-12-02T22:48:07.956+08:00",
        "lastUpdateTime": "2021-12-02T22:51:12.407+08:00"
    }, {
        "id": "61a596852a426a12c4d9e4aa",
        "blogTitle": "hahahaha",
        "introduction": "hfgdjjjj",
        "blogContents": "\u003Cp\u003Ejkhgfhbdgsvbc\u003C/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a596622a426a12c4d9e49f\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\n\u003Cp\u003Efdagg\u003C/p\u003E\n\u003Cp\u003E1\u003C/p\u003E\n\u003Cp\u003Egfdfdhjhkl;\u003C/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a596812a426a12c4d9e4a7\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\n",
        "mainImage": "https://localhost:37701/Home/Image/61a596622a426a12c4d9e49f",
        "commentCount": 0,
        "viewCount": 15,
        "tag": "123123",
        "images": ["61a596622a426a12c4d9e49f", "61a596812a426a12c4d9e4a7"],
        "markdown": "\njkhgfhbdgsvbc\n\n![](https://localhost:37701/Home/Image/61a596622a426a12c4d9e49f)\n\nfdagg\n\n1\n\ngfdfdhjhkl;\n\n![](https://localhost:37701/Home/Image/61a596812a426a12c4d9e4a7)\n",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-11-30T08:53:38Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "Dpz.Core.WebApi",
        "createTime": "2021-11-30T11:12:05.715+08:00",
        "lastUpdateTime": "2021-11-30T17:11:58.53+08:00"
    }, {
        "id": "61a4e68dac2d432e4577ba64",
        "blogTitle": "dasdf",
        "introduction": "asdfafds",
        "blogContents": "\u003Cp\u003E1\u003Cbr\u003Esadfasfddccc\u003Cbr\u003Egggggg\u003Cbr\u003E1\u003C/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a51e5fac2d432e4577ba71\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E123\u003C/p\u003E\n",
        "mainImage": "https://localhost:37701/Home/Image/61a51e5fac2d432e4577ba71",
        "commentCount": 0,
        "viewCount": 24,
        "tag": "123123",
        "images": ["61a51e5fac2d432e4577ba71"],
        "markdown": "\n1\nsadfasfddccc\ngggggg\n1\n\n![](https://localhost:37701/Home/Image/61a51e5fac2d432e4577ba71)\n123\n",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-11-30T02:57:27Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "Dpz.Core.WebApi",
        "createTime": "2021-11-29T22:41:17.815+08:00",
        "lastUpdateTime": "2021-11-30T11:10:50.637+08:00"
    }, {
        "id": "61a4e552681fce48801435d4",
        "blogTitle": "123",
        "introduction": "123123",
        "blogContents": "\u003Cp\u003E12312313123\u003C/p\u003E\n\u003Cp\u003Eddddd\u003Cbr\u003E111\u003Cbr\u003Edgggffgfdgfghhgshg\u003Cbr\u003Eggggg\u003C/p\u003E\n",
        "mainImage": null,
        "commentCount": 0,
        "viewCount": 10,
        "tag": "123123",
        "images": [],
        "markdown": "\n12312313123\n\nddddd\n111\ndgggffgfdgfghhgshg\nggggg",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-11-29T15:15:36Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": null,
        "createTime": "2021-11-29T22:36:02.842+08:00",
        "lastUpdateTime": "2021-11-29T23:36:46.1+08:00"
    }, {
        "id": "61a4c672113c0c34ad9cb51a",
        "blogTitle": "\u6839\u636EViewModel\u81EA\u52A8\u751F\u6210Entity\u8868\u8FBE\u5F0F\u6811\uFF08\u563B\u563B\u563B\u563B\uFF091",
        "introduction": "\u5173\u4E8E\u6839\u636EViewModel\u81EA\u52A8\u751F\u6210Entity\u8868\u8FBE\u5F0F\u6811\u7684\u5C1D\u8BD5\n0.0",
        "blogContents": "\u003Cblockquote\u003E\n\u003Cp\u003E\u6765\u81EA\u539F\u6587\uFF1A\u4ECE\u300A\u590F\u6D1B\u7279\u300B\u5230\u300A\u59D1\u5988\u300B\uFF0C\u5F00\u5FC3\u9EBB\u82B1\u662F\u600E\u4E48\u8D25\u6389\u81EA\u5DF1\u54C1\u724C\u7684\u003C/p\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\u7F51\u7AD9\u7528\u7684Mongodb\uFF0CEntity\u548CViewModel\u5206\u79BB\u003C/p\u003E\n\u003Cp\u003E\u9879\u76EE\u4E2D\u6240\u6709Entity\u90FD\u5B9E\u73B0\u003Ccode\u003EIBaseEntity\u003C/code\u003E\u63A5\u53E3\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic interface IBaseEntity\n{\n\n}\n\n//IBaseEntity \u9ED8\u8BA4\u5B9E\u73B0\npublic class BaseEntity : IBaseEntity\n{\n    [JsonConverter(typeof(ObjectIdConverter))]\n    public ObjectId Id { get; set; }\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u9879\u76EE\u4E2D\u6240\u6709\u7684ViewModel\u90FD\u5B9E\u73B0\u003Ccode\u003EIMapFrom\u0026lt;T\u0026gt;\u003C/code\u003E\u63A5\u53E3\u6216\u8005\u003Ccode\u003EIHaveCustomMapping\u003C/code\u003E\u63A5\u53E3\uFF0C\u76EE\u7684\u662F\u4F7F\u7528AutoMapper\u521B\u5EFAMapper\uFF0C\u8FD9\u91CC\u53EA\u5B9E\u73B0\u003Ccode\u003EIMapFrom\u0026lt;T\u0026gt;\u003C/code\u003E\u7684\u8868\u8FBE\u5F0F\u751F\u6210\uFF08\u003Ca href=\u0022/article/read/612cdc0f6334bcb72527a88d.html\u0022 title=\u0022\u8BE6\u89C1\u0022\u003E\u8BE6\u89C1\u003C/a\u003E\uFF09\u3002\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic interface IMapFrom\u0026lt;T\u0026gt;\n{\n\n}\n\npublic interface IHaveCustomMapping\n{\n    void CreateMappings(MapperConfigurationExpression cfg);\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u9996\u5148\u5B9A\u4E49\u6BD4\u8F83\u7684\u679A\u4E3E\uFF1A\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic enum ExpressComparison\n{\n    /// \u0026lt;summary\u0026gt;\n    /// \u7B49\u4E8E\n    /// \u0026lt;/summary\u0026gt;\n    Equal,\n    /// \u0026lt;summary\u0026gt;\n    /// \u5305\u542B\n    /// \u0026lt;/summary\u0026gt;\n    Contains,\n    /// \u0026lt;summary\u0026gt;\n    /// \u4E0D\u7B49\u4E8E\n    /// \u0026lt;/summary\u0026gt;\n    NoEqual,\n    /// \u0026lt;summary\u0026gt;\n    /// \u5927\u4E8E\n    /// \u0026lt;/summary\u0026gt;\n    Gt,\n    /// \u0026lt;summary\u0026gt;\n    /// \u5C0F\u4E8E\n    /// \u0026lt;/summary\u0026gt;\n    Lt,\n    /// \u0026lt;summary\u0026gt;\n    /// \u5927\u4E8E\u6216\u7B49\u4E8E\n    /// \u0026lt;/summary\u0026gt;\n    GtOrEqual,\n    /// \u0026lt;summary\u0026gt;\n    /// \u5C0F\u4E8E\u6216\u7B49\u4E8E\n    /// \u0026lt;/summary\u0026gt;\n    LtOrEqual,\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u81EA\u5B9A\u4E49\u89C4\u5219\n    /// \u0026lt;/summary\u0026gt;\n    Custom\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u518D\u5B9A\u4E49\u7279\u6027\uFF0C\u7528\u6765\u6807\u6CE8\uFF08\u003Ccode\u003EAttribute\u003C/code\u003E\uFF09ViewModel\u4E2D\u9700\u8981\u5728Entity\u4E2D\u6BD4\u8F83\u7684\u5C5E\u6027\uFF08\u003Ccode\u003EProperty\u003C/code\u003E\uFF09\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003E//\u53EA\u80FD\u6807\u6CE8\u4E0E\u5C5E\u6027\u4E0A\n[AttributeUsage(AttributeTargets.Property)]\npublic class ViewModelLabelAttribute:Attribute\n{\n    public ExpressComparison Comparison { get; private set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u751F\u6210\u8868\u8FBE\u5F0F\u6811\uFF0C\u9700\u8981\u6BD4\u8F83\u7684\u65B9\u5F0F\n    /// \u0026lt;/summary\u0026gt;\n    /// \u0026lt;param name=\u0026quot;expressComparison\u0026quot;\u0026gt;\u6BD4\u8F83\u65B9\u5F0F\u0026lt;/param\u0026gt;\n    public ViewModelLabelAttribute(ExpressComparison expressComparison)\n    {\n        Comparison = expressComparison;\n    }\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u5904\u7406\u9700\u8981\u67E5\u8BE2\u7684\u5B57\u6BB5\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Eclass QueryField\n{\n    //ViewModel\u4E0A\u6807\u6CE8\u7684\u6BD4\u8F83\u65B9\u5F0F\n    public ViewModelLabelAttribute Label { get; set; }\n\n    //\u6BD4\u8F83\u7684\u5C5E\u6027\u3002\u56E0\u4E3A\u662F\u9ED8\u8BA4\u65B9\u5F0F\uFF0C\u6240\u4EE5ViewModel\u548CEntity\u4E0A\u7684\u5C5E\u6027\u7C7B\u578B\u5E94\u8BE5\u4E00\u81F4\n    public PropertyInfo Property { get; set; }\n\n    //\u6BD4\u8F83\u7684\u503C\n    public object Value { get; set; }\n\n    //\u5904\u7406\u5404\u79CD\u6BD4\u8F83\u65B9\u5F0F\n    Expression HandleField(ParameterExpression parameter)\n    {\n        //\u5982\u679C\u9700\u8981\u6BD4\u8F83\u7684\u503C\u4E3Anull\uFF0C\u90A3\u4E48\u8FD4\u56DEEmpty\u8868\u8FBE\u5F0F\n        if (Value == null) return Expression.Empty();\n        //\u7EA6\u5B9A\u5982\u679C\u9700\u8981\u6BD4\u8F83\u7684\u503C\u662F\u679A\u4E3E\u7C7B\u578B\uFF0C\u4F46\u662F\u503C\u4E3A-1\u7684\u60C5\u51B5\u4E0B\uFF0C\u8FC7\u6EE4\u6389\n        if (Property.PropertyType.IsEnum \u0026amp;\u0026amp; Convert.ToInt32(Value) == -1)\n            return Expression.Empty();\n        //\u5C5E\u6027\u6210\u5458\u8868\u8FBE\u5F0F\n        var memberExpr = Expression.Property(parameter, Property);\n        switch (Label.Comparison)\n        {\n            //\u76F8\u7B49\u7684\u6BD4\u8F83\n            case ExpressComparison.Equal:\n                return Expression.Equal(memberExpr, Expression.Constant(Value));\n            //\u5927\u4E8E\n            case ExpressComparison.Gt:\n                return Expression.GreaterThan(memberExpr, Expression.Constant(Value));\n            //\u5927\u4E8E\u6216\u8005\u7B49\u4E8E\n            case ExpressComparison.GtOrEqual:\n                return Expression.GreaterThanOrEqual(memberExpr, Expression.Constant(Value));\n            //\u5C0F\u4E8E\n            case ExpressComparison.Lt:\n                return Expression.LessThan(memberExpr, Expression.Constant(Value));\n            //\u5C0F\u4E8E\u6216\u8005\u7B49\u4E8E\n            case ExpressComparison.LtOrEqual:\n                return Expression.LessThanOrEqual(memberExpr, Expression.Constant(Value));\n            //\u4E0D\u7B49\u4E8E\n            case ExpressComparison.NoEqual:\n                return Expression.NotEqual(memberExpr, Expression.Constant(Value));\n            //\u5305\u542B\n            case ExpressComparison.Contains:\n                //\u5982\u679C\u6BD4\u8F83\u7684\u7C7B\u578B\u662Fstring\u7C7B\u578B\uFF0C\u90A3\u4E48\u53CD\u5C04\u83B7\u53D6string\u7C7B\u578B\u7684Contains\u65B9\u6CD5\uFF0C\u751F\u6210\u8868\u8FBE\u5F0F\n                if (Property.PropertyType == typeof(string) \u0026amp;\u0026amp; Value is string)\n                {\n                    var containsMethod = typeof(string).GetMethod(\u0026quot;Contains\u0026quot;, new[] { typeof(string) });\n                    if (containsMethod != null)\n                    {\n                        return Expression.Call(memberExpr, containsMethod, Expression.Constant(Value));\n                    }\n                }\n                //\u5982\u679C\u6BD4\u8F83\u7684\u7C7B\u578B\u662F\u96C6\u5408\uFF0C\u90A3\u4E48\u53CD\u5C04\u83B7\u53D6linq\u4E2D\u7684Contains\u65B9\u6CD5\uFF0C\u751F\u6210\u8868\u8FBE\u5F0F\n                if (typeof(IEnumerable).IsAssignableFrom(Property.PropertyType))\n                {\n                    var containsMethod = typeof(Enumerable)\n                        .GetMethods(BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)\n                        .FirstOrDefault(x =\u0026gt;\n                            x.Name == \u0026quot;Contains\u0026quot; \u0026amp;\u0026amp; x.ReturnType == typeof(bool) \u0026amp;\u0026amp;\n                            x.GetParameters().Length == 2);\n\n                    if (containsMethod != null)\n                    {\n                        containsMethod = containsMethod.MakeGenericMethod(Value.GetType());\n                        return Expression.Call(containsMethod, memberExpr, Expression.Constant(Value));\n                    }\n                }\n                //Todo \u6682\u672A\u5B9E\u73B0\n                throw new NotImplementedException(\u0026quot;string\u3001IEnumerable\u4EE5\u5916\u7C7B\u578B\u7684Contains\u8868\u8FBE\u5F0F\u672A\u5B9E\u73B0\uFF01\u0026quot;);\n            case ExpressComparison.Custom:\n                //Todo \u6682\u672A\u5B9E\u73B0\n                throw new NotImplementedException(\u0026quot;\u6682\u65E0\u81EA\u5B9A\u4E49\u5B9E\u73B0\u0026quot;);\n        }\n        //\u9ED8\u8BA4\u4E3AEmpty\u8868\u8FBE\u5F0F\n        return Expression.Empty();\n    }\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u6269\u5C55\u4E00\u4E2AViewMode\u7684\u65B9\u6CD5\uFF0C\u6765\u751F\u6210Entity\u7C7B\u578B\u7684\u8868\u8FBE\u5F0F\u6811\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003E/*\n* TEntity\uFF0C\u6CDB\u578B\uFF0CEntity\u7684\u7C7B\u578B\n* IMapForm\u0026lt;TEntity\u0026gt;\uFF0CViewModel\u7684\u7C7B\u578B\uFF0CViewModel\u5B9E\u73B0\u4E86IMapForm\u0026lt;IBaseEntiy\u0026gt;\u63A5\u53E3\n*/\npublic static Expression\u0026lt;Func\u0026lt;TEntity, bool\u0026gt;\u0026gt; GenerateExpressTree\u0026lt;TEntity\u0026gt;(this IMapFrom\u0026lt;TEntity\u0026gt; mapFrom)\n    where TEntity : IBaseEntity, new()\n{\n    //\u8868\u8FBE\u5F0F\u6811\u5F62\u53C2\n    var parameter = Expression.Parameter(typeof(TEntity), \u0026quot;__q\u0026quot;);\n    //\u83B7\u53D6ViewModel\u7684\u6240\u6709\u5C5E\u6027\n    var queryFieldsExpression = (from x in mapFrom.GetType().GetProperties()\n        //\u83B7\u53D6\u5C5E\u6027\u6240\u6807\u6CE8\u7684ViewModelLabelAttribute\u7279\u6027\n        let attr = x.GetCustomAttribute\u0026lt;ViewModelLabelAttribute\u0026gt;()\n        where attr != null //\u8FC7\u6EE4\u6389\u6CA1\u6709\u6807\u6CE8\u7684\u7279\u6027\n        let field = new QueryField\n        {\n            Label = attr,//\u7279\u6027\n            Property = typeof(TEntity).GetProperty(x.Name),//\u5C5E\u6027\n            Value = x.GetValue(mapFrom)//\u5C5E\u6027\u503C\n        }\n        //\u5904\u7406\u67E5\u8BE2\u5B57\u6BB5\n        select field.HandleField(parameter)).Where(x =\u0026gt; x.NodeType != ExpressionType.Default).ToList();\n    //\u521B\u5EFA\u4E00\u4E2A\u9ED8\u8BA4\u8868\u8FBE\u5F0F\u6811\n    var expression =\n        (Expression)Expression\n            .Constant(true);\n    //\u904D\u5386\u6240\u6709\u9700\u8981\u67E5\u8BE2\u7684\u5B57\u6BB5\n    foreach (var expr in queryFieldsExpression)\n    {\n        //\u7B2C\u4E00\u4E2A\u8868\u8FBE\u5F0F\u6811\u8282\u70B9\u8D4B\u503C\u7ED9expression\n        if (queryFieldsExpression.IndexOf(expr) == 0)\n        {\n            expression = expr;\n            continue;\n        }\n        //\u5176\u4F59\u8868\u8FBE\u5F0F\u6811\u8282\u70B9\u4EE5 \u0026amp;\u0026amp; \u5F62\u5F0F\u751F\u6210\n        expression = Expression.AndAlso(expression, expr);\n    }\n    //\u751F\u6210Lambda\u8868\u8FBE\u5F0F\u6811\n    return Expression.Lambda\u0026lt;Func\u0026lt;TEntity, bool\u0026gt;\u0026gt;(expression, parameter);\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u5355\u5143\u6D4B\u8BD5\u003C/p\u003E\n\u003Cp\u003E\u5B9A\u4E49Entity\u548CViewModel\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic enum Sex\n{\n    Man,\n    Wuman\n}\n\npublic class VmUser : IMapFrom\u0026lt;UserTest\u0026gt;\n{\n    [ViewModelLabel(ExpressComparison.Equal)]\n    public string Id { get; set; }\n\n    [ViewModelLabel(ExpressComparison.Contains)]\n    public string Name { get; set; }\n\n    public string Avatar { get; set; }\n\n    [ViewModelLabel(ExpressComparison.Equal)]\n    public Sex Sex { get; set; }\n\n    [ViewModelLabel(ExpressComparison.Contains)]\n    public string Groups { get; set; }\n}\n\npublic class UserTest : IBaseEntity\n{\n    public string Id { get; set; }\n\n    public string Name { get; set; }\n\n    public string Avatar { get; set; }\n\n    public Sex Sex { get; set; }\n\n    public string[] Groups { get; set; }\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u76F4\u63A5\u4ECE\u5185\u5B58\u4ECE\u52A0\u8F7D\u76F8\u5173\u6570\u636E\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Evar list = new List\u0026lt;UserTest\u0026gt;\n{\n    new UserTest\n    {\n        Avatar = \u0026quot;http://localhost:9527/images/laola.png\u0026quot;,\n        Id = \u0026quot;pengqian\u0026quot;,\n        Name = \u0026quot;\u5F6D\u8FC1\u0026quot;,\n        Sex = Sex.Man,\n        Groups = new[] {\u0026quot;111\u0026quot;, \u0026quot;222\u0026quot;, \u0026quot;333\u0026quot;}\n    },\n    new UserTest\n    {\n        Avatar = \u0026quot;http://localhost:9527/images/laola.png\u0026quot;,\n        Id = \u0026quot;pengqian\u0026quot;,\n        Name = \u0026quot;dpz\u0026quot;,\n        Sex = Sex.Man,\n        Groups = new[] {\u0026quot;444\u0026quot;, \u0026quot;555\u0026quot;, \u0026quot;666\u0026quot;}\n    },\n    new UserTest\n    {\n        Avatar = \u0026quot;http://localhost:9527/images/laola.png\u0026quot;,\n        Id = \u0026quot;xx\u0026quot;,\n        Name = \u0026quot;xx\u0026quot;,\n        Sex = Sex.Wuman,\n        Groups = new[] {\u0026quot;777\u0026quot;, \u0026quot;888\u0026quot;, \u0026quot;999\u0026quot;}\n    }\n};\n\nvar viewModel = new VmUser\n{\n    Avatar = \u0026quot;http://localhost:9527/images/laola.png\u0026quot;,\n    Id = \u0026quot;pengqian\u0026quot;,\n    Name = \u0026quot;d\u0026quot;,\n    Sex = Sex.Man,\n    Groups = \u0026quot;666\u0026quot;\n};\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u5355\u5143\u6D4B\u8BD5\u65B9\u6CD5\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003E[TestMethod]\npublic void \u751F\u6210\u8868\u8FBE\u5F0F\u6811\u5355\u5143\u6D4B\u8BD5()\n{\n    var expr = (Expression\u0026lt;Func\u0026lt;UserTest, bool\u0026gt;\u0026gt;) viewModel.GenerateExpressTree();\n    var result = list.Where(expr.Compile()).ToList();\n    Assert.IsTrue(result.Count \u0026gt; 0);\n    result.ForEach(x =\u0026gt; Console.WriteLine($\u0026quot;Avatar:{x.Avatar},Id:{x.Id},Name:{x.Name},Sex:{x.Sex},Group:{string.Join(\u0026quot;-\u0026quot;,x.Group)}\u0026quot;));\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Eoutput:\nAvatar:http://localhost:9527/images/laola.png,Id:pengqian,Name:dpz,Sex:Man,Group:444-555-666\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u7ED3\u8BED\uFF1A\u5F53\u7136\u8FD9\u53EA\u662F\u4E00\u4E2A\u5C1D\u8BD5\uFF0C\u4E00\u4E2A\u601D\u8DEF\uFF0C\u4E5F\u53EF\u4EE5\u6709\u5176\u5B83\u5B9E\u73B0\u65B9\u5F0F\uFF0C\u6BD4\u5982\u4F7F\u7528\u6A21\u677F\u4E4B\u7C7B\u7684\u5B9E\u73B0\u003C/p\u003E\n",
        "mainImage": null,
        "commentCount": 0,
        "viewCount": 35,
        "tag": "C#",
        "images": [],
        "markdown": "\u003E \u6765\u81EA\u539F\u6587\uFF1A\u4ECE\u300A\u590F\u6D1B\u7279\u300B\u5230\u300A\u59D1\u5988\u300B\uFF0C\u5F00\u5FC3\u9EBB\u82B1\u662F\u600E\u4E48\u8D25\u6389\u81EA\u5DF1\u54C1\u724C\u7684\n\n\u7F51\u7AD9\u7528\u7684Mongodb\uFF0CEntity\u548CViewModel\u5206\u79BB\n\n\u9879\u76EE\u4E2D\u6240\u6709Entity\u90FD\u5B9E\u73B0\u0060IBaseEntity\u0060\u63A5\u53E3\n\n\n\u0060\u0060\u0060csharp\npublic interface IBaseEntity\n{\n\n}\n\n//IBaseEntity \u9ED8\u8BA4\u5B9E\u73B0\npublic class BaseEntity : IBaseEntity\n{\n    [JsonConverter(typeof(ObjectIdConverter))]\n    public ObjectId Id { get; set; }\n}\n\u0060\u0060\u0060\n\n\u9879\u76EE\u4E2D\u6240\u6709\u7684ViewModel\u90FD\u5B9E\u73B0\u0060IMapFrom\u003CT\u003E\u0060\u63A5\u53E3\u6216\u8005\u0060IHaveCustomMapping\u0060\u63A5\u53E3\uFF0C\u76EE\u7684\u662F\u4F7F\u7528AutoMapper\u521B\u5EFAMapper\uFF0C\u8FD9\u91CC\u53EA\u5B9E\u73B0\u0060IMapFrom\u003CT\u003E\u0060\u7684\u8868\u8FBE\u5F0F\u751F\u6210\uFF08[\u8BE6\u89C1](/article/read/612cdc0f6334bcb72527a88d.html \u0022\u8BE6\u89C1\u0022)\uFF09\u3002\n\n\n\u0060\u0060\u0060csharp\npublic interface IMapFrom\u003CT\u003E\n{\n\n}\n\npublic interface IHaveCustomMapping\n{\n    void CreateMappings(MapperConfigurationExpression cfg);\n}\n\u0060\u0060\u0060\n\n\u9996\u5148\u5B9A\u4E49\u6BD4\u8F83\u7684\u679A\u4E3E\uFF1A\n\n\n\u0060\u0060\u0060csharp\npublic enum ExpressComparison\n{\n    /// \u003Csummary\u003E\n    /// \u7B49\u4E8E\n    /// \u003C/summary\u003E\n    Equal,\n    /// \u003Csummary\u003E\n    /// \u5305\u542B\n    /// \u003C/summary\u003E\n    Contains,\n    /// \u003Csummary\u003E\n    /// \u4E0D\u7B49\u4E8E\n    /// \u003C/summary\u003E\n    NoEqual,\n    /// \u003Csummary\u003E\n    /// \u5927\u4E8E\n    /// \u003C/summary\u003E\n    Gt,\n    /// \u003Csummary\u003E\n    /// \u5C0F\u4E8E\n    /// \u003C/summary\u003E\n    Lt,\n    /// \u003Csummary\u003E\n    /// \u5927\u4E8E\u6216\u7B49\u4E8E\n    /// \u003C/summary\u003E\n    GtOrEqual,\n    /// \u003Csummary\u003E\n    /// \u5C0F\u4E8E\u6216\u7B49\u4E8E\n    /// \u003C/summary\u003E\n    LtOrEqual,\n\n    /// \u003Csummary\u003E\n    /// \u81EA\u5B9A\u4E49\u89C4\u5219\n    /// \u003C/summary\u003E\n    Custom\n}\n\u0060\u0060\u0060\n\n\u518D\u5B9A\u4E49\u7279\u6027\uFF0C\u7528\u6765\u6807\u6CE8\uFF08\u0060Attribute\u0060\uFF09ViewModel\u4E2D\u9700\u8981\u5728Entity\u4E2D\u6BD4\u8F83\u7684\u5C5E\u6027\uFF08\u0060Property\u0060\uFF09\n\n\n\u0060\u0060\u0060csharp\n//\u53EA\u80FD\u6807\u6CE8\u4E0E\u5C5E\u6027\u4E0A\n[AttributeUsage(AttributeTargets.Property)]\npublic class ViewModelLabelAttribute:Attribute\n{\n    public ExpressComparison Comparison { get; private set; }\n\n    /// \u003Csummary\u003E\n    /// \u751F\u6210\u8868\u8FBE\u5F0F\u6811\uFF0C\u9700\u8981\u6BD4\u8F83\u7684\u65B9\u5F0F\n    /// \u003C/summary\u003E\n    /// \u003Cparam name=\u0022expressComparison\u0022\u003E\u6BD4\u8F83\u65B9\u5F0F\u003C/param\u003E\n    public ViewModelLabelAttribute(ExpressComparison expressComparison)\n    {\n        Comparison = expressComparison;\n    }\n}\n\u0060\u0060\u0060\n\n\u5904\u7406\u9700\u8981\u67E5\u8BE2\u7684\u5B57\u6BB5\n\n\n\u0060\u0060\u0060csharp\nclass QueryField\n{\n    //ViewModel\u4E0A\u6807\u6CE8\u7684\u6BD4\u8F83\u65B9\u5F0F\n    public ViewModelLabelAttribute Label { get; set; }\n\n    //\u6BD4\u8F83\u7684\u5C5E\u6027\u3002\u56E0\u4E3A\u662F\u9ED8\u8BA4\u65B9\u5F0F\uFF0C\u6240\u4EE5ViewModel\u548CEntity\u4E0A\u7684\u5C5E\u6027\u7C7B\u578B\u5E94\u8BE5\u4E00\u81F4\n    public PropertyInfo Property { get; set; }\n\n    //\u6BD4\u8F83\u7684\u503C\n    public object Value { get; set; }\n\n    //\u5904\u7406\u5404\u79CD\u6BD4\u8F83\u65B9\u5F0F\n    Expression HandleField(ParameterExpression parameter)\n    {\n        //\u5982\u679C\u9700\u8981\u6BD4\u8F83\u7684\u503C\u4E3Anull\uFF0C\u90A3\u4E48\u8FD4\u56DEEmpty\u8868\u8FBE\u5F0F\n        if (Value == null) return Expression.Empty();\n        //\u7EA6\u5B9A\u5982\u679C\u9700\u8981\u6BD4\u8F83\u7684\u503C\u662F\u679A\u4E3E\u7C7B\u578B\uFF0C\u4F46\u662F\u503C\u4E3A-1\u7684\u60C5\u51B5\u4E0B\uFF0C\u8FC7\u6EE4\u6389\n        if (Property.PropertyType.IsEnum \u0026\u0026 Convert.ToInt32(Value) == -1)\n            return Expression.Empty();\n        //\u5C5E\u6027\u6210\u5458\u8868\u8FBE\u5F0F\n        var memberExpr = Expression.Property(parameter, Property);\n        switch (Label.Comparison)\n        {\n            //\u76F8\u7B49\u7684\u6BD4\u8F83\n            case ExpressComparison.Equal:\n                return Expression.Equal(memberExpr, Expression.Constant(Value));\n            //\u5927\u4E8E\n            case ExpressComparison.Gt:\n                return Expression.GreaterThan(memberExpr, Expression.Constant(Value));\n            //\u5927\u4E8E\u6216\u8005\u7B49\u4E8E\n            case ExpressComparison.GtOrEqual:\n                return Expression.GreaterThanOrEqual(memberExpr, Expression.Constant(Value));\n            //\u5C0F\u4E8E\n            case ExpressComparison.Lt:\n                return Expression.LessThan(memberExpr, Expression.Constant(Value));\n            //\u5C0F\u4E8E\u6216\u8005\u7B49\u4E8E\n            case ExpressComparison.LtOrEqual:\n                return Expression.LessThanOrEqual(memberExpr, Expression.Constant(Value));\n            //\u4E0D\u7B49\u4E8E\n            case ExpressComparison.NoEqual:\n                return Expression.NotEqual(memberExpr, Expression.Constant(Value));\n            //\u5305\u542B\n            case ExpressComparison.Contains:\n                //\u5982\u679C\u6BD4\u8F83\u7684\u7C7B\u578B\u662Fstring\u7C7B\u578B\uFF0C\u90A3\u4E48\u53CD\u5C04\u83B7\u53D6string\u7C7B\u578B\u7684Contains\u65B9\u6CD5\uFF0C\u751F\u6210\u8868\u8FBE\u5F0F\n                if (Property.PropertyType == typeof(string) \u0026\u0026 Value is string)\n                {\n                    var containsMethod = typeof(string).GetMethod(\u0022Contains\u0022, new[] { typeof(string) });\n                    if (containsMethod != null)\n                    {\n                        return Expression.Call(memberExpr, containsMethod, Expression.Constant(Value));\n                    }\n                }\n                //\u5982\u679C\u6BD4\u8F83\u7684\u7C7B\u578B\u662F\u96C6\u5408\uFF0C\u90A3\u4E48\u53CD\u5C04\u83B7\u53D6linq\u4E2D\u7684Contains\u65B9\u6CD5\uFF0C\u751F\u6210\u8868\u8FBE\u5F0F\n                if (typeof(IEnumerable).IsAssignableFrom(Property.PropertyType))\n                {\n                    var containsMethod = typeof(Enumerable)\n                        .GetMethods(BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)\n                        .FirstOrDefault(x =\u003E\n                            x.Name == \u0022Contains\u0022 \u0026\u0026 x.ReturnType == typeof(bool) \u0026\u0026\n                            x.GetParameters().Length == 2);\n\n                    if (containsMethod != null)\n                    {\n                        containsMethod = containsMethod.MakeGenericMethod(Value.GetType());\n                        return Expression.Call(containsMethod, memberExpr, Expression.Constant(Value));\n                    }\n                }\n                //Todo \u6682\u672A\u5B9E\u73B0\n                throw new NotImplementedException(\u0022string\u3001IEnumerable\u4EE5\u5916\u7C7B\u578B\u7684Contains\u8868\u8FBE\u5F0F\u672A\u5B9E\u73B0\uFF01\u0022);\n            case ExpressComparison.Custom:\n                //Todo \u6682\u672A\u5B9E\u73B0\n                throw new NotImplementedException(\u0022\u6682\u65E0\u81EA\u5B9A\u4E49\u5B9E\u73B0\u0022);\n        }\n        //\u9ED8\u8BA4\u4E3AEmpty\u8868\u8FBE\u5F0F\n        return Expression.Empty();\n    }\n}\n\u0060\u0060\u0060\n\n\u6269\u5C55\u4E00\u4E2AViewMode\u7684\u65B9\u6CD5\uFF0C\u6765\u751F\u6210Entity\u7C7B\u578B\u7684\u8868\u8FBE\u5F0F\u6811\n\n\n\u0060\u0060\u0060csharp\n/*\n* TEntity\uFF0C\u6CDB\u578B\uFF0CEntity\u7684\u7C7B\u578B\n* IMapForm\u003CTEntity\u003E\uFF0CViewModel\u7684\u7C7B\u578B\uFF0CViewModel\u5B9E\u73B0\u4E86IMapForm\u003CIBaseEntiy\u003E\u63A5\u53E3\n*/\npublic static Expression\u003CFunc\u003CTEntity, bool\u003E\u003E GenerateExpressTree\u003CTEntity\u003E(this IMapFrom\u003CTEntity\u003E mapFrom)\n    where TEntity : IBaseEntity, new()\n{\n    //\u8868\u8FBE\u5F0F\u6811\u5F62\u53C2\n    var parameter = Expression.Parameter(typeof(TEntity), \u0022__q\u0022);\n    //\u83B7\u53D6ViewModel\u7684\u6240\u6709\u5C5E\u6027\n    var queryFieldsExpression = (from x in mapFrom.GetType().GetProperties()\n        //\u83B7\u53D6\u5C5E\u6027\u6240\u6807\u6CE8\u7684ViewModelLabelAttribute\u7279\u6027\n        let attr = x.GetCustomAttribute\u003CViewModelLabelAttribute\u003E()\n        where attr != null //\u8FC7\u6EE4\u6389\u6CA1\u6709\u6807\u6CE8\u7684\u7279\u6027\n        let field = new QueryField\n        {\n            Label = attr,//\u7279\u6027\n            Property = typeof(TEntity).GetProperty(x.Name),//\u5C5E\u6027\n            Value = x.GetValue(mapFrom)//\u5C5E\u6027\u503C\n        }\n        //\u5904\u7406\u67E5\u8BE2\u5B57\u6BB5\n        select field.HandleField(parameter)).Where(x =\u003E x.NodeType != ExpressionType.Default).ToList();\n    //\u521B\u5EFA\u4E00\u4E2A\u9ED8\u8BA4\u8868\u8FBE\u5F0F\u6811\n    var expression =\n        (Expression)Expression\n            .Constant(true);\n    //\u904D\u5386\u6240\u6709\u9700\u8981\u67E5\u8BE2\u7684\u5B57\u6BB5\n    foreach (var expr in queryFieldsExpression)\n    {\n        //\u7B2C\u4E00\u4E2A\u8868\u8FBE\u5F0F\u6811\u8282\u70B9\u8D4B\u503C\u7ED9expression\n        if (queryFieldsExpression.IndexOf(expr) == 0)\n        {\n            expression = expr;\n            continue;\n        }\n        //\u5176\u4F59\u8868\u8FBE\u5F0F\u6811\u8282\u70B9\u4EE5 \u0026\u0026 \u5F62\u5F0F\u751F\u6210\n        expression = Expression.AndAlso(expression, expr);\n    }\n    //\u751F\u6210Lambda\u8868\u8FBE\u5F0F\u6811\n    return Expression.Lambda\u003CFunc\u003CTEntity, bool\u003E\u003E(expression, parameter);\n}\n\u0060\u0060\u0060\n\n\u5355\u5143\u6D4B\u8BD5\n\n\u5B9A\u4E49Entity\u548CViewModel\n\n\n\u0060\u0060\u0060csharp\npublic enum Sex\n{\n    Man,\n    Wuman\n}\n\npublic class VmUser : IMapFrom\u003CUserTest\u003E\n{\n    [ViewModelLabel(ExpressComparison.Equal)]\n    public string Id { get; set; }\n\n    [ViewModelLabel(ExpressComparison.Contains)]\n    public string Name { get; set; }\n\n    public string Avatar { get; set; }\n\n    [ViewModelLabel(ExpressComparison.Equal)]\n    public Sex Sex { get; set; }\n\n    [ViewModelLabel(ExpressComparison.Contains)]\n    public string Groups { get; set; }\n}\n\npublic class UserTest : IBaseEntity\n{\n    public string Id { get; set; }\n\n    public string Name { get; set; }\n\n    public string Avatar { get; set; }\n\n    public Sex Sex { get; set; }\n\n    public string[] Groups { get; set; }\n}\n\u0060\u0060\u0060\n\n\u76F4\u63A5\u4ECE\u5185\u5B58\u4ECE\u52A0\u8F7D\u76F8\u5173\u6570\u636E\n\n\n\u0060\u0060\u0060csharp\nvar list = new List\u003CUserTest\u003E\n{\n    new UserTest\n    {\n        Avatar = \u0022http://localhost:9527/images/laola.png\u0022,\n        Id = \u0022pengqian\u0022,\n        Name = \u0022\u5F6D\u8FC1\u0022,\n        Sex = Sex.Man,\n        Groups = new[] {\u0022111\u0022, \u0022222\u0022, \u0022333\u0022}\n    },\n    new UserTest\n    {\n        Avatar = \u0022http://localhost:9527/images/laola.png\u0022,\n        Id = \u0022pengqian\u0022,\n        Name = \u0022dpz\u0022,\n        Sex = Sex.Man,\n        Groups = new[] {\u0022444\u0022, \u0022555\u0022, \u0022666\u0022}\n    },\n    new UserTest\n    {\n        Avatar = \u0022http://localhost:9527/images/laola.png\u0022,\n        Id = \u0022xx\u0022,\n        Name = \u0022xx\u0022,\n        Sex = Sex.Wuman,\n        Groups = new[] {\u0022777\u0022, \u0022888\u0022, \u0022999\u0022}\n    }\n};\n\nvar viewModel = new VmUser\n{\n    Avatar = \u0022http://localhost:9527/images/laola.png\u0022,\n    Id = \u0022pengqian\u0022,\n    Name = \u0022d\u0022,\n    Sex = Sex.Man,\n    Groups = \u0022666\u0022\n};\n\u0060\u0060\u0060\n\n\u5355\u5143\u6D4B\u8BD5\u65B9\u6CD5\n\n\n\u0060\u0060\u0060csharp\n[TestMethod]\npublic void \u751F\u6210\u8868\u8FBE\u5F0F\u6811\u5355\u5143\u6D4B\u8BD5()\n{\n    var expr = (Expression\u003CFunc\u003CUserTest, bool\u003E\u003E) viewModel.GenerateExpressTree();\n    var result = list.Where(expr.Compile()).ToList();\n    Assert.IsTrue(result.Count \u003E 0);\n    result.ForEach(x =\u003E Console.WriteLine($\u0022Avatar:{x.Avatar},Id:{x.Id},Name:{x.Name},Sex:{x.Sex},Group:{string.Join(\u0022-\u0022,x.Group)}\u0022));\n}\n\u0060\u0060\u0060\n\n\n\u0060\u0060\u0060csharp\noutput:\nAvatar:http://localhost:9527/images/laola.png,Id:pengqian,Name:dpz,Sex:Man,Group:444-555-666\n\u0060\u0060\u0060\n\n\u7ED3\u8BED\uFF1A\u5F53\u7136\u8FD9\u53EA\u662F\u4E00\u4E2A\u5C1D\u8BD5\uFF0C\u4E00\u4E2A\u601D\u8DEF\uFF0C\u4E5F\u53EF\u4EE5\u6709\u5176\u5B83\u5B9E\u73B0\u65B9\u5F0F\uFF0C\u6BD4\u5982\u4F7F\u7528\u6A21\u677F\u4E4B\u7C7B\u7684\u5B9E\u73B0\n",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2022-01-17T13:02:56Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": null,
        "createTime": "2021-11-29T20:24:18.639+08:00",
        "lastUpdateTime": "2022-01-17T21:03:29.257+08:00"
    }, {
        "id": "61a4c5fd113c0c34ad9cb519",
        "blogTitle": "asp.net core\u4E2D\u4F7F\u7528AutoMapper\u81EA\u52A8\u521B\u5EFAMapper",
        "introduction": "\u6BCF\u6B21\u5728ViewModel\u8F6C\u6362\u6210Entity\u7C7B\u578B\u6216\u8005Entity\u8F6C\u5230ViewModel\u7684\u65F6\u5019\u90FD\u8981\u624B\u52A8\u521B\u5EFAMapper\uFF0C\u6240\u4EE5\u6709\u4E00\u4E2A\u60F3\u6CD5\uFF0C\u5728asp.net core\u4E2D\u4F7F\u7528AutoMapper\u81EA\u52A8\u521B\u5EFAMapper\u3002",
        "blogContents": "\u003Cp\u003E\u5728\u6211\u7684\u9879\u76EE\u4E2D\u7EA6\u5B9A\uFF0C\u7C7B\u578B\u3001\u5C5E\u6027\u540D\u79F0\u4E00\u81F4\u7684ViewModel\u90FD\u5B9E\u73B0\u003Ccode\u003EIMapFrom\u0026lt;T\u0026gt;\u003C/code\u003E\u63A5\u53E3\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic interface IMapFrom\u0026lt;T\u0026gt;\n{\n\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u003Ccode\u003EIMapForm\u0026lt;T\u0026gt;\u003C/code\u003E\u662F\u4E2A\u6CDB\u578B\u63A5\u53E3\uFF0CT\u5C31\u662FEntity\u7684\u5B9E\u9645\u7C7B\u578B\u003C/p\u003E\n\u003Cp\u003E\u4F46\u662FViewModel\u603B\u4F1A\u6709\u548CEntity\u4E0D\u4E00\u81F4\u7684\u5730\u65B9\uFF0C\u6240\u4EE5\u5F53\u6709\u8FD9\u79CD\u60C5\u51B5\u65F6\uFF0C\u5E94\u8BE5\u5B9E\u73B0\u003Ccode\u003EIHaveCustomMapping\u003C/code\u003E\u63A5\u53E3\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic interface IHaveCustomMapping\n{\n    void CreateMappings(MapperConfigurationExpression cfg);\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u5176\u4E2D\u003Ccode\u003EMapperConfigurationExpression\u003C/code\u003E\u4E3AAutoMapper\u63D0\u4F9B\u7684\u914D\u7F6E\u8868\u8FBE\u5F0F\u003C/p\u003E\n\u003Cp\u003E\u5173\u4E8EEntity\uFF0C\u7EA6\u5B9A\u90FD\u5FC5\u987B\u5B9E\u73B0\u003Ccode\u003EIBaseEntiy\u003C/code\u003E\u63A5\u53E3,\u800C\u4E14\u6709\u4E00\u4E2A\u9ED8\u8BA4\u7684\u5B9E\u73B0\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic interface IBaseEntity\n{\n\n}\n\npublic class BaseEntity : IBaseEntity\n{\n    [JsonConverter(typeof(ObjectIdConverter))]\n    public ObjectId Id { get; set; }\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u8FD9\u91CC\u62FF\u65F6\u95F4\u8F74\u6765\u4E3E\u4F8B\u5B50\uFF0C\u5173\u4E8E\u65F6\u95F4\u8F74\u7684Entity\u5B9A\u4E49\uFF1A\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic class Timeline:BaseEntity\n{\n    public string Title { get; set; }\n\n    public string Content { get; set; }\n\n    public DateTime Date { get; set; }\n\n    public string More { get; set; }\n\n    public UserInfo Author { get; set; }    \n\n    public DateTime CreateTime { get; set; }\n\n    public DateTime LastUpdateTime { get; set; }\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u7EE7\u627F\u4E86\u003Ccode\u003EBaseEntity\u003C/code\u003E\uFF0C\u6709Id\u5C5E\u6027\u3002\u800CViewModel\u6CA1\u6709\u7279\u522B\u7684\u9700\u6C42\uFF0C\u6240\u4EE5\u9002\u7528\u7B2C\u4E00\u79CD\u60C5\u51B5(\u65E2\u003Cstrong\u003E\u7EA6\u5B9A\u597D\u7684\u7C7B\u578B\u3001\u5C5E\u6027\u540D\u79F0\u4E00\u81F4\u003C/strong\u003E)\uFF0CViewModel\u76F4\u63A5\u5B9E\u73B0\u003Ccode\u003EIMapFrom\u0026lt;Timeline\u0026gt;\u003C/code\u003E\u63A5\u53E3\uFF1A\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic class VmTimeline:IMapFrom\u0026lt;Timeline\u0026gt;\n{\n    public string Id { get; set; }\n\n    public string Title { get; set; }\n\n    public string Content { get; set; }\n\n    public DateTime Date { get; set; }\n\n    public string More { get; set; }\n\n    public VmUserInfo Author { get; set; }\n\n    public DateTime CreateTime { get; set; }\n\n    public DateTime LastUpdateTime { get; set; }\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u8FD9\u91CC\u770B\u5230Id\u5C5E\u6027\u5E76\u4E0D\u4E00\u81F4\uFF0C\u003Ccode\u003EObjectId\u003C/code\u003E\u7C7B\u578B\u548C\u003Ccode\u003Estring\u003C/code\u003E\u7C7B\u578B\uFF0C\u8FD9\u91CC\u4E5F\u5C5E\u4E8E\u7EA6\u5B9A\uFF0C\u4F1A\u5728\u540E\u7EED\u9ED8\u8BA4\u5904\u7406\u003Cbr\u003E\u5176\u5B83\u8865\u5145\uFF08\u6CE8\u610F\uFF1AUserInfo\u4E0D\u5C5E\u4E8E\u4E25\u683C\u610F\u4E49\u4E0A\u7684Entity\uFF0C\u6240\u4EE5\u6CA1\u6709\u5B9E\u73B0IBaseEntity\u63A5\u53E3\uFF0C\u003Ca href=\u0022/code/Dpz.Core.Public.Entity/User.cs\u0022 title=\u0022\u8BE6\u60C5\u67E5\u770B\u0022\u003E\u8BE6\u60C5\u67E5\u770B\u003C/a\u003E\uFF09\uFF1A\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003E//UserInfo type\npublic class UserInfo\n{\n    public UserInfo()\n    {\n        LastAccessTime = DateTime.Now;\n    }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u8D26\u53F7\n    /// \u0026lt;/summary\u0026gt;\n    public string Id { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u6635\u79F0\n    /// \u0026lt;/summary\u0026gt;\n    public string Name { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u662F\u5426\u542F\u7528\n    /// \u0026lt;/summary\u0026gt;\n    public bool? Enable { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u6700\u540E\u8BBF\u95EE\u65F6\u95F4\n    /// \u0026lt;/summary\u0026gt;\n    public DateTime? LastAccessTime { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u4E2A\u6027\u7B7E\u540D\n    /// \u0026lt;/summary\u0026gt;\n    public string Sign { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u5934\u50CF\n    /// \u0026lt;/summary\u0026gt;\n    public string Avatar { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u6027\u522B\n    /// \u0026lt;/summary\u0026gt;\n    public Sex Sex { get; set; }\n\n    public string Key { get; set; }\n\n    public Permissions? Permissions { get; set; }\n}\n\n// UserInfo view model\npublic class VmUserInfo:IMapFrom\u0026lt;UserInfo\u0026gt;\n{\n\n    public VmUserInfo()\n    {\n        LastAccessTime = DateTime.Now;\n    }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u8D26\u53F7\n    /// \u0026lt;/summary\u0026gt;\n    public string Id { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u6635\u79F0\n    /// \u0026lt;/summary\u0026gt;\n    public string Name { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u6700\u540E\u8BBF\u95EE\u65F6\u95F4\n    /// \u0026lt;/summary\u0026gt;\n    public DateTime? LastAccessTime { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u4E2A\u6027\u7B7E\u540D\n    /// \u0026lt;/summary\u0026gt;\n    public string Sign { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u5934\u50CF\n    /// \u0026lt;/summary\u0026gt;\n    public string Avatar { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u6027\u522B\n    /// \u0026lt;/summary\u0026gt;\n    public Sex Sex { get; set; }\n\n    public Permissions? Permissions { get; set; }\n\n    /// \u0026lt;summary\u0026gt;\n    /// \u662F\u5426\u542F\u7528\n    /// \u0026lt;/summary\u0026gt;\n    public bool? Enable { get; set; }\n\n    public string Key { get; set; }\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u9879\u76EE\u4E2D\u6240\u6709\u7684view model\u90FD\u5728\u547D\u540D\u7A7A\u95F4(namespace)\u003Ccode\u003EDpz.Core.Public.ViewModel\u003C/code\u003E\u4E0B\uFF0C\u6240\u4EE5\u6839\u636E\u8BE5\u547D\u540D\u7A7A\u95F4\u53CD\u5C04\u51FA\u6240\u6709view model\u7684\u7C7B\u578B\uFF0C\u5E76\u521B\u5EFAMapper\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003E//\u83B7\u53D6\u6240\u6709view model\u7C7B\u578B\nvar types = Assembly.Load(\u0026quot;Dpz.Core.Public.ViewModel\u0026quot;).GetExportedTypes();\nvar config = new MapperConfigurationExpression();\n//\u4ECEview model\u4E2D\u8FC7\u6EE4\u51FA\u9ED8\u8BA4\u8F6C\u6362\u89C4\u5219\u7684\u7C7B\u578B\uFF0C\u5373\u5B9E\u73B0\u4E86IMapFrom\u0026lt;\u0026gt;\u63A5\u53E3\u7684\u7C7B\u578B\nvar maps = from x in types\n    from y in x.GetInterfaces()\n    let faceType = y.GetTypeInfo()\n    where faceType.IsGenericType \u0026amp;\u0026amp; y.GetGenericTypeDefinition() == typeof(IMapFrom\u0026lt;\u0026gt;) \u0026amp;\u0026amp;\n          !x.IsAbstract \u0026amp;\u0026amp; !x.IsInterface\n    select new\n    {\n        Source = y.GetGenericArguments()[0],\n        Destination = x\n    };\n//\u521B\u5EFA\u9ED8\u8BA4\u89C4\u5219\u7684Mapper\nforeach (var item in maps)\n{\n    //entity to view model\n    config.CreateMap(item.Source, item.Destination);\n    //view model to entity\n    config.CreateMap(item.Destination, item.Source);\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u90A3\u4E48\u51FA\u73B0\u5C5E\u6027\u540D\u79F0\u3001\u7C7B\u578B\u4E0D\u4E00\u81F4\u7684\u60C5\u51B5\u600E\u4E48\u529E\u5462?\u8FD9\u91CC\u5C31\u9700\u8981\u81EA\u5B9A\u4E49\u8F6C\u6362\u89C4\u5219\u4E86\u3002\u003Cbr\u003E\u6BD4\u5982\u97F3\u4E50Entity\uFF0C\u97F3\u4E50\u65F6\u957F\u662F\u003Ccode\u003Elong?\u003C/code\u003E\u7C7B\u578B\uFF1A\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic class Music:BaseEntity\n{\n    /// \u0026lt;summary\u0026gt;\n    /// \u97F3\u4E50\u65F6\u957F\n    /// \u0026lt;/summary\u0026gt;\n    public long? Duration { get; set; }\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u800C\u97F3\u4E50ViewModel\u4E2D\uFF0C\u97F3\u4E50\u65F6\u957F\u662F\u003Ccode\u003ETimeSpan?\u003C/code\u003E\u7C7B\u578B\uFF0C\u90A3\u4E48\u5C31\u8981\u7EE7\u627F\u003Ccode\u003EIHaveCustomMapping\u003C/code\u003E\u63A5\u53E3\uFF0C\u5B9E\u73B0\u003Ccode\u003ECreateMappings()\u003C/code\u003E\u65B9\u6CD5\u4E86\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic class VmMusic:IHaveCustomMapping\n{\n    public string Id { get; set; }\n    /// \u0026lt;summary\u0026gt;\n    /// \u97F3\u4E50\u65F6\u957F\n    /// \u0026lt;/summary\u0026gt;\n    public TimeSpan? Duration { get; set; }\n\n    public void CreateMappings(MapperConfigurationExpression cfg)\n    {\n        var mapper = new Mapper(new MapperConfiguration(cfg));\n        //view model to entity\n        cfg.CreateMap\u0026lt;VmMusic, Music\u0026gt;().ConvertUsing((viewModel, _) =\u0026gt;\n        {\n            if (viewModel == null) return null;\n            var success = ObjectId.TryParse(viewModel.Id,out var oid);\n            var entity = new Music\n            {\n                Id = success ? oid : ObjectId.Empty,\n                Duration = viewModel.Duration?.Ticks\n            };\n            return entity;\n        });\n        //entity to view model\n        cfg.CreateMap\u0026lt;Music,VmMusic\u0026gt;().ConvertUsing((entity, _) =\u0026gt;\n        {\n            if (entity == null) return null;\n            var viewModel = new VmMusic\n            {\n                Id = entity.Id.ToString(),\n                Duration = entity.Duration.HasValue ? new TimeSpan(entity.Duration.Value) : null\n            };\n            return viewModel;\n        });\n    }\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u7136\u540E\u4ECEview model\u4E2D\u8FC7\u6EE4\u51FA\u5B9E\u73B0\u4E86\u003Ccode\u003EIHaveCustomMapping\u003C/code\u003E\u63A5\u53E3\u7684\u7C7B\u578B\uFF1A\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003E//\u7B5B\u9009\u5B9E\u73B0\u4E86IHaveCustomMapping\u63A5\u53E3\u7684view model\nvar customMaps = from x in types\n    from y in x.GetInterfaces()\n    where typeof(IHaveCustomMapping).IsAssignableFrom(x) \u0026amp;\u0026amp;\n          !x.GetTypeInfo().IsAbstract \u0026amp;\u0026amp;\n          !x.GetTypeInfo().IsInterface\n    select (IHaveCustomMapping) Activator.CreateInstance(x);\n//\u518D\u6267\u884CIHaveCustomMapping\u63A5\u53E3\u7684CreateMappings\u5B9E\u73B0\u65B9\u6CD5\nforeach (var item in customMaps)\n{\n    item.CreateMappings(config);\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u6700\u540E\u5904\u7406\u4E00\u4E0B\u524D\u6587\u63D0\u5230\u7684\u003Ccode\u003EObjectId\u003C/code\u003E\u548C\u003Ccode\u003Estring\u003C/code\u003E\u7C7B\u578B\u7684\u95EE\u9898\uFF0C\u8FD8\u6709mongodb\u7684\u65F6\u95F4\u7C7B\u578B\u5B58\u50A8\u65F6UTC\u65F6\u95F4\uFF0C\u53D6\u503C\u7684\u65F6\u5019\u8F6C\u4E3A\u672C\u5730\u65F6\u95F4\uFF1A\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Econfig.CreateMap\u0026lt;string, ObjectId\u0026gt;().ConstructUsing((x, y) =\u0026gt;\n    !string.IsNullOrEmpty(x) \u0026amp;\u0026amp; ObjectId.TryParse(x, out var oid) ? oid : ObjectId.Empty);\nconfig.CreateMap\u0026lt;DateTime, DateTime\u0026gt;().ConvertUsing((utc, local, context) =\u0026gt;\n{\n    if (local == new DateTime())\n    {\n        if (utc.Kind == DateTimeKind.Utc)\n            return utc.ToLocalTime();\n        return utc;\n    }\n    if (local.Kind == DateTimeKind.Local)\n        return utc.ToUniversalTime();\n    return local;\n});\n\n//\u521B\u5EFAMapper\nvar cfg = new MapperConfiguration(config);\nIMapper mapper = new Mapper(cfg);\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u8FD9\u6837\u5C31\u4E0D\u7528\u6BCF\u6B21view model to entity\u6216\u8005entity to view model\u7684\u65F6\u5019\uFF0C\u90FD\u9700\u8981CreateMapper\u4E86\uFF0C\u003Cbr\u003E\u76F4\u63A5\u8C03\u7528\u003Ccode\u003Emapper.Map\u0026lt;Entity\u0026gt;(viewModel)\u003C/code\u003E||\u003Ccode\u003Emapper.Map\u0026lt;ViewModel\u0026gt;(entity)\u003C/code\u003E\u003C/p\u003E\n",
        "mainImage": null,
        "commentCount": 0,
        "viewCount": 9,
        "tag": "asp.net core",
        "images": [],
        "markdown": "\u5728\u6211\u7684\u9879\u76EE\u4E2D\u7EA6\u5B9A\uFF0C\u7C7B\u578B\u3001\u5C5E\u6027\u540D\u79F0\u4E00\u81F4\u7684ViewModel\u90FD\u5B9E\u73B0\u0060IMapFrom\u003CT\u003E\u0060\u63A5\u53E3\n\u0060\u0060\u0060 csharp\npublic interface IMapFrom\u003CT\u003E\n{\n\n}\n\u0060\u0060\u0060\n\u0060IMapForm\u003CT\u003E\u0060\u662F\u4E2A\u6CDB\u578B\u63A5\u53E3\uFF0CT\u5C31\u662FEntity\u7684\u5B9E\u9645\u7C7B\u578B\n\n\u4F46\u662FViewModel\u603B\u4F1A\u6709\u548CEntity\u4E0D\u4E00\u81F4\u7684\u5730\u65B9\uFF0C\u6240\u4EE5\u5F53\u6709\u8FD9\u79CD\u60C5\u51B5\u65F6\uFF0C\u5E94\u8BE5\u5B9E\u73B0\u0060IHaveCustomMapping\u0060\u63A5\u53E3\n\u0060\u0060\u0060csharp\npublic interface IHaveCustomMapping\n{\n    void CreateMappings(MapperConfigurationExpression cfg);\n}\n\u0060\u0060\u0060\n\n\u5176\u4E2D\u0060MapperConfigurationExpression\u0060\u4E3AAutoMapper\u63D0\u4F9B\u7684\u914D\u7F6E\u8868\u8FBE\u5F0F\n\n\u5173\u4E8EEntity\uFF0C\u7EA6\u5B9A\u90FD\u5FC5\u987B\u5B9E\u73B0\u0060IBaseEntiy\u0060\u63A5\u53E3,\u800C\u4E14\u6709\u4E00\u4E2A\u9ED8\u8BA4\u7684\u5B9E\u73B0\n\u0060\u0060\u0060 csharp\npublic interface IBaseEntity\n{\n\n}\n\npublic class BaseEntity : IBaseEntity\n{\n\t[JsonConverter(typeof(ObjectIdConverter))]\n\tpublic ObjectId Id { get; set; }\n}\n\u0060\u0060\u0060\n\u8FD9\u91CC\u62FF\u65F6\u95F4\u8F74\u6765\u4E3E\u4F8B\u5B50\uFF0C\u5173\u4E8E\u65F6\u95F4\u8F74\u7684Entity\u5B9A\u4E49\uFF1A\n\u0060\u0060\u0060csharp\npublic class Timeline:BaseEntity\n{\n\tpublic string Title { get; set; }\n\t\n\tpublic string Content { get; set; }\n\t\n\tpublic DateTime Date { get; set; }\n\t\n\tpublic string More { get; set; }\n\t\n\tpublic UserInfo Author { get; set; }\t\n\t\n\tpublic DateTime CreateTime { get; set; }\n\t\n\tpublic DateTime LastUpdateTime { get; set; }\n}\n\u0060\u0060\u0060\n\u7EE7\u627F\u4E86\u0060BaseEntity\u0060\uFF0C\u6709Id\u5C5E\u6027\u3002\u800CViewModel\u6CA1\u6709\u7279\u522B\u7684\u9700\u6C42\uFF0C\u6240\u4EE5\u9002\u7528\u7B2C\u4E00\u79CD\u60C5\u51B5(\u65E2**\u7EA6\u5B9A\u597D\u7684\u7C7B\u578B\u3001\u5C5E\u6027\u540D\u79F0\u4E00\u81F4**)\uFF0CViewModel\u76F4\u63A5\u5B9E\u73B0\u0060IMapFrom\u003CTimeline\u003E\u0060\u63A5\u53E3\uFF1A\n\u0060\u0060\u0060csharp\npublic class VmTimeline:IMapFrom\u003CTimeline\u003E\n{\n\tpublic string Id { get; set; }\n\t\n\tpublic string Title { get; set; }\n\t\n\tpublic string Content { get; set; }\n\t\n\tpublic DateTime Date { get; set; }\n\t\n\tpublic string More { get; set; }\n\t\n\tpublic VmUserInfo Author { get; set; }\n\t\n\tpublic DateTime CreateTime { get; set; }\n\t\n\tpublic DateTime LastUpdateTime { get; set; }\n}\n\u0060\u0060\u0060\n\u8FD9\u91CC\u770B\u5230Id\u5C5E\u6027\u5E76\u4E0D\u4E00\u81F4\uFF0C\u0060ObjectId\u0060\u7C7B\u578B\u548C\u0060string\u0060\u7C7B\u578B\uFF0C\u8FD9\u91CC\u4E5F\u5C5E\u4E8E\u7EA6\u5B9A\uFF0C\u4F1A\u5728\u540E\u7EED\u9ED8\u8BA4\u5904\u7406\n\u5176\u5B83\u8865\u5145\uFF08\u6CE8\u610F\uFF1AUserInfo\u4E0D\u5C5E\u4E8E\u4E25\u683C\u610F\u4E49\u4E0A\u7684Entity\uFF0C\u6240\u4EE5\u6CA1\u6709\u5B9E\u73B0IBaseEntity\u63A5\u53E3\uFF0C[\u8BE6\u60C5\u67E5\u770B](/code/Dpz.Core.Public.Entity/User.cs \u0022\u8BE6\u60C5\u67E5\u770B\u0022)\uFF09\uFF1A\n\u0060\u0060\u0060csharp\n//UserInfo type\npublic class UserInfo\n{\n\tpublic UserInfo()\n\t{\n\t\tLastAccessTime = DateTime.Now;\n\t}\n\n\t/// \u003Csummary\u003E\n\t/// \u8D26\u53F7\n\t/// \u003C/summary\u003E\n\tpublic string Id { get; set; }\n\n\t/// \u003Csummary\u003E\n\t/// \u6635\u79F0\n\t/// \u003C/summary\u003E\n\tpublic string Name { get; set; }\n\t\n\t/// \u003Csummary\u003E\n\t/// \u662F\u5426\u542F\u7528\n\t/// \u003C/summary\u003E\n\tpublic bool? Enable { get; set; }\n\n\t/// \u003Csummary\u003E\n\t/// \u6700\u540E\u8BBF\u95EE\u65F6\u95F4\n\t/// \u003C/summary\u003E\n\tpublic DateTime? LastAccessTime { get; set; }\n\n\t/// \u003Csummary\u003E\n\t/// \u4E2A\u6027\u7B7E\u540D\n\t/// \u003C/summary\u003E\n\tpublic string Sign { get; set; }\n\n\t/// \u003Csummary\u003E\n\t/// \u5934\u50CF\n\t/// \u003C/summary\u003E\n\tpublic string Avatar { get; set; }\n\n\t/// \u003Csummary\u003E\n\t/// \u6027\u522B\n\t/// \u003C/summary\u003E\n\tpublic Sex Sex { get; set; }\n\n\tpublic string Key { get; set; }\n\t\n\tpublic Permissions? Permissions { get; set; }\n}\n\n// UserInfo view model\npublic class VmUserInfo:IMapFrom\u003CUserInfo\u003E\n{\n\n\tpublic VmUserInfo()\n\t{\n\t\tLastAccessTime = DateTime.Now;\n\t}\n\n\t/// \u003Csummary\u003E\n\t/// \u8D26\u53F7\n\t/// \u003C/summary\u003E\n\tpublic string Id { get; set; }\n\n\t/// \u003Csummary\u003E\n\t/// \u6635\u79F0\n\t/// \u003C/summary\u003E\n\tpublic string Name { get; set; }\n\n\t/// \u003Csummary\u003E\n\t/// \u6700\u540E\u8BBF\u95EE\u65F6\u95F4\n\t/// \u003C/summary\u003E\n\tpublic DateTime? LastAccessTime { get; set; }\n\n\t/// \u003Csummary\u003E\n\t/// \u4E2A\u6027\u7B7E\u540D\n\t/// \u003C/summary\u003E\n\tpublic string Sign { get; set; }\n\n\t/// \u003Csummary\u003E\n\t/// \u5934\u50CF\n\t/// \u003C/summary\u003E\n\tpublic string Avatar { get; set; }\n\n\t/// \u003Csummary\u003E\n\t/// \u6027\u522B\n\t/// \u003C/summary\u003E\n\tpublic Sex Sex { get; set; }\n\n\tpublic Permissions? Permissions { get; set; }\n\t\n\t/// \u003Csummary\u003E\n\t/// \u662F\u5426\u542F\u7528\n\t/// \u003C/summary\u003E\n\tpublic bool? Enable { get; set; }\n\t\n\tpublic string Key { get; set; }\n}\n\u0060\u0060\u0060\n\u9879\u76EE\u4E2D\u6240\u6709\u7684view model\u90FD\u5728\u547D\u540D\u7A7A\u95F4(namespace)\u0060Dpz.Core.Public.ViewModel\u0060\u4E0B\uFF0C\u6240\u4EE5\u6839\u636E\u8BE5\u547D\u540D\u7A7A\u95F4\u53CD\u5C04\u51FA\u6240\u6709view model\u7684\u7C7B\u578B\uFF0C\u5E76\u521B\u5EFAMapper\n\u0060\u0060\u0060csharp\n//\u83B7\u53D6\u6240\u6709view model\u7C7B\u578B\nvar types = Assembly.Load(\u0022Dpz.Core.Public.ViewModel\u0022).GetExportedTypes();\nvar config = new MapperConfigurationExpression();\n//\u4ECEview model\u4E2D\u8FC7\u6EE4\u51FA\u9ED8\u8BA4\u8F6C\u6362\u89C4\u5219\u7684\u7C7B\u578B\uFF0C\u5373\u5B9E\u73B0\u4E86IMapFrom\u003C\u003E\u63A5\u53E3\u7684\u7C7B\u578B\nvar maps = from x in types\n\tfrom y in x.GetInterfaces()\n\tlet faceType = y.GetTypeInfo()\n\twhere faceType.IsGenericType \u0026\u0026 y.GetGenericTypeDefinition() == typeof(IMapFrom\u003C\u003E) \u0026\u0026\n\t\t  !x.IsAbstract \u0026\u0026 !x.IsInterface\n\tselect new\n\t{\n\t\tSource = y.GetGenericArguments()[0],\n\t\tDestination = x\n\t};\n//\u521B\u5EFA\u9ED8\u8BA4\u89C4\u5219\u7684Mapper\nforeach (var item in maps)\n{\n\t//entity to view model\n\tconfig.CreateMap(item.Source, item.Destination);\n\t//view model to entity\n\tconfig.CreateMap(item.Destination, item.Source);\n}\n\u0060\u0060\u0060\n\n\u90A3\u4E48\u51FA\u73B0\u5C5E\u6027\u540D\u79F0\u3001\u7C7B\u578B\u4E0D\u4E00\u81F4\u7684\u60C5\u51B5\u600E\u4E48\u529E\u5462?\u8FD9\u91CC\u5C31\u9700\u8981\u81EA\u5B9A\u4E49\u8F6C\u6362\u89C4\u5219\u4E86\u3002\n\u6BD4\u5982\u97F3\u4E50Entity\uFF0C\u97F3\u4E50\u65F6\u957F\u662F\u0060long?\u0060\u7C7B\u578B\uFF1A\n\u0060\u0060\u0060csharp\npublic class Music:BaseEntity\n{\n\t/// \u003Csummary\u003E\n\t/// \u97F3\u4E50\u65F6\u957F\n\t/// \u003C/summary\u003E\n\tpublic long? Duration { get; set; }\n}\n\u0060\u0060\u0060\n\u800C\u97F3\u4E50ViewModel\u4E2D\uFF0C\u97F3\u4E50\u65F6\u957F\u662F\u0060TimeSpan?\u0060\u7C7B\u578B\uFF0C\u90A3\u4E48\u5C31\u8981\u7EE7\u627F\u0060IHaveCustomMapping\u0060\u63A5\u53E3\uFF0C\u5B9E\u73B0\u0060CreateMappings()\u0060\u65B9\u6CD5\u4E86\n\u0060\u0060\u0060csharp\npublic class VmMusic:IHaveCustomMapping\n{\n\tpublic string Id { get; set; }\n\t/// \u003Csummary\u003E\n\t/// \u97F3\u4E50\u65F6\u957F\n\t/// \u003C/summary\u003E\n\tpublic TimeSpan? Duration { get; set; }\n\t\n\tpublic void CreateMappings(MapperConfigurationExpression cfg)\n\t{\n\t\tvar mapper = new Mapper(new MapperConfiguration(cfg));\n\t\t//view model to entity\n\t\tcfg.CreateMap\u003CVmMusic, Music\u003E().ConvertUsing((viewModel, _) =\u003E\n\t\t{\n\t\t\tif (viewModel == null) return null;\n\t\t\tvar success = ObjectId.TryParse(viewModel.Id,out var oid);\n\t\t\tvar entity = new Music\n\t\t\t{\n\t\t\t\tId = success ? oid : ObjectId.Empty,\n\t\t\t\tDuration = viewModel.Duration?.Ticks\n\t\t\t};\n\t\t\treturn entity;\n\t\t});\n\t\t//entity to view model\n\t\tcfg.CreateMap\u003CMusic,VmMusic\u003E().ConvertUsing((entity, _) =\u003E\n\t\t{\n\t\t\tif (entity == null) return null;\n\t\t\tvar viewModel = new VmMusic\n\t\t\t{\n\t\t\t\tId = entity.Id.ToString(),\n\t\t\t\tDuration = entity.Duration.HasValue ? new TimeSpan(entity.Duration.Value) : null\n\t\t\t};\n\t\t\treturn viewModel;\n\t\t});\n\t}\n}\n\u0060\u0060\u0060\n\u7136\u540E\u4ECEview model\u4E2D\u8FC7\u6EE4\u51FA\u5B9E\u73B0\u4E86\u0060IHaveCustomMapping\u0060\u63A5\u53E3\u7684\u7C7B\u578B\uFF1A\n\u0060\u0060\u0060csharp\n//\u7B5B\u9009\u5B9E\u73B0\u4E86IHaveCustomMapping\u63A5\u53E3\u7684view model\nvar customMaps = from x in types\n\tfrom y in x.GetInterfaces()\n\twhere typeof(IHaveCustomMapping).IsAssignableFrom(x) \u0026\u0026\n\t\t  !x.GetTypeInfo().IsAbstract \u0026\u0026\n\t\t  !x.GetTypeInfo().IsInterface\n\tselect (IHaveCustomMapping) Activator.CreateInstance(x);\n//\u518D\u6267\u884CIHaveCustomMapping\u63A5\u53E3\u7684CreateMappings\u5B9E\u73B0\u65B9\u6CD5\nforeach (var item in customMaps)\n{\n\titem.CreateMappings(config);\n}\n\u0060\u0060\u0060\n\u6700\u540E\u5904\u7406\u4E00\u4E0B\u524D\u6587\u63D0\u5230\u7684\u0060ObjectId\u0060\u548C\u0060string\u0060\u7C7B\u578B\u7684\u95EE\u9898\uFF0C\u8FD8\u6709mongodb\u7684\u65F6\u95F4\u7C7B\u578B\u5B58\u50A8\u65F6UTC\u65F6\u95F4\uFF0C\u53D6\u503C\u7684\u65F6\u5019\u8F6C\u4E3A\u672C\u5730\u65F6\u95F4\uFF1A\n\u0060\u0060\u0060csharp\nconfig.CreateMap\u003Cstring, ObjectId\u003E().ConstructUsing((x, y) =\u003E\n\t!string.IsNullOrEmpty(x) \u0026\u0026 ObjectId.TryParse(x, out var oid) ? oid : ObjectId.Empty);\nconfig.CreateMap\u003CDateTime, DateTime\u003E().ConvertUsing((utc, local, context) =\u003E\n{\n\tif (local == new DateTime())\n\t{\n\t\tif (utc.Kind == DateTimeKind.Utc)\n\t\t\treturn utc.ToLocalTime();\n\t\treturn utc;\n\t}\n\tif (local.Kind == DateTimeKind.Local)\n\t\treturn utc.ToUniversalTime();\n\treturn local;\n});\n\n//\u521B\u5EFAMapper\nvar cfg = new MapperConfiguration(config);\nIMapper mapper = new Mapper(cfg);\n\u0060\u0060\u0060\n\n\u8FD9\u6837\u5C31\u4E0D\u7528\u6BCF\u6B21view model to entity\u6216\u8005entity to view model\u7684\u65F6\u5019\uFF0C\u90FD\u9700\u8981CreateMapper\u4E86\uFF0C\n\u76F4\u63A5\u8C03\u7528\u0060mapper.Map\u003CEntity\u003E(viewModel)\u0060||\u0060mapper.Map\u003CViewModel\u003E(entity)\u0060",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-11-29T12:17:37Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "Dpz.Core.WebApi",
        "createTime": "2021-11-29T20:22:21.572+08:00",
        "lastUpdateTime": "2021-11-29T20:22:21.572+08:00"
    }, {
        "id": "61a4c56e113c0c34ad9cb518",
        "blogTitle": "\u8FC7\u6EE4html\u6807\u7B7E\u3001\u5C5E\u6027\uFF0C\u9632\u6B62XSS\u653B\u51FB",
        "introduction": "\u4F7F\u7528HtmlSanitizer\u8FC7\u6EE4\u003Cb\u003Ehtml\u003C/b\u003E\u003Cb\u003E\u003Cmark\u003E\u6807\u7B7E\u003C/mark\u003E\u003C/b\u003E \u003Cb\u003E\u003Cmark\u003E\u5C5E\u6027\u003C/mark\u003E\u003C/b\u003E\uFF0C\u4EE5\u9632\u6B62\u003Cb\u003E\u003Cmark\u003EXSS\u003C/mark\u003E\u003C/b\u003E\u653B\u51FB",
        "blogContents": "\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a4b4cd113c0c34ad9cb506\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a4b500113c0c34ad9cb50e\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a4b50f113c0c34ad9cb511\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\u867D\u7136\u6211\u7F51\u7AD9\u4E2D\u7F16\u8F91\u7684\u5185\u5BB9\u5927\u90E8\u5206\u90FD\u662F\u7531Markdown\u8BED\u6CD5\u751F\u6210\u7684\uFF0C\u4F46\u662F\u8FD8\u662F\u6709\u4E00\u5C0F\u90E8\u5206\u529F\u80FDMarkdown\u65E0\u6CD5\u6EE1\u8DB3\uFF0C\u4F7F\u7528\u4E86\u539F\u59CB\u7684Html\uFF0C\u6240\u4EE5\u8003\u8651\u9700\u8981\u8FC7\u6EE4\u4E00\u4E9BHtml\u7684\u6807\u7B7E\u3001\u5C5E\u6027\u6765\u4FDD\u8BC1\u8BBF\u95EE\u7684\u5B89\u5168\u6027\uFF0C\u9632\u6B62XSS\u653B\u51FB\u3002\u003C/p\u003E\n\u003Cp\u003E\u6709\u5173XSS\u653B\u51FB\uFF0C\u53EF\u67E5\u770B\u003Ca href=\u0022https://security.stackexchange.com/questions/1368/how-does-xss-work\u0022 title=\u0022StackExChange\u0022\u003EStackExChange\u003C/a\u003E\u3002\u003C/p\u003E\n\u003Cp\u003E\u9996\u5148\u4ECENuget\u4ECE\u4E0B\u8F7D\u8FC7\u6EE4\u7EC4\u4EF6\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-bash\u0022\u003EInstall-Package HtmlSanitizer -Version 6.0.441\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u003Ca href=\u0022https://github.com/mganss/HtmlSanitizer\u0022 title=\u0022HtmlSanitizer\u0022\u003EHtmlSanitizer\u003C/a\u003E\u4E2D\u8BBE\u5B9A\u4E86\u4E00\u4E9B\u9ED8\u8BA4\u5141\u8BB8\u7684\u6807\u7B7E\u003Cbr\u003E\u003Ccode\u003Ea, abbr, acronym, address, area, article, aside, b, bdi, big, blockquote, br, button, caption, center, cite, code, col, colgroup, data, datalist, dd, del, details, dfn, dir, div, dl, dt, em, fieldset, figcaption, figure, font, footer, form, h1, h2, h3, h4, h5, h6, header, hr, i, img, input, ins, kbd, keygen, label, legend, li, main, map, mark, menu, menuitem, meter, nav, ol, optgroup, option, output, p, pre, progress, q, rp, rt, ruby, s, samp, section, select, small, span, strike, strong, sub, summary, sup, table, tbody, td, textarea, tfoot, th, thead, time, tr, tt, u, ul, var, wbr\u003C/code\u003E\u003C/p\u003E\n\u003Cp\u003E\u9ED8\u8BA4\u5141\u8BB8\u7684\u5C5E\u6027\u003Cbr\u003E\u003Ccode\u003Eabbr, accept, accept-charset, accesskey, action, align, alt, autocomplete, autosave, axis, bgcolor, border, cellpadding, cellspacing, challenge, char, charoff, charset, checked, cite, clear, color, cols, colspan, compact, contenteditable, coords, datetime, dir, disabled, draggable, dropzone, enctype, for, frame, headers, height, high, href, hreflang, hspace, ismap, keytype, label, lang, list, longdesc, low, max, maxlength, media, method, min, multiple, name, nohref, noshade, novalidate, nowrap, open, optimum, pattern, placeholder, prompt, pubdate, radiogroup, readonly, rel, required, rev, reversed, rows, rowspan, rules, scope, selected, shape, size, span, spellcheck, src, start, step, style, summary, tabindex, target, title, type, usemap, valign, value, vspace, width, wrap\u003C/code\u003E\u003C/p\u003E\n\u003Cp\u003E\u9ED8\u8BA4\u5141\u8BB8\u7684CSS\u5C5E\u6027\u003Cbr\u003E\u003Ccode\u003Ebackground, background-attachment, background-clip, background-color, background-image, background-origin, background-position, background-repeat, background-repeat-x, background-repeat-y, background-size, border, border-bottom, border-bottom-color, border-bottom-left-radius, border-bottom-right-radius, border-bottom-style, border-bottom-width, border-collapse, border-color, border-image, border-image-outset, border-image-repeat, border-image-slice, border-image-source, border-image-width, border-left, border-left-color, border-left-style, border-left-width, border-radius, border-right, border-right-color, border-right-style, border-right-width, border-spacing, border-style, border-top, border-top-color, border-top-left-radius, border-top-right-radius, border-top-style, border-top-width, border-width, bottom, caption-side, clear, clip, color, content, counter-increment, counter-reset, cursor, direction, display, empty-cells, float, font, font-family, font-feature-settings, font-kerning, font-language-override, font-size, font-size-adjust, font-stretch, font-style, font-synthesis, font-variant, font-variant-alternates, font-variant-caps, font-variant-east-asian, font-variant-ligatures, font-variant-numeric, font-variant-position, font-weight, height, left, letter-spacing, line-height, list-style, list-style-image, list-style-position, list-style-type, margin, margin-bottom, margin-left, margin-right, margin-top, max-height, max-width, min-height, min-width, opacity, orphans, outline, outline-color, outline-offset, outline-style, outline-width, overflow, overflow-wrap, overflow-x, overflow-y, padding, padding-bottom, padding-left, padding-right, padding-top, page-break-after, page-break-before, page-break-inside, quotes, right, table-layout, text-align, text-decoration, text-decoration-color, text-decoration-line, text-decoration-skip, text-decoration-style, text-indent, text-transform, top, unicode-bidi, vertical-align, visibility, white-space, widows, width, word-spacing, z-index\u003C/code\u003E\u003C/p\u003E\n\u003Cp\u003E\u9ED8\u8BA4\u7684URI\u65B9\u6848\u003Cbr\u003E\u003Ccode\u003Ehttp, https\u003C/code\u003E\u003C/p\u003E\n\u003Cp\u003EURI\u9ED8\u8BA4\u5305\u542B\u7684\u5C5E\u6027\u003Cbr\u003E\u003Ccode\u003Eaction, background, dynsrc, href, lowsrc, src\u003C/code\u003E\u003C/p\u003E\n\u003Cp\u003E\u67D0\u4E9B\u6587\u672C\u5185\u5BB9\u4E5F\u5C06\u4F1A\u8FDB\u884C\u53D8\u66F4\uFF0C\u6BD4\u5982\uFF1A\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003E4 \u0026lt; 5\u003C/code\u003E \u53D8\u6210 \u003Ccode\u003E4 \u0026amp;lt; 5\u003C/code\u003E\u003C/li\u003E\u003Cli\u003E\u003Ccode\u003E\u0026lt;SPAN\u0026gt;test\u0026lt;/p\u0026gt;\u003C/code\u003E \u53D8\u6210 \u003Ccode\u003E\u0026lt;span\u0026gt;test\u0026lt;p\u0026gt;\u0026lt;/p\u0026gt;\u0026lt;/span\u0026gt;\u003C/code\u003E\u003C/li\u003E\u003Cli\u003E\u003Ccode\u003E\u0026lt;span title=\u0026#39;test\u0026#39;\u0026gt;test\u0026lt;/span\u0026gt;\u003C/code\u003E \u53D8\u6210 \u003Ccode\u003E\u0026lt;span title=\u0026quot;test\u0026quot;\u0026gt;test\u0026lt;/span\u0026gt;\u003C/code\u003E\u003C/li\u003E\u003C/ul\u003E\n\u003Cp\u003E\u5982\u679C\u9ED8\u8BA4\u5141\u8BB8\u7684\u6807\u7B7E\u3001\u5C5E\u6027\u4E0D\u6EE1\u8DB3\u81EA\u5DF1\u7684\u9700\u6C42\uFF0C\u53EF\u4EE5\u81EA\u884C\u6DFB\u52A0\u6216\u8005\u79FB\u9664\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Evar sanitizer = new HtmlSanitizer();\n//\u4ECE\u9ED8\u8BA4\u7684Html\u6807\u7B7E\u7684\u5C5E\u6027\u4E2D\u6DFB\u52A0\u989D\u5916\u7684\u5C5E\u6027\nsanitizer.AllowedAttributes.Add(\u0026quot;id\u0026quot;);\n//\u4ECE\u9ED8\u8BA4\u7684Html\u6807\u7B7E\u7684\u5C5E\u6027\u4E2D\u79FB\u9664\u989D\u5916\u7684\u5C5E\u6027\nsanitizer.AllowedAttributes.Remove(\u0026quot;color\u0026quot;);\n\n//\u4ECE\u9ED8\u8BA4\u7684\u6807\u7B7E\u4E2D\u6DFB\u52A0\u989D\u5916\u7684\u6807\u7B7E\nsanitizer.AllowedTags.Add(\u0026quot;audio\u0026quot;);\n//\u4ECE\u9ED8\u8BA4\u7684\u6807\u7B7E\u4E2D\u79FB\u9664\u989D\u5916\u7684\u6807\u7B7E\nsanitizer.AllowedTags.Remove(\u0026quot;textarea\u0026quot;);\n\n//\u6DFB\u52A0\u9ED8\u8BA4css\u5C5E\u6027\nsanitizer.AllowedCssProperties.Add(\u0026quot;outline\u0026quot;)\uFF1B\n//\u79FB\u9664\u9ED8\u8BA4css\u5C5E\u6027\nsanitizer.AllowedCssProperties.Remove(\u0026quot;widows\u0026quot;)\uFF1B\n\n\n//\u5141\u8BB8 mailto \u8D85\u94FE\u63A5\nsanitizer.AllowedSchemes.Add(\u0026quot;mailto\u0026quot;);\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u56E0\u4E3A\u5F55\u97F3\uFF0C\u6587\u7AE0\u533A\u7684\u56FE\u7247\u5EF6\u8FDF\u52A0\u8F7D\uFF0C\u4EE5\u53CA\u4E0D\u5141\u8BB8\u9605\u8BFB\u533A\u4E0D\u5141\u8BB8\u51FA\u73B0\u8868\u5355\u63A7\u4EF6\uFF0C\u6240\u4EE5\u6211\u5728\u003Ccode\u003Eappsetting.json\u003C/code\u003E\u81EA\u5B9A\u4E49\u4E86\u4E00\u4E9B\u89C4\u5219\uFF1A\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-json\u0022\u003E  \u0026quot;XSS\u0026quot;: {\n    \u0026quot;Tags\u0026quot;: {\n      \u0026quot;Add\u0026quot;: [\n        \u0026quot;audio\u0026quot;\n      ],\n      \u0026quot;Remove\u0026quot;: [\n        \u0026quot;textarea\u0026quot;,\n        \u0026quot;input\u0026quot;,\n        \u0026quot;select\u0026quot;,\n        \u0026quot;button\u0026quot;,\n        \u0026quot;form\u0026quot;,\n        \u0026quot;optgroup\u0026quot;,\n        \u0026quot;option\u0026quot;\n      ]\n    },\n    \u0026quot;Attributes\u0026quot;: {\n      \u0026quot;Add\u0026quot;: [\n        \u0026quot;loading\u0026quot;,\n        \u0026quot;controls\u0026quot;,\n        \u0026quot;preload\u0026quot;,\n        \u0026quot;id\u0026quot;,\n        \u0026quot;name\u0026quot;\n      ],\n      \u0026quot;Remove\u0026quot;: []\n    },\n    \u0026quot;CSSProperties\u0026quot;: {\n      \u0026quot;Add\u0026quot;: [],\n      \u0026quot;Remove\u0026quot;: []\n    }\n  }\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u5B9A\u4E49C#\u7C7B\u578B\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic class CrossSiteRule\n{\n    public Allowed Tags { get; set; }\n\n    public Allowed Attributes { get; set; }\n\n    public Allowed CssProperties { get; set; }\n}\n\npublic class Allowed\n{\n    public string [] Add { get; set; }\n\n    public string [] Remove { get; set; }\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u5199\u4E00\u4E2A\u003Ccode\u003EIConfiguration\u003C/code\u003E\u7684\u6269\u5C55\u65B9\u6CD5\uFF0C\u8BFB\u53D6\u914D\u7F6E\uFF0C\u8FDB\u884C\u6DFB\u52A0\u6216\u79FB\u9664\u9ED8\u8BA4\u89C4\u5219\u7684\u64CD\u4F5C\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Epublic static IHtmlSanitizer CustomHtmlSanitizer(this IConfiguration configuration)\n{\n    var sanitizer = new HtmlSanitizer();\n\n    var rule = configuration.GetSection(\u0026quot;XSS\u0026quot;).Get\u0026lt;CrossSiteRule\u0026gt;();\n    if (rule != null)\n    {\n        if (rule.Attributes?.Add?.Any() == true)\n        {\n            rule.Attributes.Add.ForEach(x =\u0026gt; sanitizer.AllowedAttributes.Add(x));\n        }\n\n        if (rule.Attributes?.Remove?.Any() == true)\n        {\n            rule.Attributes.Remove.ForEach(x =\u0026gt; sanitizer.AllowedAttributes.Remove(x));\n        }\n\n        if (rule.Tags?.Add?.Any() == true)\n        {\n            rule.Tags.Add.ForEach(x =\u0026gt; sanitizer.AllowedTags.Add(x));\n        }\n\n        if (rule.Tags?.Remove?.Any() == true)\n        {\n            rule.Tags.Remove.ForEach(x =\u0026gt; sanitizer.AllowedTags.Remove(x));\n        }\n\n        if (rule.CssProperties?.Add?.Any() == true)\n        {\n            rule.CssProperties.Add.ForEach(x =\u0026gt; sanitizer.AllowedCssProperties.Add(x));\n        }\n\n        if (rule.CssProperties?.Remove?.Any() == true)\n        {\n            rule.CssProperties.Remove.ForEach(x =\u0026gt; sanitizer.AllowedAttributes.Remove(x));\n        }\n    }\n\n    return sanitizer;\n}\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp\u003E\u63A5\u4E0B\u6765\u5728\u663E\u793A\u7F16\u8F91\u533A\u57DF\u7684\u4F4D\u7F6E\u8FC7\u6EE4\u539F\u59CB\u7684Html\u003C/p\u003E\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Evar sanitizer = _configuration.CustomHtmlSanitizer();\nvar context = BrowsingContext.New(Configuration.Default);\nvar html = await context.OpenAsync(x =\u0026gt; x.Content(blog.BlogContents));\nvar links = html.GetElementsByTagName(\u0026quot;a\u0026quot;);\nlinks.ForEach(x =\u0026gt;\n{\n    var href = x.GetAttribute(\u0026quot;href\u0026quot;);\n    if (href != null \u0026amp;\u0026amp; !href.StartsWith(\u0026quot;javascript\u0026quot;, StringComparison.CurrentCultureIgnoreCase))\n    {\n        //\u628A\u6240\u6709\u8D85\u94FE\u63A5\u8BBE\u7F6E\u4E3A\u4EE5\u65B0\u6807\u7B7E\u9875\u7684\u5F62\u5F0F\u6253\u5F00\n        x.SetAttribute(\u0026quot;target\u0026quot;,\u0026quot;_blank\u0026quot;);\n    }\n});\nblog.BlogContents = sanitizer.Sanitize(html.Body?.InnerHtml ?? \u0026quot;\u0026quot;);\n\u003C/code\u003E\u003C/pre\u003E\n",
        "mainImage": "https://localhost:37701/Home/Image/61a4b4cd113c0c34ad9cb506",
        "commentCount": 0,
        "viewCount": 7,
        "tag": "asp.net core",
        "images": ["61a4b4cd113c0c34ad9cb506", "61a4b500113c0c34ad9cb50e", "61a4b50f113c0c34ad9cb511"],
        "markdown": "![](https://localhost:37701/Home/Image/61a4b4cd113c0c34ad9cb506)\n![](https://localhost:37701/Home/Image/61a4b500113c0c34ad9cb50e)\n![](https://localhost:37701/Home/Image/61a4b50f113c0c34ad9cb511)\n\n\u867D\u7136\u6211\u7F51\u7AD9\u4E2D\u7F16\u8F91\u7684\u5185\u5BB9\u5927\u90E8\u5206\u90FD\u662F\u7531Markdown\u8BED\u6CD5\u751F\u6210\u7684\uFF0C\u4F46\u662F\u8FD8\u662F\u6709\u4E00\u5C0F\u90E8\u5206\u529F\u80FDMarkdown\u65E0\u6CD5\u6EE1\u8DB3\uFF0C\u4F7F\u7528\u4E86\u539F\u59CB\u7684Html\uFF0C\u6240\u4EE5\u8003\u8651\u9700\u8981\u8FC7\u6EE4\u4E00\u4E9BHtml\u7684\u6807\u7B7E\u3001\u5C5E\u6027\u6765\u4FDD\u8BC1\u8BBF\u95EE\u7684\u5B89\u5168\u6027\uFF0C\u9632\u6B62XSS\u653B\u51FB\u3002\n\n\u6709\u5173XSS\u653B\u51FB\uFF0C\u53EF\u67E5\u770B[StackExChange](https://security.stackexchange.com/questions/1368/how-does-xss-work \u0022StackExChange\u0022)\u3002\n\n\u9996\u5148\u4ECENuget\u4ECE\u4E0B\u8F7D\u8FC7\u6EE4\u7EC4\u4EF6\n\u0060\u0060\u0060 bash\nInstall-Package HtmlSanitizer -Version 6.0.441\n\u0060\u0060\u0060\n\n[HtmlSanitizer](https://github.com/mganss/HtmlSanitizer \u0022HtmlSanitizer\u0022)\u4E2D\u8BBE\u5B9A\u4E86\u4E00\u4E9B\u9ED8\u8BA4\u5141\u8BB8\u7684\u6807\u7B7E\n\u0060a, abbr, acronym, address, area, article, aside, b, bdi, big, blockquote, br, button, caption, center, cite, code, col, colgroup, data, datalist, dd, del, details, dfn, dir, div, dl, dt, em, fieldset, figcaption, figure, font, footer, form, h1, h2, h3, h4, h5, h6, header, hr, i, img, input, ins, kbd, keygen, label, legend, li, main, map, mark, menu, menuitem, meter, nav, ol, optgroup, option, output, p, pre, progress, q, rp, rt, ruby, s, samp, section, select, small, span, strike, strong, sub, summary, sup, table, tbody, td, textarea, tfoot, th, thead, time, tr, tt, u, ul, var, wbr\u0060\n\n\u9ED8\u8BA4\u5141\u8BB8\u7684\u5C5E\u6027\n\u0060abbr, accept, accept-charset, accesskey, action, align, alt, autocomplete, autosave, axis, bgcolor, border, cellpadding, cellspacing, challenge, char, charoff, charset, checked, cite, clear, color, cols, colspan, compact, contenteditable, coords, datetime, dir, disabled, draggable, dropzone, enctype, for, frame, headers, height, high, href, hreflang, hspace, ismap, keytype, label, lang, list, longdesc, low, max, maxlength, media, method, min, multiple, name, nohref, noshade, novalidate, nowrap, open, optimum, pattern, placeholder, prompt, pubdate, radiogroup, readonly, rel, required, rev, reversed, rows, rowspan, rules, scope, selected, shape, size, span, spellcheck, src, start, step, style, summary, tabindex, target, title, type, usemap, valign, value, vspace, width, wrap\u0060\n\n\u9ED8\u8BA4\u5141\u8BB8\u7684CSS\u5C5E\u6027\n\u0060background, background-attachment, background-clip, background-color, background-image, background-origin, background-position, background-repeat, background-repeat-x, background-repeat-y, background-size, border, border-bottom, border-bottom-color, border-bottom-left-radius, border-bottom-right-radius, border-bottom-style, border-bottom-width, border-collapse, border-color, border-image, border-image-outset, border-image-repeat, border-image-slice, border-image-source, border-image-width, border-left, border-left-color, border-left-style, border-left-width, border-radius, border-right, border-right-color, border-right-style, border-right-width, border-spacing, border-style, border-top, border-top-color, border-top-left-radius, border-top-right-radius, border-top-style, border-top-width, border-width, bottom, caption-side, clear, clip, color, content, counter-increment, counter-reset, cursor, direction, display, empty-cells, float, font, font-family, font-feature-settings, font-kerning, font-language-override, font-size, font-size-adjust, font-stretch, font-style, font-synthesis, font-variant, font-variant-alternates, font-variant-caps, font-variant-east-asian, font-variant-ligatures, font-variant-numeric, font-variant-position, font-weight, height, left, letter-spacing, line-height, list-style, list-style-image, list-style-position, list-style-type, margin, margin-bottom, margin-left, margin-right, margin-top, max-height, max-width, min-height, min-width, opacity, orphans, outline, outline-color, outline-offset, outline-style, outline-width, overflow, overflow-wrap, overflow-x, overflow-y, padding, padding-bottom, padding-left, padding-right, padding-top, page-break-after, page-break-before, page-break-inside, quotes, right, table-layout, text-align, text-decoration, text-decoration-color, text-decoration-line, text-decoration-skip, text-decoration-style, text-indent, text-transform, top, unicode-bidi, vertical-align, visibility, white-space, widows, width, word-spacing, z-index\u0060\n\n\u9ED8\u8BA4\u7684URI\u65B9\u6848\n\u0060http, https\u0060\n\nURI\u9ED8\u8BA4\u5305\u542B\u7684\u5C5E\u6027\n\u0060action, background, dynsrc, href, lowsrc, src\u0060\n\n\u67D0\u4E9B\u6587\u672C\u5185\u5BB9\u4E5F\u5C06\u4F1A\u8FDB\u884C\u53D8\u66F4\uFF0C\u6BD4\u5982\uFF1A\n\u002B \u00604 \u003C 5\u0060 \u53D8\u6210 \u00604 \u0026lt; 5\u0060\n\u002B \u0060\u003CSPAN\u003Etest\u003C/p\u003E\u0060 \u53D8\u6210 \u0060\u003Cspan\u003Etest\u003Cp\u003E\u003C/p\u003E\u003C/span\u003E\u0060\n\u002B \u0060\u003Cspan title=\u0027test\u0027\u003Etest\u003C/span\u003E\u0060 \u53D8\u6210 \u0060\u003Cspan title=\u0022test\u0022\u003Etest\u003C/span\u003E\u0060\n\n\u5982\u679C\u9ED8\u8BA4\u5141\u8BB8\u7684\u6807\u7B7E\u3001\u5C5E\u6027\u4E0D\u6EE1\u8DB3\u81EA\u5DF1\u7684\u9700\u6C42\uFF0C\u53EF\u4EE5\u81EA\u884C\u6DFB\u52A0\u6216\u8005\u79FB\u9664\n\u0060\u0060\u0060 csharp\nvar sanitizer = new HtmlSanitizer();\n//\u4ECE\u9ED8\u8BA4\u7684Html\u6807\u7B7E\u7684\u5C5E\u6027\u4E2D\u6DFB\u52A0\u989D\u5916\u7684\u5C5E\u6027\nsanitizer.AllowedAttributes.Add(\u0022id\u0022);\n//\u4ECE\u9ED8\u8BA4\u7684Html\u6807\u7B7E\u7684\u5C5E\u6027\u4E2D\u79FB\u9664\u989D\u5916\u7684\u5C5E\u6027\nsanitizer.AllowedAttributes.Remove(\u0022color\u0022);\n\n//\u4ECE\u9ED8\u8BA4\u7684\u6807\u7B7E\u4E2D\u6DFB\u52A0\u989D\u5916\u7684\u6807\u7B7E\nsanitizer.AllowedTags.Add(\u0022audio\u0022);\n//\u4ECE\u9ED8\u8BA4\u7684\u6807\u7B7E\u4E2D\u79FB\u9664\u989D\u5916\u7684\u6807\u7B7E\nsanitizer.AllowedTags.Remove(\u0022textarea\u0022);\n\n//\u6DFB\u52A0\u9ED8\u8BA4css\u5C5E\u6027\nsanitizer.AllowedCssProperties.Add(\u0022outline\u0022)\uFF1B\n//\u79FB\u9664\u9ED8\u8BA4css\u5C5E\u6027\nsanitizer.AllowedCssProperties.Remove(\u0022widows\u0022)\uFF1B\n\n\n//\u5141\u8BB8 mailto \u8D85\u94FE\u63A5\nsanitizer.AllowedSchemes.Add(\u0022mailto\u0022);\n\u0060\u0060\u0060\n\n\u56E0\u4E3A\u5F55\u97F3\uFF0C\u6587\u7AE0\u533A\u7684\u56FE\u7247\u5EF6\u8FDF\u52A0\u8F7D\uFF0C\u4EE5\u53CA\u4E0D\u5141\u8BB8\u9605\u8BFB\u533A\u4E0D\u5141\u8BB8\u51FA\u73B0\u8868\u5355\u63A7\u4EF6\uFF0C\u6240\u4EE5\u6211\u5728\u0060appsetting.json\u0060\u81EA\u5B9A\u4E49\u4E86\u4E00\u4E9B\u89C4\u5219\uFF1A\n\u0060\u0060\u0060 json\n  \u0022XSS\u0022: {\n    \u0022Tags\u0022: {\n      \u0022Add\u0022: [\n        \u0022audio\u0022\n      ],\n      \u0022Remove\u0022: [\n        \u0022textarea\u0022,\n        \u0022input\u0022,\n        \u0022select\u0022,\n        \u0022button\u0022,\n        \u0022form\u0022,\n        \u0022optgroup\u0022,\n        \u0022option\u0022\n      ]\n    },\n    \u0022Attributes\u0022: {\n      \u0022Add\u0022: [\n        \u0022loading\u0022,\n        \u0022controls\u0022,\n        \u0022preload\u0022,\n        \u0022id\u0022,\n        \u0022name\u0022\n      ],\n      \u0022Remove\u0022: []\n    },\n    \u0022CSSProperties\u0022: {\n      \u0022Add\u0022: [],\n      \u0022Remove\u0022: []\n    }\n  }\n\u0060\u0060\u0060\n\n\u5B9A\u4E49C#\u7C7B\u578B\n\u0060\u0060\u0060 csharp\npublic class CrossSiteRule\n{\n\tpublic Allowed Tags { get; set; }\n\t\n\tpublic Allowed Attributes { get; set; }\n\t\n\tpublic Allowed CssProperties { get; set; }\n}\n\npublic class Allowed\n{\n\tpublic string [] Add { get; set; }\n\t\n\tpublic string [] Remove { get; set; }\n}\n\u0060\u0060\u0060\n\n\u5199\u4E00\u4E2A\u0060IConfiguration\u0060\u7684\u6269\u5C55\u65B9\u6CD5\uFF0C\u8BFB\u53D6\u914D\u7F6E\uFF0C\u8FDB\u884C\u6DFB\u52A0\u6216\u79FB\u9664\u9ED8\u8BA4\u89C4\u5219\u7684\u64CD\u4F5C\n\u0060\u0060\u0060 csharp\npublic static IHtmlSanitizer CustomHtmlSanitizer(this IConfiguration configuration)\n{\n\tvar sanitizer = new HtmlSanitizer();\n\n\tvar rule = configuration.GetSection(\u0022XSS\u0022).Get\u003CCrossSiteRule\u003E();\n\tif (rule != null)\n\t{\n\t\tif (rule.Attributes?.Add?.Any() == true)\n\t\t{\n\t\t\trule.Attributes.Add.ForEach(x =\u003E sanitizer.AllowedAttributes.Add(x));\n\t\t}\n\n\t\tif (rule.Attributes?.Remove?.Any() == true)\n\t\t{\n\t\t\trule.Attributes.Remove.ForEach(x =\u003E sanitizer.AllowedAttributes.Remove(x));\n\t\t}\n\n\t\tif (rule.Tags?.Add?.Any() == true)\n\t\t{\n\t\t\trule.Tags.Add.ForEach(x =\u003E sanitizer.AllowedTags.Add(x));\n\t\t}\n\n\t\tif (rule.Tags?.Remove?.Any() == true)\n\t\t{\n\t\t\trule.Tags.Remove.ForEach(x =\u003E sanitizer.AllowedTags.Remove(x));\n\t\t}\n\n\t\tif (rule.CssProperties?.Add?.Any() == true)\n\t\t{\n\t\t\trule.CssProperties.Add.ForEach(x =\u003E sanitizer.AllowedCssProperties.Add(x));\n\t\t}\n\n\t\tif (rule.CssProperties?.Remove?.Any() == true)\n\t\t{\n\t\t\trule.CssProperties.Remove.ForEach(x =\u003E sanitizer.AllowedAttributes.Remove(x));\n\t\t}\n\t}\n\n\treturn sanitizer;\n}\n\u0060\u0060\u0060\n\n\u63A5\u4E0B\u6765\u5728\u663E\u793A\u7F16\u8F91\u533A\u57DF\u7684\u4F4D\u7F6E\u8FC7\u6EE4\u539F\u59CB\u7684Html\n\u0060\u0060\u0060 csharp\nvar sanitizer = _configuration.CustomHtmlSanitizer();\nvar context = BrowsingContext.New(Configuration.Default);\nvar html = await context.OpenAsync(x =\u003E x.Content(blog.BlogContents));\nvar links = html.GetElementsByTagName(\u0022a\u0022);\nlinks.ForEach(x =\u003E\n{\n\tvar href = x.GetAttribute(\u0022href\u0022);\n\tif (href != null \u0026\u0026 !href.StartsWith(\u0022javascript\u0022, StringComparison.CurrentCultureIgnoreCase))\n\t{\n\t\t//\u628A\u6240\u6709\u8D85\u94FE\u63A5\u8BBE\u7F6E\u4E3A\u4EE5\u65B0\u6807\u7B7E\u9875\u7684\u5F62\u5F0F\u6253\u5F00\n\t\tx.SetAttribute(\u0022target\u0022,\u0022_blank\u0022);\n\t}\n});\nblog.BlogContents = sanitizer.Sanitize(html.Body?.InnerHtml ?? \u0022\u0022);\n\u0060\u0060\u0060",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-11-29T12:17:37Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "Dpz.Core.WebApi",
        "createTime": "2021-11-29T20:19:58.971+08:00",
        "lastUpdateTime": "2021-11-29T20:19:58.981+08:00"
    }, {
        "id": "61a4c101a9277569fe796e53",
        "blogTitle": "\u9996\u6279\u9A81\u9F998 Gen1\u65D7\u8230\u4E09\u661FGalaxy S22\u53D1\u5E03\u65F6\u95F4\u66DD\u5149",
        "introduction": "\u003Cp\u003E\u4F5C\u4E3A2022\u5E74\u5B89\u5353\u9635\u8425\u6700\u5F3AU\uFF0C\u9AD8\u901A\u9A81\u9F998 Gen1\u5C06\u4E8E12\u67081\u65E5\u5728\u9AD8\u901A\u9A81\u9F99\u5CF0\u4F1A\u4E0A\u767B\u573A\uFF0C\u5728\u9996\u6279\u642D\u8F7D\u9A81\u9F998 Gen1\u5904\u7406\u5668\u7684\u65D7\u8230\u4E2D\uFF0C\u9664\u56FD\u4EA7\u5382\u5546\u5916\uFF0C\u81EA\u7136\u5C11\u4E0D\u4E86\u4E09\u661F\u7684\u4F4D\u7F6E\u3002\u4ECA\u65E5\uFF0C\u636E\u6570\u7801\u535A\u4E3B@i\u51B0\u5B87\u5B99 \u6D88\u606F\uFF0C\u003Cstrong\u003E\u4E09\u661FS22\u7CFB\u5217\u5C06\u5728\u660E\u5E742\u67088\u65E5\u5168\u7403\u53D1\u5E03\uFF0C2\u670818\u65E5\u6B63\u5F0F\u5F00\u552E\uFF0C\u003C/strong\u003E\u4E0D\u8FC7\u56FD\u884C\u7248\u53D1\u5E03\u548C\u5F00\u552E\u65F6\u95F4\u76EE\u524D\u4ECD\u662F\u672A\u77E5\uFF0C\u4F46\u6309\u5F80\u5E74\u60EF\u4F8B\uFF0C\u4E09\u661F\u5168\u7403\u548C\u56FD\u5185\u53D1\u5E03\u4F1A\u65F6\u95F4\u4E0D\u4F1A\u95F4\u9694\u592A\u4E45\u3002\u003C/p\u003E ",
        "blogContents": "\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a4c100a9277569fe796e4b\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\u503C\u5F97\u4E00\u63D0\u7684\u662F\uFF0C\u8BE5\u535A\u4E3B\u8FD8\u66DD\u5149\u4E86\u4E09\u661FS22\u548CS22\u002B\u7684\u76F8\u673A\u53C2\u6570\uFF0C\u540E\u7F6E\u4E09\u6444\u7EC4\u5408\uFF0C\u003Cstrong\u003E\u5305\u62EC50MP\u4E3B\u6444\u002B10MP\u957F\u7126\u002B12MP\u8D85\u5E7F\u89D2\u955C\u5934\uFF0C\u5176\u4E2D\u4E3B\u6444\u4E3A1/1.57\u82F1\u5BF8CMOS\uFF0C\u6216\u4E3A\u6B64\u524D\u4E09\u661F\u53D1\u5E03\u7684GN5\u3002\u003C/strong\u003E\u003C/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a4c101a9277569fe796e4d\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\u81F3\u4E8ES22 Ultra\uFF0C\u6B64\u524D\u6709\u7206\u6599\u79F0\uFF0C\u8BE5\u673A\u540E\u7F6E108MP\u4E3B\u6444\u30011000\u4E07\u30011000\u4E07\u548C1200\u4E07\u5171\u56DB\u9897\u6444\u50CF\u5934\uFF0C\u4E3B\u6444108MP\u7684\u4F20\u611F\u5668\u578B\u53F7\u4E3AHM3\uFF0C\u62E5\u67091/1.33\u82F1\u5BF8\u8D85\u5927\u5E95\uFF0C\u5149\u5708\u4E3Af/1.8\uFF0C\u5355\u4F4D\u50CF\u7D20\u9762\u79EF\u4E3A0.8\u03BCm\u3002\u003C/p\u003E\n\u003Cp\u003E\u76EE\u524D\uFF0C\u4E09\u661FS22\u7CFB\u5217\u4E09\u6B3E\u673A\u578B\u7684\u5C4F\u5E55\u819C\u3001\u955C\u5934\u819C\u7B49\u914D\u4EF6\u5DF2\u76F8\u7EE7\u66DD\u5149\uFF0C\u6839\u636E\u56FE\u7247\u663E\u793A\uFF0C\u003Cstrong\u003E\u4E09\u661FS22\u5168\u7CFB\u4F3C\u4E4E\u90FD\u914D\u5907\u4E86\u66F4\u7A84\u7684\u8FB9\u6846\u8BBE\u8BA1\uFF0C\u5E76\u4E14\u56DB\u8FB9\u7684\u9ED1\u8FB9\u533A\u57DF\u5B8C\u5168\u7B49\u5BBD\uFF0CR\u89D2\u8BBE\u8BA1\u975E\u5E38\u8212\u9002\u3002\u003C/strong\u003E\u003C/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a4c101a9277569fe796e4f\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022https://localhost:37701/Home/Image/61a4c101a9277569fe796e51\u0022 alt=\u0022\u0022\u003E\u003C/p\u003E\n",
        "mainImage": "/Home/Image/61a4c100a9277569fe796e4b",
        "commentCount": 0,
        "viewCount": 4,
        "tag": "cnBeta",
        "images": ["61a4c100a9277569fe796e4b", "61a4c101a9277569fe796e4d", "61a4c101a9277569fe796e4f", "61a4c101a9277569fe796e51"],
        "markdown": "\n![](https://localhost:37701/Home/Image/61a4c100a9277569fe796e4b)\n\n\u503C\u5F97\u4E00\u63D0\u7684\u662F\uFF0C\u8BE5\u535A\u4E3B\u8FD8\u66DD\u5149\u4E86\u4E09\u661FS22\u548CS22\u002B\u7684\u76F8\u673A\u53C2\u6570\uFF0C\u540E\u7F6E\u4E09\u6444\u7EC4\u5408\uFF0C**\u5305\u62EC50MP\u4E3B\u6444\u002B10MP\u957F\u7126\u002B12MP\u8D85\u5E7F\u89D2\u955C\u5934\uFF0C\u5176\u4E2D\u4E3B\u6444\u4E3A1/1.57\u82F1\u5BF8CMOS\uFF0C\u6216\u4E3A\u6B64\u524D\u4E09\u661F\u53D1\u5E03\u7684GN5\u3002**\n\n![](https://localhost:37701/Home/Image/61a4c101a9277569fe796e4d)\n\n\u81F3\u4E8ES22 Ultra\uFF0C\u6B64\u524D\u6709\u7206\u6599\u79F0\uFF0C\u8BE5\u673A\u540E\u7F6E108MP\u4E3B\u6444\u30011000\u4E07\u30011000\u4E07\u548C1200\u4E07\u5171\u56DB\u9897\u6444\u50CF\u5934\uFF0C\u4E3B\u6444108MP\u7684\u4F20\u611F\u5668\u578B\u53F7\u4E3AHM3\uFF0C\u62E5\u67091/1.33\u82F1\u5BF8\u8D85\u5927\u5E95\uFF0C\u5149\u5708\u4E3Af/1.8\uFF0C\u5355\u4F4D\u50CF\u7D20\u9762\u79EF\u4E3A0.8\u03BCm\u3002\n\n\u76EE\u524D\uFF0C\u4E09\u661FS22\u7CFB\u5217\u4E09\u6B3E\u673A\u578B\u7684\u5C4F\u5E55\u819C\u3001\u955C\u5934\u819C\u7B49\u914D\u4EF6\u5DF2\u76F8\u7EE7\u66DD\u5149\uFF0C\u6839\u636E\u56FE\u7247\u663E\u793A\uFF0C**\u4E09\u661FS22\u5168\u7CFB\u4F3C\u4E4E\u90FD\u914D\u5907\u4E86\u66F4\u7A84\u7684\u8FB9\u6846\u8BBE\u8BA1\uFF0C\u5E76\u4E14\u56DB\u8FB9\u7684\u9ED1\u8FB9\u533A\u57DF\u5B8C\u5168\u7B49\u5BBD\uFF0CR\u89D2\u8BBE\u8BA1\u975E\u5E38\u8212\u9002\u3002**\n\n![](https://localhost:37701/Home/Image/61a4c101a9277569fe796e4f)\n\n![](https://localhost:37701/Home/Image/61a4c101a9277569fe796e51)\n",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-11-29T14:13:58Z",
            "sign": "\u793E\u6050\u672C\u6050\uFF0C\u522B\u8DDF\u6211\u8BF4\u8BDD\uFF0C\u6211\u6015\u7684\u662F\u4F60\u81EA\u5DF1\u5C34\u5C2C\uFF0C\u6211\u8FD8\u6D51\u8EAB\u4E0D\u8212\u670D",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "https://www.cnbeta.com/articles/tech/1208693.htm",
        "createTime": "2021-11-29T19:33:45+08:00",
        "lastUpdateTime": "2021-11-29T22:41:51.767+08:00"
    }, {
        "id": "61905b1a2e02c0277448711b",
        "blogTitle": "\u6D4B\u8BD5\u7684\u4E00\u7BC7\u6587\u7AE0\uFF0C\u4F60\u6765\u770B\u770B\uFF1F",
        "introduction": "1111111111",
        "blogContents": "\u003Cp\u003E\u003Ccode\u003Eprivate\u003C/code\u003E\u003C/p\u003E\r\n\u003Cpre\u003E\u003Ccode class=\u0022lang-csharp\u0022\u003Eprivate static void SayHi()\r\n{\r\n    Console.WriteLine(\u0026quot;hello,world\u0026quot;);\r\n}\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Cp\u003E\u003Ca href=\u0022https://k.sina.cn/article_6141086679_m16e098bd7033011bpn.html?from=news\u0026amp;subch=onews\u0026amp;wm=3200\u0022 title=\u0022\u4E0D\u77E5\u9053\u662F\u54EA\u513F\u0022\u003E\u4E0D\u77E5\u9053\u662F\u54EA\u513F\u003C/a\u003E\u003C/p\u003E\r\n",
        "mainImage": null,
        "commentCount": 3,
        "viewCount": 11,
        "tag": "123123",
        "images": [],
        "markdown": "\u0060private\u0060\r\n\r\n\u0060\u0060\u0060 csharp\r\nprivate static void SayHi()\r\n{\r\n\tConsole.WriteLine(\u0022hello,world\u0022);\r\n}\r\n\u0060\u0060\u0060\r\n\r\n[\u4E0D\u77E5\u9053\u662F\u54EA\u513F](https://k.sina.cn/article_6141086679_m16e098bd7033011bpn.html?from=news\u0026subch=onews\u0026wm=3200 \u0022\u4E0D\u77E5\u9053\u662F\u54EA\u513F\u0022)",
        "author": {
            "id": "pengqian",
            "name": "\u88AB\u6253\u65AD\u7684\u72D7\u817F",
            "lastAccessTime": "2021-11-12T21:01:01Z",
            "sign": "",
            "avatar": "/Home/Image/618ed60bd368737e676f5def",
            "sex": 0,
            "permissions": 2,
            "enable": false,
            "key": "0cec46b596834c15810f870c6afcccf2"
        },
        "isPublish": true,
        "form": "\u7528\u6237\u524D\u53F0",
        "createTime": "2021-11-14T08:40:58.643+08:00",
        "lastUpdateTime": "2021-11-18T03:28:06.385+08:00"
    }]
}